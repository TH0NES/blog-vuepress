(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,i,s=e[0],l=e[1],c=e[2],p=0,d=[];p<s.length;p++)i=s[p],Object.prototype.hasOwnProperty.call(o,i)&&o[i]&&d.push(o[i][0]),o[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(u&&u(e);d.length;)d.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==o[l]&&(r=!1)}r&&(a.splice(e--,1),n=i(i.s=t[0]))}return n}var r={},o={1:0},a=[];function i(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.e=function(n){var e=[],t=o[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=o[n]=[e,r]}));e.push(t[2]=r);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(n){return i.p+"assets/js/"+({}[n]||n)+"."+{2:"778d2fa8",3:"edfa3065",4:"6e64dfe5",5:"6a73d504",6:"624a029c",7:"7c77f53c",8:"2b17cdb3",9:"8488f879",10:"d2b18a5d",11:"c2d489b2",12:"4405f014",13:"9897f59c",14:"bd933c2d",15:"b0808ff0",16:"d977dc29",17:"0e4d2fe0",18:"fbba2dc7",19:"6cd03d48",20:"5898904d",21:"79a4fd7b",22:"6270f2a9",23:"2b3b355d",24:"42539ec5",25:"77342626",26:"266c57d2",27:"25e504ac",28:"aa83c90e",29:"26de06d7",30:"3f3a8c9b",31:"6438b674",32:"6e8407a9",33:"2c741ffe",34:"15377d40",35:"6729fb04",36:"3e108a72",37:"52a93f38",38:"773d206b",39:"97bc89c9",40:"d25f8604",41:"42d8ab6b",42:"4608b0fe",43:"cb86f1ad",44:"510d49f7",45:"8a507cdc",46:"b696780b",47:"fbad42a2",48:"56383b2f",49:"bc1afbab",50:"15325e66",51:"d51be4fd",52:"08dcc486",53:"bce9f1f4",54:"555f6feb",55:"d61972d7",56:"eadd87e6",57:"071c3d42",58:"84bc7479",59:"3a4ae366",60:"9adbe0fa",61:"66e032c4",62:"c290c2de",63:"b0b456e0",64:"aecf211c",65:"8c5d3171",66:"e4469d2f",67:"de4ff045",68:"1d85caf0",69:"bec2392a",70:"2961552c",71:"cde0e6cc",72:"0bee0552",73:"3014aed3",74:"e255eaf9",75:"b667279c",76:"0d6de82e",77:"56abc049",78:"c6531637"}[n]+".js"}(n);var l=new Error;a=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=o[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+a+")",l.name="ChunkLoadError",l.type=r,l.request=a,t[1](l)}o[n]=void 0}};var c=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(e)},i.m=n,i.c=r,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)i.d(t,r,function(e){return n[e]}.bind(null,r));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/blog-vuepress/",i.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var u=l;a.push([194,0]),t()}([function(n,e,t){var r=t(2),o=t(21).f,a=t(12),i=t(9),s=t(77),l=t(121),c=t(73);n.exports=function(n,e){var t,u,p,d,f,m=n.target,h=n.global,v=n.stat;if(t=h?r:v?r[m]||s(m,{}):(r[m]||{}).prototype)for(u in e){if(d=e[u],p=n.noTargetGet?(f=o(t,u))&&f.value:t[u],!c(h?u:m+(v?".":"#")+u,n.forced)&&void 0!==p){if(typeof d==typeof p)continue;l(d,p)}(n.sham||p&&p.sham)&&a(d,"sham",!0),i(t,u,d,n)}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e,t){var r=t(2),o=t(75),a=t(7),i=t(52),s=t(79),l=t(115),c=o("wks"),u=r.Symbol,p=l?u:u&&u.withoutSetter||i;n.exports=function(n){return a(c,n)||(s&&a(u,n)?c[n]=u[n]:c[n]=p("Symbol."+n)),c[n]}},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e,t){var r=t(4);n.exports=function(n){if(!r(n))throw TypeError(String(n)+" is not an object");return n}},function(n,e,t){var r=t(1);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},function(n,e,t){var r=t(6),o=t(114),a=t(5),i=t(39),s=Object.defineProperty;e.f=r?s:function(n,e,t){if(a(n),e=i(e,!0),a(t),o)try{return s(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(2),o=t(12),a=t(7),i=t(77),s=t(82),l=t(31),c=l.get,u=l.enforce,p=String(String).split("String");(n.exports=function(n,e,t,s){var l,c=!!s&&!!s.unsafe,d=!!s&&!!s.enumerable,f=!!s&&!!s.noTargetGet;"function"==typeof t&&("string"!=typeof e||a(t,"name")||o(t,"name",e),(l=u(t)).source||(l.source=p.join("string"==typeof e?e:""))),n!==r?(c?!f&&n[e]&&(d=!0):delete n[e],d?n[e]=t:o(n,e,t)):d?n[e]=t:i(e,t)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(n,e,t){var r=t(87),o=t(9),a=t(204);r||o(Object.prototype,"toString",a,{unsafe:!0})},function(n,e,t){var r=t(19);n.exports=function(n){return Object(r(n))}},function(n,e,t){var r=t(6),o=t(8),a=t(35);n.exports=r?function(n,e,t){return o.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(46),o=Math.min;n.exports=function(n){return n>0?o(r(n),9007199254740991):0}},function(n,e,t){var r=t(38),o=t(19);n.exports=function(n){return r(o(n))}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(144),o="object"==typeof self&&self&&self.Object===Object&&self,a=r||o||Function("return this")();n.exports=a},function(n,e,t){var r=t(6),o=t(1),a=t(7),i=Object.defineProperty,s={},l=function(n){throw n};n.exports=function(n,e){if(a(s,n))return s[n];e||(e={});var t=[][n],c=!!a(e,"ACCESSORS")&&e.ACCESSORS,u=a(e,0)?e[0]:l,p=a(e,1)?e[1]:void 0;return s[n]=!!t&&!o((function(){if(c&&!r)return!0;var n={length:-1};c?i(n,1,{enumerable:!0,get:l}):n[1]=1,t.call(n,u,p)}))}},function(n,e,t){var r=t(119),o=t(2),a=function(n){return"function"==typeof n?n:void 0};n.exports=function(n,e){return arguments.length<2?a(r[n])||a(o[n]):r[n]&&r[n][e]||o[n]&&o[n][e]}},function(n,e){n.exports=function(n){if(null==n)throw TypeError("Can't call method on "+n);return n}},function(n,e){n.exports=!1},function(n,e,t){var r=t(6),o=t(83),a=t(35),i=t(14),s=t(39),l=t(7),c=t(114),u=Object.getOwnPropertyDescriptor;e.f=r?u:function(n,e){if(n=i(n),e=s(e,!0),c)try{return u(n,e)}catch(n){}if(l(n,e))return a(!o.f.call(n,e),n[e])}},function(n,e){var t={}.toString;n.exports=function(n){return t.call(n).slice(8,-1)}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(String(n)+" is not a function");return n}},function(n,e,t){var r=t(230),o=t(233);n.exports=function(n,e){var t=o(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";function r(n,e,t,r,o,a,i,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),a&&(c._scopeId="data-v-"+a),i?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),o&&o.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},c._ssrRegister=l):o&&(l=s?function(){o.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(n,e){return l.call(e),u(n,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(0),o=t(32).filter,a=t(57),i=t(17),s=a("filter"),l=i("filter");r({target:"Array",proto:!0,forced:!s||!l},{filter:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(110).charAt,o=t(31),a=t(120),i=o.set,s=o.getterFor("String Iterator");a(String,"String",(function(n){i(this,{type:"String Iterator",string:String(n),index:0})}),(function(){var n,e=s(this),t=e.string,o=e.index;return o>=t.length?{value:void 0,done:!0}:(n=r(t,o),e.index+=n.length,{value:n,done:!1})}))},function(n,e,t){var r,o=t(5),a=t(174),i=t(81),s=t(40),l=t(118),c=t(78),u=t(54),p=u("IE_PROTO"),d=function(){},f=function(n){return"<script>"+n+"<\/script>"},m=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(n){}var n,e;m=r?function(n){n.write(f("")),n.close();var e=n.parentWindow.Object;return n=null,e}(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(f("document.F=Object")),n.close(),n.F);for(var t=i.length;t--;)delete m.prototype[i[t]];return m()};s[p]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(d.prototype=o(n),t=new d,d.prototype=null,t[p]=n):t=m(),void 0===e?t:a(t,e)}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";var r=t(0),o=t(74);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(n,e,t){var r,o,a,i=t(195),s=t(2),l=t(4),c=t(12),u=t(7),p=t(76),d=t(54),f=t(40),m=s.WeakMap;if(i){var h=p.state||(p.state=new m),v=h.get,g=h.has,b=h.set;r=function(n,e){return e.facade=n,b.call(h,n,e),e},o=function(n){return v.call(h,n)||{}},a=function(n){return g.call(h,n)}}else{var y=d("state");f[y]=!0,r=function(n,e){return e.facade=n,c(n,y,e),e},o=function(n){return u(n,y)?n[y]:{}},a=function(n){return u(n,y)}}n.exports={set:r,get:o,has:a,enforce:function(n){return a(n)?o(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=o(e)).type!==n)throw TypeError("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var r=t(48),o=t(38),a=t(11),i=t(13),s=t(109),l=[].push,c=function(n){var e=1==n,t=2==n,c=3==n,u=4==n,p=6==n,d=7==n,f=5==n||p;return function(m,h,v,g){for(var b,y,x=a(m),w=o(x),_=r(h,v,3),k=i(w.length),j=0,T=g||s,S=e?T(m,k):t||d?T(m,0):void 0;k>j;j++)if((f||j in w)&&(y=_(b=w[j],j,x),n))if(e)S[j]=y;else if(y)switch(n){case 3:return!0;case 5:return b;case 6:return j;case 2:l.call(S,b)}else switch(n){case 4:return!1;case 7:l.call(S,b)}return p?-1:c||u?u:S}};n.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterOut:c(7)}},function(n,e,t){var r=t(2),o=t(133),a=t(106),i=t(12),s=t(3),l=s("iterator"),c=s("toStringTag"),u=a.values;for(var p in o){var d=r[p],f=d&&d.prototype;if(f){if(f[l]!==u)try{i(f,l,u)}catch(n){f[l]=u}if(f[c]||i(f,c,p),o[p])for(var m in a)if(f[m]!==a[m])try{i(f,m,a[m])}catch(n){f[m]=a[m]}}}},function(n,e,t){"use strict";var r=t(1);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){throw 1},1)}))}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var r=t(22);n.exports=Array.isArray||function(n){return"Array"==r(n)}},function(n,e,t){var r=t(42),o=t(215),a=t(216),i=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":i&&i in Object(n)?o(n):a(n)}},function(n,e,t){var r=t(1),o=t(22),a="".split;n.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(n){return"String"==o(n)?a.call(n,""):Object(n)}:Object},function(n,e,t){var r=t(4);n.exports=function(n,e){if(!r(n))return n;var t,o;if(e&&"function"==typeof(t=n.toString)&&!r(o=t.call(n)))return o;if("function"==typeof(t=n.valueOf)&&!r(o=t.call(n)))return o;if(!e&&"function"==typeof(t=n.toString)&&!r(o=t.call(n)))return o;throw TypeError("Can't convert object to primitive value")}},function(n,e){n.exports={}},function(n,e){n.exports={}},function(n,e,t){var r=t(16).Symbol;n.exports=r},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(72);var r=t(44);t(51),t(60),t(89),t(142),t(10),t(27),t(33);var o=t(66);function a(n){return function(n){if(Array.isArray(n))return Object(r.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(n)||Object(o.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(171),o=t(5),a=t(11),i=t(13),s=t(46),l=t(19),c=t(177),u=t(172),p=Math.max,d=Math.min,f=Math.floor,m=/\$([$&'`]|\d\d?|<[^>]*>)/g,h=/\$([$&'`]|\d\d?)/g;r("replace",2,(function(n,e,t,r){var v=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,g=r.REPLACE_KEEPS_$0,b=v?"$":"$0";return[function(t,r){var o=l(this),a=null==t?void 0:t[n];return void 0!==a?a.call(t,o,r):e.call(String(o),t,r)},function(n,r){if(!v&&g||"string"==typeof r&&-1===r.indexOf(b)){var a=t(e,n,this,r);if(a.done)return a.value}var l=o(n),f=String(this),m="function"==typeof r;m||(r=String(r));var h=l.global;if(h){var x=l.unicode;l.lastIndex=0}for(var w=[];;){var _=u(l,f);if(null===_)break;if(w.push(_),!h)break;""===String(_[0])&&(l.lastIndex=c(f,i(l.lastIndex),x))}for(var k,j="",T=0,S=0;S<w.length;S++){_=w[S];for(var C=String(_[0]),I=p(d(s(_.index),f.length),0),P=[],E=1;E<_.length;E++)P.push(void 0===(k=_[E])?k:String(k));var A=_.groups;if(m){var z=[C].concat(P,I,f);void 0!==A&&z.push(A);var O=String(r.apply(void 0,z))}else O=y(C,f,I,P,A,r);I>=T&&(j+=f.slice(T,I)+O,T=I+C.length)}return j+f.slice(T)}];function y(n,t,r,o,i,s){var l=r+n.length,c=o.length,u=h;return void 0!==i&&(i=a(i),u=m),e.call(s,u,(function(e,a){var s;switch(a.charAt(0)){case"$":return"$";case"&":return n;case"`":return t.slice(0,r);case"'":return t.slice(l);case"<":s=i[a.slice(1,-1)];break;default:var u=+a;if(0===u)return e;if(u>c){var p=f(u/10);return 0===p?e:p<=c?void 0===o[p-1]?a.charAt(1):o[p-1]+a.charAt(1):e}s=o[u-1]}return void 0===s?"":s}))}}))},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?r:t)(n)}},function(n,e,t){var r=t(8).f,o=t(7),a=t(3)("toStringTag");n.exports=function(n,e,t){n&&!o(n=t?n:n.prototype,a)&&r(n,a,{configurable:!0,value:e})}},function(n,e,t){var r=t(23);n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 0:return function(){return n.call(e)};case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,o){return n.call(e,t,r,o)}}return function(){return n.apply(e,arguments)}}},function(n,e,t){"use strict";var r=t(0),o=t(4),a=t(36),i=t(117),s=t(13),l=t(14),c=t(58),u=t(3),p=t(57),d=t(17),f=p("slice"),m=d("slice",{ACCESSORS:!0,0:0,1:2}),h=u("species"),v=[].slice,g=Math.max;r({target:"Array",proto:!0,forced:!f||!m},{slice:function(n,e){var t,r,u,p=l(this),d=s(p.length),f=i(n,d),m=i(void 0===e?d:e,d);if(a(p)&&("function"!=typeof(t=p.constructor)||t!==Array&&!a(t.prototype)?o(t)&&null===(t=t[h])&&(t=void 0):t=void 0,t===Array||void 0===t))return v.call(p,f,m);for(r=new(void 0===t?Array:t)(g(m-f,0)),u=0;f<m;f++,u++)f in p&&c(r,u,p[f]);return r.length=u,r}})},function(n,e,t){var r=t(116),o=t(81).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,o)}},function(n,e,t){"use strict";var r=t(0),o=t(2),a=t(18),i=t(20),s=t(6),l=t(79),c=t(115),u=t(1),p=t(7),d=t(36),f=t(4),m=t(5),h=t(11),v=t(14),g=t(39),b=t(35),y=t(28),x=t(53),w=t(50),_=t(210),k=t(84),j=t(21),T=t(8),S=t(83),C=t(12),I=t(9),P=t(75),E=t(54),A=t(40),z=t(52),O=t(3),R=t(140),M=t(141),L=t(47),D=t(31),N=t(32).forEach,$=E("hidden"),F=O("toPrimitive"),B=D.set,U=D.getterFor("Symbol"),V=Object.prototype,H=o.Symbol,q=a("JSON","stringify"),W=j.f,J=T.f,G=_.f,X=S.f,K=P("symbols"),Y=P("op-symbols"),Q=P("string-to-symbol-registry"),Z=P("symbol-to-string-registry"),nn=P("wks"),en=o.QObject,tn=!en||!en.prototype||!en.prototype.findChild,rn=s&&u((function(){return 7!=y(J({},"a",{get:function(){return J(this,"a",{value:7}).a}})).a}))?function(n,e,t){var r=W(V,e);r&&delete V[e],J(n,e,t),r&&n!==V&&J(V,e,r)}:J,on=function(n,e){var t=K[n]=y(H.prototype);return B(t,{type:"Symbol",tag:n,description:e}),s||(t.description=e),t},an=c?function(n){return"symbol"==typeof n}:function(n){return Object(n)instanceof H},sn=function(n,e,t){n===V&&sn(Y,e,t),m(n);var r=g(e,!0);return m(t),p(K,r)?(t.enumerable?(p(n,$)&&n[$][r]&&(n[$][r]=!1),t=y(t,{enumerable:b(0,!1)})):(p(n,$)||J(n,$,b(1,{})),n[$][r]=!0),rn(n,r,t)):J(n,r,t)},ln=function(n,e){m(n);var t=v(e),r=x(t).concat(dn(t));return N(r,(function(e){s&&!cn.call(t,e)||sn(n,e,t[e])})),n},cn=function(n){var e=g(n,!0),t=X.call(this,e);return!(this===V&&p(K,e)&&!p(Y,e))&&(!(t||!p(this,e)||!p(K,e)||p(this,$)&&this[$][e])||t)},un=function(n,e){var t=v(n),r=g(e,!0);if(t!==V||!p(K,r)||p(Y,r)){var o=W(t,r);return!o||!p(K,r)||p(t,$)&&t[$][r]||(o.enumerable=!0),o}},pn=function(n){var e=G(v(n)),t=[];return N(e,(function(n){p(K,n)||p(A,n)||t.push(n)})),t},dn=function(n){var e=n===V,t=G(e?Y:v(n)),r=[];return N(t,(function(n){!p(K,n)||e&&!p(V,n)||r.push(K[n])})),r};(l||(I((H=function(){if(this instanceof H)throw TypeError("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=z(n),t=function(n){this===V&&t.call(Y,n),p(this,$)&&p(this[$],e)&&(this[$][e]=!1),rn(this,e,b(1,n))};return s&&tn&&rn(V,e,{configurable:!0,set:t}),on(e,n)}).prototype,"toString",(function(){return U(this).tag})),I(H,"withoutSetter",(function(n){return on(z(n),n)})),S.f=cn,T.f=sn,j.f=un,w.f=_.f=pn,k.f=dn,R.f=function(n){return on(O(n),n)},s&&(J(H.prototype,"description",{configurable:!0,get:function(){return U(this).description}}),i||I(V,"propertyIsEnumerable",cn,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:H}),N(x(nn),(function(n){M(n)})),r({target:"Symbol",stat:!0,forced:!l},{for:function(n){var e=String(n);if(p(Q,e))return Q[e];var t=H(e);return Q[e]=t,Z[t]=e,t},keyFor:function(n){if(!an(n))throw TypeError(n+" is not a symbol");if(p(Z,n))return Z[n]},useSetter:function(){tn=!0},useSimple:function(){tn=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(n,e){return void 0===e?y(n):ln(y(n),e)},defineProperty:sn,defineProperties:ln,getOwnPropertyDescriptor:un}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:pn,getOwnPropertySymbols:dn}),r({target:"Object",stat:!0,forced:u((function(){k.f(1)}))},{getOwnPropertySymbols:function(n){return k.f(h(n))}}),q)&&r({target:"JSON",stat:!0,forced:!l||u((function(){var n=H();return"[null]"!=q([n])||"{}"!=q({a:n})||"{}"!=q(Object(n))}))},{stringify:function(n,e,t){for(var r,o=[n],a=1;arguments.length>a;)o.push(arguments[a++]);if(r=e,(f(e)||void 0!==n)&&!an(n))return d(e)||(e=function(n,e){if("function"==typeof r&&(e=r.call(this,n,e)),!an(e))return e}),o[1]=e,q.apply(null,o)}});H.prototype[F]||C(H.prototype,F,H.prototype.valueOf),L(H,"Symbol"),A[$]=!0},function(n,e){var t=0,r=Math.random();n.exports=function(n){return"Symbol("+String(void 0===n?"":n)+")_"+(++t+r).toString(36)}},function(n,e,t){var r=t(116),o=t(81);n.exports=Object.keys||function(n){return r(n,o)}},function(n,e,t){var r=t(75),o=t(52),a=r("keys");n.exports=function(n){return a[n]||(a[n]=o(n))}},function(n,e,t){var r=t(22),o=t(2);n.exports="process"==r(o.process)},function(n,e,t){var r,o,a=t(2),i=t(88),s=a.process,l=s&&s.versions,c=l&&l.v8;c?o=(r=c.split("."))[0]+r[1]:i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(o=r[1]),n.exports=o&&+o},function(n,e,t){var r=t(1),o=t(3),a=t(56),i=o("species");n.exports=function(n){return a>=51||!r((function(){var e=[];return(e.constructor={})[i]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){"use strict";var r=t(39),o=t(8),a=t(35);n.exports=function(n,e,t){var i=r(e);i in n?o.f(n,i,a(0,t)):n[i]=t}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(10);function r(n,e,t,r,o,a,i){try{var s=n[a](i),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,o)}function o(n){return function(){var e=this,t=arguments;return new Promise((function(o,a){var i=n.apply(e,t);function s(n){r(i,o,a,s,l,"next",n)}function l(n){r(i,o,a,s,l,"throw",n)}s(void 0)}))}}},function(n,e,t){"use strict";var r=t(0),o=t(6),a=t(2),i=t(7),s=t(4),l=t(8).f,c=t(121),u=a.Symbol;if(o&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var p={},d=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof d?new u(n):void 0===n?u():u(n);return""===n&&(p[e]=!0),e};c(d,u);var f=d.prototype=u.prototype;f.constructor=d;var m=f.toString,h="Symbol(test)"==String(u("test")),v=/^Symbol\((.*)\)[^)]+$/;l(f,"description",{configurable:!0,get:function(){var n=s(this)?this.valueOf():this,e=m.call(n);if(i(p,n))return"";var t=h?e.slice(7,-1):e.replace(v,"$1");return""===t?void 0:t}}),r({global:!0,forced:!0},{Symbol:d})}},function(n,e,t){var r=t(220),o=t(221),a=t(222),i=t(223),s=t(224);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(146);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(24)(Object,"create");n.exports=r},function(n,e,t){var r=t(242);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(98);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(142),t(49),t(112),t(90),t(10),t(105),t(27);var r=t(44);function o(n,e){if(n){if("string"==typeof n)return Object(r.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(r.a)(n,e):void 0}}},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,a=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,p=Math.max,d=Math.min,f=function(){return c.Date.now()};function m(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function h(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(m(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=m(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=o.test(n);return s||a.test(n)?i(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,o,a,i,s,l,c=0,u=!1,v=!1,g=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,a=o;return r=o=void 0,c=e,i=n.apply(a,t)}function y(n){return c=n,s=setTimeout(w,e),u?b(n):i}function x(n){var t=n-l;return void 0===l||t>=e||t<0||v&&n-c>=a}function w(){var n=f();if(x(n))return _(n);s=setTimeout(w,function(n){var t=e-(n-l);return v?d(t,a-(n-c)):t}(n))}function _(n){return s=void 0,g&&r?b(n):(r=o=void 0,i)}function k(){var n=f(),t=x(n);if(r=arguments,o=this,l=n,t){if(void 0===s)return y(l);if(v)return s=setTimeout(w,e),b(l)}return void 0===s&&(s=setTimeout(w,e)),i}return e=h(e)||0,m(t)&&(u=!!t.leading,a=(v="maxWait"in t)?p(h(t.maxWait)||0,e):a,g="trailing"in t?!!t.trailing:g),k.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=o=s=void 0},k.flush=function(){return void 0===s?i:_(f())},k}},function(n,e,t){var r,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(n,e,t){return n<e?e:n>t?t:n}function a(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=o(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),u=r.speed,p=r.easing;return l.offsetWidth,i((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+a(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+a(n)+"%,0)"}:{"margin-left":a(n)+"%"}).transition="all "+e+"ms "+t,o}(n,u,p)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*o(Math.random()*e,.1,.95)),e=o(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var o,i=e.querySelector(r.barSelector),l=n?"-100":a(t.status||0),u=document.querySelector(r.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(o=e.querySelector(r.spinnerSelector))&&d(o),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(e),e},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var i=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,o=n.length,a=e.charAt(0).toUpperCase()+e.slice(1);o--;)if((r=n[o]+a)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,o,a=arguments;if(2==a.length)for(t in e)void 0!==(o=e[t])&&e.hasOwnProperty(t)&&r(n,t,o);else r(n,a[1],a[2])}}();function l(n,e){return("string"==typeof n?n:p(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=p(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function u(n,e){var t,r=p(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function p(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=o)},function(n,e,t){"use strict";var r=t(0),o=t(32).map,a=t(57),i=t(17),s=a("map"),l=i("map");r({target:"Array",proto:!0,forced:!s||!l},{map:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(0),o=t(134);r({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(n,e,t){var r=t(2),o=t(133),a=t(134),i=t(12);for(var s in o){var l=r[s],c=l&&l.prototype;if(c&&c.forEach!==a)try{i(c,"forEach",a)}catch(n){c.forEach=a}}},function(n,e,t){t(0)({target:"Array",stat:!0},{isArray:t(36)})},function(n,e,t){var r=t(1),o=/#|\.prototype\./,a=function(n,e){var t=s[i(n)];return t==c||t!=l&&("function"==typeof e?r(e):!!e)},i=a.normalize=function(n){return String(n).replace(o,".").toLowerCase()},s=a.data={},l=a.NATIVE="N",c=a.POLYFILL="P";n.exports=a},function(n,e,t){"use strict";var r,o,a=t(111),i=t(189),s=RegExp.prototype.exec,l=String.prototype.replace,c=s,u=(r=/a/,o=/b*/g,s.call(r,"a"),s.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),p=i.UNSUPPORTED_Y||i.BROKEN_CARET,d=void 0!==/()??/.exec("")[1];(u||d||p)&&(c=function(n){var e,t,r,o,i=this,c=p&&i.sticky,f=a.call(i),m=i.source,h=0,v=n;return c&&(-1===(f=f.replace("y","")).indexOf("g")&&(f+="g"),v=String(n).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==n[i.lastIndex-1])&&(m="(?: "+m+")",v=" "+v,h++),t=new RegExp("^(?:"+m+")",f)),d&&(t=new RegExp("^"+m+"$(?!\\s)",f)),u&&(e=i.lastIndex),r=s.call(c?t:i,v),c?r?(r.input=r.input.slice(h),r[0]=r[0].slice(h),r.index=i.lastIndex,i.lastIndex+=r[0].length):i.lastIndex=0:u&&r&&(i.lastIndex=i.global?r.index+r[0].length:e),d&&r&&r.length>1&&l.call(r[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),n.exports=c},function(n,e,t){var r=t(20),o=t(76);(n.exports=function(n,e){return o[n]||(o[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.8.1",mode:r?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(n,e,t){var r=t(2),o=t(77),a=r["__core-js_shared__"]||o("__core-js_shared__",{});n.exports=a},function(n,e,t){var r=t(2),o=t(12);n.exports=function(n,e){try{o(r,n,e)}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(2),o=t(4),a=r.document,i=o(a)&&o(a.createElement);n.exports=function(n){return i?a.createElement(n):{}}},function(n,e,t){var r=t(1);n.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(n,e,t){var r=t(14),o=t(13),a=t(117),i=function(n){return function(e,t,i){var s,l=r(e),c=o(l.length),u=a(i,c);if(n&&t!=t){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((n||u in l)&&l[u]===t)return n||u||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var r=t(76),o=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(n){return o.call(n)}),n.exports=r.inspectSource},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!r.call({1:2},1);e.f=a?function(n){var e=o(this,n);return!!e&&e.enumerable}:r},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(7),o=t(11),a=t(54),i=t(124),s=a("IE_PROTO"),l=Object.prototype;n.exports=i?Object.getPrototypeOf:function(n){return n=o(n),r(n,s)?n[s]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?l:null}},function(n,e,t){var r=t(5),o=t(196);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(t,[]),e=t instanceof Array}catch(n){}return function(t,a){return r(t),o(a),e?n.call(t,a):t.__proto__=a,t}}():void 0)},function(n,e,t){var r={};r[t(3)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){var r=t(18);n.exports=r("navigator","userAgent")||""},function(n,e,t){t(141)("iterator")},function(n,e,t){var r=t(6),o=t(8).f,a=Function.prototype,i=a.toString,s=/^\s*function ([^ (]*)/;r&&!("name"in a)&&o(a,"name",{configurable:!0,get:function(){try{return i.call(this).match(s)[1]}catch(n){return""}}})},function(n,e,t){var r=t(214),o=t(29),a=Object.prototype,i=a.hasOwnProperty,s=a.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return o(n)&&i.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(24)(t(16),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(234),o=t(241),a=t(243),i=t(244),s=t(245);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(15),o=t(98),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!o(n))||(i.test(n)||!a.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(37),o=t(29);n.exports=function(n){return"symbol"==typeof n||o(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(72);t(51),t(60),t(89),t(10),t(27),t(33);var r=t(66);function o(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,o=!1,a=void 0;try{for(var i,s=n[Symbol.iterator]();!(r=(i=s.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){o=!0,a=n}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return t}}(n,e)||Object(r.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){var r=t(0),o=t(11),a=t(53);r({target:"Object",stat:!0,forced:t(1)((function(){a(1)}))},{keys:function(n){return a(o(n))}})},function(n,e,t){var r=t(3),o=t(28),a=t(8),i=r("unscopables"),s=Array.prototype;null==s[i]&&a.f(s,i,{configurable:!0,value:o(null)}),n.exports=function(n){s[i][n]=!0}},function(n,e,t){var r=t(107),o=t(41),a=t(3)("iterator");n.exports=function(n){if(null!=n)return n[a]||n["@@iterator"]||o[r(n)]}},function(n,e,t){var r=function(n){"use strict";var e=Object.prototype,t=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",a=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function s(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{s({},"")}catch(n){s=function(n,e,t){return n[e]=t}}function l(n,e,t,r){var o=e&&e.prototype instanceof p?e:p,a=Object.create(o.prototype),i=new k(r||[]);return a._invoke=function(n,e,t){var r="suspendedStart";return function(o,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw a;return T()}for(t.method=o,t.arg=a;;){var i=t.delegate;if(i){var s=x(i,t);if(s){if(s===u)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var l=c(n,e,t);if("normal"===l.type){if(r=t.done?"completed":"suspendedYield",l.arg===u)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(r="completed",t.method="throw",t.arg=l.arg)}}}(n,t,i),a}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=l;var u={};function p(){}function d(){}function f(){}var m={};m[o]=function(){return this};var h=Object.getPrototypeOf,v=h&&h(h(j([])));v&&v!==e&&t.call(v,o)&&(m=v);var g=f.prototype=p.prototype=Object.create(m);function b(n){["next","throw","return"].forEach((function(e){s(n,e,(function(n){return this._invoke(e,n)}))}))}function y(n,e){var r;this._invoke=function(o,a){function i(){return new e((function(r,i){!function r(o,a,i,s){var l=c(n[o],n,a);if("throw"!==l.type){var u=l.arg,p=u.value;return p&&"object"==typeof p&&t.call(p,"__await")?e.resolve(p.__await).then((function(n){r("next",n,i,s)}),(function(n){r("throw",n,i,s)})):e.resolve(p).then((function(n){u.value=n,i(u)}),(function(n){return r("throw",n,i,s)}))}s(l.arg)}(o,a,r,i)}))}return r=r?r.then(i,i):i()}}function x(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,x(n,e),"throw"===e.method))return u;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=c(t,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,u;var o=r.arg;return o?o.done?(e[n.resultName]=o.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,u):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,u)}function w(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function _(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function k(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(w,this),this.reset(!0)}function j(n){if(n){var e=n[o];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,a=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return a.next=a}}return{next:T}}function T(){return{value:void 0,done:!0}}return d.prototype=g.constructor=f,f.constructor=d,d.displayName=s(f,i,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===d||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,f):(n.__proto__=f,s(n,i,"GeneratorFunction")),n.prototype=Object.create(g),n},n.awrap=function(n){return{__await:n}},b(y.prototype),y.prototype[a]=function(){return this},n.AsyncIterator=y,n.async=function(e,t,r,o,a){void 0===a&&(a=Promise);var i=new y(l(e,t,r,o),a);return n.isGeneratorFunction(t)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},b(g),s(g,i,"Generator"),g[o]=function(){return this},g.toString=function(){return"[object Generator]"},n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var r=e.pop();if(r in n)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=j,k.prototype={constructor:k,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return i.type="throw",i.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],i=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var s=t.call(a,"catchLoc"),l=t.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&t.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===n||"continue"===n)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=n,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,u):this.complete(i)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),u},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),_(t),u}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var o=r.arg;_(t)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:j(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),u}},n}(n.exports);try{regeneratorRuntime=r}catch(n){Function("r","regeneratorRuntime = r")(r)}},function(n,e,t){"use strict";var r=t(9),o=t(5),a=t(1),i=t(111),s=RegExp.prototype,l=s.toString,c=a((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),u="toString"!=l.name;(c||u)&&r(RegExp.prototype,"toString",(function(){var n=o(this),e=String(n.source),t=n.flags;return"/"+e+"/"+String(void 0===t&&n instanceof RegExp&&!("flags"in s)?i.call(n):t)}),{unsafe:!0})},function(n,e,t){"use strict";var r=t(14),o=t(102),a=t(41),i=t(31),s=t(120),l=i.set,c=i.getterFor("Array Iterator");n.exports=s(Array,"Array",(function(n,e){l(this,{type:"Array Iterator",target:r(n),index:0,kind:e})}),(function(){var n=c(this),e=n.target,t=n.kind,r=n.index++;return!e||r>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values"),a.Arguments=a.Array,o("keys"),o("values"),o("entries")},function(n,e,t){var r=t(87),o=t(22),a=t(3)("toStringTag"),i="Arguments"==o(function(){return arguments}());n.exports=r?o:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=Object(n),a))?t:i?o(e):"Object"==(r=o(e))&&"function"==typeof e.callee?"Arguments":r}},function(n,e,t){var r=t(5),o=t(23),a=t(3)("species");n.exports=function(n,e){var t,i=r(n).constructor;return void 0===i||null==(t=r(i)[a])?e:o(t)}},function(n,e,t){var r=t(4),o=t(36),a=t(3)("species");n.exports=function(n,e){var t;return o(n)&&("function"!=typeof(t=n.constructor)||t!==Array&&!o(t.prototype)?r(t)&&null===(t=t[a])&&(t=void 0):t=void 0),new(void 0===t?Array:t)(0===e?0:e)}},function(n,e,t){var r=t(46),o=t(19),a=function(n){return function(e,t){var a,i,s=String(o(e)),l=r(t),c=s.length;return l<0||l>=c?n?"":void 0:(a=s.charCodeAt(l))<55296||a>56319||l+1===c||(i=s.charCodeAt(l+1))<56320||i>57343?n?s.charAt(l):a:n?s.slice(l,l+2):i-56320+(a-55296<<10)+65536}};n.exports={codeAt:a(!1),charAt:a(!0)}},function(n,e,t){"use strict";var r=t(5);n.exports=function(){var n=r(this),e="";return n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},function(n,e,t){var r=t(9),o=Date.prototype,a=o.toString,i=o.getTime;new Date(NaN)+""!="Invalid Date"&&r(o,"toString",(function(){var n=i.call(this);return n==n?a.call(this):"Invalid Date"}))},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){var r=t(6),o=t(1),a=t(78);n.exports=!r&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(79);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(7),o=t(14),a=t(80).indexOf,i=t(40);n.exports=function(n,e){var t,s=o(n),l=0,c=[];for(t in s)!r(i,t)&&r(s,t)&&c.push(t);for(;e.length>l;)r(s,t=e[l++])&&(~a(c,t)||c.push(t));return c}},function(n,e,t){var r=t(46),o=Math.max,a=Math.min;n.exports=function(n,e){var t=r(n);return t<0?o(t+e,0):a(t,e)}},function(n,e,t){var r=t(18);n.exports=r("document","documentElement")},function(n,e,t){var r=t(2);n.exports=r},function(n,e,t){"use strict";var r=t(0),o=t(183),a=t(85),i=t(86),s=t(47),l=t(12),c=t(9),u=t(3),p=t(20),d=t(41),f=t(123),m=f.IteratorPrototype,h=f.BUGGY_SAFARI_ITERATORS,v=u("iterator"),g=function(){return this};n.exports=function(n,e,t,u,f,b,y){o(t,e,u);var x,w,_,k=function(n){if(n===f&&I)return I;if(!h&&n in S)return S[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},j=e+" Iterator",T=!1,S=n.prototype,C=S[v]||S["@@iterator"]||f&&S[f],I=!h&&C||k(f),P="Array"==e&&S.entries||C;if(P&&(x=a(P.call(new n)),m!==Object.prototype&&x.next&&(p||a(x)===m||(i?i(x,m):"function"!=typeof x[v]&&l(x,v,g)),s(x,j,!0,!0),p&&(d[j]=g))),"values"==f&&C&&"values"!==C.name&&(T=!0,I=function(){return C.call(this)}),p&&!y||S[v]===I||l(S,v,I),d[e]=I,f)if(w={values:k("values"),keys:b?I:k("keys"),entries:k("entries")},y)for(_ in w)(h||T||!(_ in S))&&c(S,_,w[_]);else r({target:e,proto:!0,forced:h||T},w);return w}},function(n,e,t){var r=t(7),o=t(122),a=t(21),i=t(8);n.exports=function(n,e){for(var t=o(e),s=i.f,l=a.f,c=0;c<t.length;c++){var u=t[c];r(n,u)||s(n,u,l(e,u))}}},function(n,e,t){var r=t(18),o=t(50),a=t(84),i=t(5);n.exports=r("Reflect","ownKeys")||function(n){var e=o.f(i(n)),t=a.f;return t?e.concat(t(n)):e}},function(n,e,t){"use strict";var r,o,a,i=t(85),s=t(12),l=t(7),c=t(3),u=t(20),p=c("iterator"),d=!1;[].keys&&("next"in(a=[].keys())?(o=i(i(a)))!==Object.prototype&&(r=o):d=!0),null==r&&(r={}),u||l(r,p)||s(r,p,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:d}},function(n,e,t){var r=t(1);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var r=t(2);n.exports=r.Promise},function(n,e,t){var r=t(3),o=t(41),a=r("iterator"),i=Array.prototype;n.exports=function(n){return void 0!==n&&(o.Array===n||i[a]===n)}},function(n,e,t){var r=t(5);n.exports=function(n){var e=n.return;if(void 0!==e)return r(e.call(n)).value}},function(n,e,t){var r=t(3)("iterator"),o=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){o=!0}};i[r]=function(){return this},Array.from(i,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!o)return!1;var t=!1;try{var a={};a[r]=function(){return{next:function(){return{done:t=!0}}}},n(a)}catch(n){}return t}},function(n,e,t){var r,o,a,i=t(2),s=t(1),l=t(48),c=t(118),u=t(78),p=t(130),d=t(55),f=i.location,m=i.setImmediate,h=i.clearImmediate,v=i.process,g=i.MessageChannel,b=i.Dispatch,y=0,x={},w=function(n){if(x.hasOwnProperty(n)){var e=x[n];delete x[n],e()}},_=function(n){return function(){w(n)}},k=function(n){w(n.data)},j=function(n){i.postMessage(n+"",f.protocol+"//"+f.host)};m&&h||(m=function(n){for(var e=[],t=1;arguments.length>t;)e.push(arguments[t++]);return x[++y]=function(){("function"==typeof n?n:Function(n)).apply(void 0,e)},r(y),y},h=function(n){delete x[n]},d?r=function(n){v.nextTick(_(n))}:b&&b.now?r=function(n){b.now(_(n))}:g&&!p?(a=(o=new g).port2,o.port1.onmessage=k,r=l(a.postMessage,a,1)):i.addEventListener&&"function"==typeof postMessage&&!i.importScripts&&f&&"file:"!==f.protocol&&!s(j)?(r=j,i.addEventListener("message",k,!1)):r="onreadystatechange"in u("script")?function(n){c.appendChild(u("script")).onreadystatechange=function(){c.removeChild(this),w(n)}}:function(n){setTimeout(_(n),0)}),n.exports={set:m,clear:h}},function(n,e,t){var r=t(88);n.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(n,e,t){var r=t(5),o=t(4),a=t(132);n.exports=function(n,e){if(r(n),o(e)&&e.constructor===n)return e;var t=a.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){"use strict";var r=t(23),o=function(n){var e,t;this.promise=new n((function(n,r){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=r})),this.resolve=r(e),this.reject=r(t)};n.exports.f=function(n){return new o(n)}},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){"use strict";var r=t(32).forEach,o=t(34),a=t(17),i=o("forEach"),s=a("forEach");n.exports=i&&s?[].forEach:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var r=t(1);n.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){var r=t(0),o=t(1),a=t(11),i=t(85),s=t(124);r({target:"Object",stat:!0,forced:o((function(){i(1)})),sham:!s},{getPrototypeOf:function(n){return i(a(n))}})},function(n,e,t){var r=t(176);n.exports=function(n){if(r(n))throw TypeError("The method doesn't accept regular expressions");return n}},function(n,e,t){var r=t(3)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[r]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){t(0)({target:"Object",stat:!0,sham:!t(6)},{create:t(28)})},function(n,e,t){var r=t(3);e.f=r},function(n,e,t){var r=t(119),o=t(7),a=t(140),i=t(8).f;n.exports=function(n){var e=r.Symbol||(r.Symbol={});o(e,n)||i(e,n,{value:a.f(n)})}},function(n,e,t){var r=t(0),o=t(191);r({target:"Array",stat:!0,forced:!t(128)((function(n){Array.from(n)}))},{from:o})},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,o=n.length;++t<r;)n[o+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(61),o=t(225),a=t(226),i=t(227),s=t(228),l=t(229);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=o,c.prototype.delete=a,c.prototype.get=i,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(37),o=t(93);n.exports=function(n){if(!o(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(246),o=t(29);n.exports=function n(e,t,a,i,s){return e===t||(null==e||null==t||!o(e)&&!o(t)?e!=e&&t!=t:r(e,t,a,i,n,s))}},function(n,e,t){var r=t(151),o=t(249),a=t(152);n.exports=function(n,e,t,i,s,l){var c=1&t,u=n.length,p=e.length;if(u!=p&&!(c&&p>u))return!1;var d=l.get(n),f=l.get(e);if(d&&f)return d==e&&f==n;var m=-1,h=!0,v=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++m<u;){var g=n[m],b=e[m];if(i)var y=c?i(b,g,m,e,n,l):i(g,b,m,n,e,l);if(void 0!==y){if(y)continue;h=!1;break}if(v){if(!o(e,(function(n,e){if(!a(v,e)&&(g===n||s(g,n,t,i,l)))return v.push(e)}))){h=!1;break}}else if(g!==b&&!s(g,b,t,i,l)){h=!1;break}}return l.delete(n),l.delete(e),h}},function(n,e,t){var r=t(94),o=t(247),a=t(248);function i(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}i.prototype.add=i.prototype.push=o,i.prototype.has=a,n.exports=i},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(259),o=t(265),a=t(157);n.exports=function(n){return a(n)?r(n):o(n)}},function(n,e,t){(function(n){var r=t(16),o=t(261),a=e&&!e.nodeType&&e,i=a&&"object"==typeof n&&n&&!n.nodeType&&n,s=i&&i.exports===a?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||o;n.exports=l}).call(this,t(113)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(262),o=t(263),a=t(264),i=a&&a.isTypedArray,s=i?o(i):r;n.exports=s},function(n,e,t){var r=t(147),o=t(96);n.exports=function(n){return null!=n&&o(n.length)&&!r(n)}},function(n,e,t){var r=t(24)(t(16),"Set");n.exports=r},function(n,e,t){var r=t(93);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(162),o=t(65);n.exports=function(n,e){for(var t=0,a=(e=r(e,n)).length;null!=n&&t<a;)n=n[o(e[t++])];return t&&t==a?n:void 0}},function(n,e,t){var r=t(15),o=t(97),a=t(276),i=t(279);n.exports=function(n,e){return r(n)?n:o(n,e)?[n]:a(i(n))}},function(n,e,t){var r=t(0),o=t(2),a=t(88),i=[].slice,s=function(n){return function(e,t){var r=arguments.length>2,o=r?i.call(arguments,2):void 0;return n(r?function(){("function"==typeof e?e:Function(e)).apply(this,o)}:e,t)}};r({global:!0,bind:!0,forced:/MSIE .\./.test(a)},{setTimeout:s(o.setTimeout),setInterval:s(o.setInterval)})},function(n,e,t){},function(n,e,t){t(0)({target:"Object",stat:!0},{setPrototypeOf:t(86)})},function(n,e,t){var r=t(0),o=t(18),a=t(23),i=t(5),s=t(4),l=t(28),c=t(312),u=t(1),p=o("Reflect","construct"),d=u((function(){function n(){}return!(p((function(){}),[],n)instanceof n)})),f=!u((function(){p((function(){}))})),m=d||f;r({target:"Reflect",stat:!0,forced:m,sham:m},{construct:function(n,e){a(n),i(e);var t=arguments.length<3?n:a(arguments[2]);if(f&&!d)return p(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var r=[null];return r.push.apply(r,e),new(c.apply(n,r))}var o=t.prototype,u=l(s(o)?o:Object.prototype),m=Function.apply.call(n,u,e);return s(m)?m:u}})},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(212),o=t(217),a=t(288),i=t(296),s=t(305),l=t(192),c=a((function(n){var e=l(n);return s(e)&&(e=void 0),i(r(n,1,s,!0),o(e,2))}));n.exports=c},function(n,e,t){"use strict";var r=t(0),o=t(32).some,a=t(34),i=t(17),s=a("some"),l=i("some");r({target:"Array",proto:!0,forced:!s||!l},{some:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";t(30);var r=t(9),o=t(1),a=t(3),i=t(74),s=t(12),l=a("species"),c=!o((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")})),u="$0"==="a".replace(/./,"$0"),p=a("replace"),d=!!/./[p]&&""===/./[p]("a","$0"),f=!o((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var t="ab".split(n);return 2!==t.length||"a"!==t[0]||"b"!==t[1]}));n.exports=function(n,e,t,p){var m=a(n),h=!o((function(){var e={};return e[m]=function(){return 7},7!=""[n](e)})),v=h&&!o((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[l]=function(){return t},t.flags="",t[m]=/./[m]),t.exec=function(){return e=!0,null},t[m](""),!e}));if(!h||!v||"replace"===n&&(!c||!u||d)||"split"===n&&!f){var g=/./[m],b=t(m,""[n],(function(n,e,t,r,o){return e.exec===i?h&&!o?{done:!0,value:g.call(e,t,r)}:{done:!0,value:n.call(t,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:d}),y=b[0],x=b[1];r(String.prototype,n,y),r(RegExp.prototype,m,2==e?function(n,e){return x.call(n,this,e)}:function(n){return x.call(n,this)})}p&&s(RegExp.prototype[m],"sham",!0)}},function(n,e,t){var r=t(22),o=t(74);n.exports=function(n,e){var t=n.exec;if("function"==typeof t){var a=t.call(n,e);if("object"!=typeof a)throw TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==r(n))throw TypeError("RegExp#exec called on incompatible receiver");return o.call(n,e)}},function(n,e,t){"use strict";var r=t(0),o=t(80).indexOf,a=t(34),i=t(17),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,c=a("indexOf"),u=i("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:l||!c||!u},{indexOf:function(n){return l?s.apply(this,arguments)||0:o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(6),o=t(8),a=t(5),i=t(53);n.exports=r?Object.defineProperties:function(n,e){a(n);for(var t,r=i(e),s=r.length,l=0;s>l;)o.f(n,t=r[l++],e[t]);return n}},function(n,e){n.exports=function(n,e,t){if(!(n instanceof e))throw TypeError("Incorrect "+(t?t+" ":"")+"invocation");return n}},function(n,e,t){var r=t(4),o=t(22),a=t(3)("match");n.exports=function(n){var e;return r(n)&&(void 0!==(e=n[a])?!!e:"RegExp"==o(n))}},function(n,e,t){"use strict";var r=t(110).charAt;n.exports=function(n,e,t){return e+(t?r(n,e).length:1)}},function(n,e,t){"use strict";var r=t(0),o=t(1),a=t(36),i=t(4),s=t(11),l=t(13),c=t(58),u=t(109),p=t(57),d=t(3),f=t(56),m=d("isConcatSpreadable"),h=f>=51||!o((function(){var n=[];return n[m]=!1,n.concat()[0]!==n})),v=p("concat"),g=function(n){if(!i(n))return!1;var e=n[m];return void 0!==e?!!e:a(n)};r({target:"Array",proto:!0,forced:!h||!v},{concat:function(n){var e,t,r,o,a,i=s(this),p=u(i,0),d=0;for(e=-1,r=arguments.length;e<r;e++)if(g(a=-1===e?i:arguments[e])){if(d+(o=l(a.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(t=0;t<o;t++,d++)t in a&&c(p,d,a[t])}else{if(d>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(p,d++,a)}return p.length=d,p}})},function(n,e,t){"use strict";var r=t(0),o=t(38),a=t(14),i=t(34),s=[].join,l=o!=Object,c=i("join",",");r({target:"Array",proto:!0,forced:l||!c},{join:function(n){return s.call(a(this),void 0===n?",":n)}})},function(n,e,t){var r=t(0),o=t(6);r({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperty:t(8).f})},function(n,e,t){var r=t(19),o="["+t(182)+"]",a=RegExp("^"+o+o+"*"),i=RegExp(o+o+"*$"),s=function(n){return function(e){var t=String(r(e));return 1&n&&(t=t.replace(a,"")),2&n&&(t=t.replace(i,"")),t}};n.exports={start:s(1),end:s(2),trim:s(3)}},function(n,e){n.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(n,e,t){"use strict";var r=t(123).IteratorPrototype,o=t(28),a=t(35),i=t(47),s=t(41),l=function(){return this};n.exports=function(n,e,t){var c=e+" Iterator";return n.prototype=o(r,{next:a(1,t)}),i(n,c,!1,!0),s[c]=l,n}},function(n,e,t){var r=t(9);n.exports=function(n,e,t){for(var o in e)r(n,o,e[o],t);return n}},function(n,e,t){"use strict";var r=t(18),o=t(8),a=t(3),i=t(6),s=a("species");n.exports=function(n){var e=r(n),t=o.f;i&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e,t){"use strict";var r=t(6),o=t(1),a=t(53),i=t(84),s=t(83),l=t(11),c=t(38),u=Object.assign,p=Object.defineProperty;n.exports=!u||o((function(){if(r&&1!==u({b:1},u(p({},"a",{enumerable:!0,get:function(){p(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=u({},n)[t]||"abcdefghijklmnopqrst"!=a(u({},e)).join("")}))?function(n,e){for(var t=l(n),o=arguments.length,u=1,p=i.f,d=s.f;o>u;)for(var f,m=c(arguments[u++]),h=p?a(m).concat(p(m)):a(m),v=h.length,g=0;v>g;)f=h[g++],r&&!d.call(m,f)||(t[f]=m[f]);return t}:u},function(n,e,t){var r=t(0),o=t(6),a=t(122),i=t(14),s=t(21),l=t(58);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(n){for(var e,t,r=i(n),o=s.f,c=a(r),u={},p=0;c.length>p;)void 0!==(t=o(r,e=c[p++]))&&l(u,e,t);return u}})},function(n,e,t){"use strict";var r=t(0),o=t(80).includes,a=t(102);r({target:"Array",proto:!0,forced:!t(17)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}}),a("includes")},function(n,e,t){"use strict";var r=t(1);function o(n,e){return RegExp(n,e)}e.UNSUPPORTED_Y=r((function(){var n=o("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),e.BROKEN_CARET=r((function(){var n=o("^r","gy");return n.lastIndex=2,null!=n.exec("str")}))},function(n,e,t){"use strict";var r=t(0),o=t(137),a=t(19);r({target:"String",proto:!0,forced:!t(138)("includes")},{includes:function(n){return!!~String(a(this)).indexOf(o(n),arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(48),o=t(11),a=t(211),i=t(126),s=t(13),l=t(58),c=t(103);n.exports=function(n){var e,t,u,p,d,f,m=o(n),h="function"==typeof this?this:Array,v=arguments.length,g=v>1?arguments[1]:void 0,b=void 0!==g,y=c(m),x=0;if(b&&(g=r(g,v>2?arguments[2]:void 0,2)),null==y||h==Array&&i(y))for(t=new h(e=s(m.length));e>x;x++)f=b?g(m[x],x):m[x],l(t,x,f);else for(d=(p=y.call(m)).next,t=new h;!(u=d.call(p)).done;x++)f=b?a(p,g,[u.value,x],!0):u.value,l(t,x,f);return t.length=x,t}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){var r=t(4),o=t(86);n.exports=function(n,e,t){var a,i;return o&&"function"==typeof(a=e.constructor)&&a!==t&&r(i=a.prototype)&&i!==t.prototype&&o(n,i),n}},function(n,e,t){n.exports=t(315)},function(n,e,t){var r=t(2),o=t(82),a=r.WeakMap;n.exports="function"==typeof a&&/native code/.test(o(a))},function(n,e,t){var r=t(4);n.exports=function(n){if(!r(n)&&null!==n)throw TypeError("Can't set "+String(n)+" as a prototype");return n}},function(n,e,t){"use strict";var r,o,a,i,s=t(0),l=t(20),c=t(2),u=t(18),p=t(125),d=t(9),f=t(184),m=t(47),h=t(185),v=t(4),g=t(23),b=t(175),y=t(82),x=t(198),w=t(128),_=t(108),k=t(129).set,j=t(199),T=t(131),S=t(200),C=t(132),I=t(201),P=t(31),E=t(73),A=t(3),z=t(55),O=t(56),R=A("species"),M="Promise",L=P.get,D=P.set,N=P.getterFor(M),$=p,F=c.TypeError,B=c.document,U=c.process,V=u("fetch"),H=C.f,q=H,W=!!(B&&B.createEvent&&c.dispatchEvent),J="function"==typeof PromiseRejectionEvent,G=E(M,(function(){if(!(y($)!==String($))){if(66===O)return!0;if(!z&&!J)return!0}if(l&&!$.prototype.finally)return!0;if(O>=51&&/native code/.test($))return!1;var n=$.resolve(1),e=function(n){n((function(){}),(function(){}))};return(n.constructor={})[R]=e,!(n.then((function(){}))instanceof e)})),X=G||!w((function(n){$.all(n).catch((function(){}))})),K=function(n){var e;return!(!v(n)||"function"!=typeof(e=n.then))&&e},Y=function(n,e){if(!n.notified){n.notified=!0;var t=n.reactions;j((function(){for(var r=n.value,o=1==n.state,a=0;t.length>a;){var i,s,l,c=t[a++],u=o?c.ok:c.fail,p=c.resolve,d=c.reject,f=c.domain;try{u?(o||(2===n.rejection&&en(n),n.rejection=1),!0===u?i=r:(f&&f.enter(),i=u(r),f&&(f.exit(),l=!0)),i===c.promise?d(F("Promise-chain cycle")):(s=K(i))?s.call(i,p,d):p(i)):d(r)}catch(n){f&&!l&&f.exit(),d(n)}}n.reactions=[],n.notified=!1,e&&!n.rejection&&Z(n)}))}},Q=function(n,e,t){var r,o;W?((r=B.createEvent("Event")).promise=e,r.reason=t,r.initEvent(n,!1,!0),c.dispatchEvent(r)):r={promise:e,reason:t},!J&&(o=c["on"+n])?o(r):"unhandledrejection"===n&&S("Unhandled promise rejection",t)},Z=function(n){k.call(c,(function(){var e,t=n.facade,r=n.value;if(nn(n)&&(e=I((function(){z?U.emit("unhandledRejection",r,t):Q("unhandledrejection",t,r)})),n.rejection=z||nn(n)?2:1,e.error))throw e.value}))},nn=function(n){return 1!==n.rejection&&!n.parent},en=function(n){k.call(c,(function(){var e=n.facade;z?U.emit("rejectionHandled",e):Q("rejectionhandled",e,n.value)}))},tn=function(n,e,t){return function(r){n(e,r,t)}},rn=function(n,e,t){n.done||(n.done=!0,t&&(n=t),n.value=e,n.state=2,Y(n,!0))},on=function(n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(n.facade===e)throw F("Promise can't be resolved itself");var r=K(e);r?j((function(){var t={done:!1};try{r.call(e,tn(on,t,n),tn(rn,t,n))}catch(e){rn(t,e,n)}})):(n.value=e,n.state=1,Y(n,!1))}catch(e){rn({done:!1},e,n)}}};G&&($=function(n){b(this,$,M),g(n),r.call(this);var e=L(this);try{n(tn(on,e),tn(rn,e))}catch(n){rn(e,n)}},(r=function(n){D(this,{type:M,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=f($.prototype,{then:function(n,e){var t=N(this),r=H(_(this,$));return r.ok="function"!=typeof n||n,r.fail="function"==typeof e&&e,r.domain=z?U.domain:void 0,t.parent=!0,t.reactions.push(r),0!=t.state&&Y(t,!1),r.promise},catch:function(n){return this.then(void 0,n)}}),o=function(){var n=new r,e=L(n);this.promise=n,this.resolve=tn(on,e),this.reject=tn(rn,e)},C.f=H=function(n){return n===$||n===a?new o(n):q(n)},l||"function"!=typeof p||(i=p.prototype.then,d(p.prototype,"then",(function(n,e){var t=this;return new $((function(n,e){i.call(t,n,e)})).then(n,e)}),{unsafe:!0}),"function"==typeof V&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(n){return T($,V.apply(c,arguments))}}))),s({global:!0,wrap:!0,forced:G},{Promise:$}),m($,M,!1,!0),h(M),a=u(M),s({target:M,stat:!0,forced:G},{reject:function(n){var e=H(this);return e.reject.call(void 0,n),e.promise}}),s({target:M,stat:!0,forced:l||G},{resolve:function(n){return T(l&&this===a?$:this,n)}}),s({target:M,stat:!0,forced:X},{all:function(n){var e=this,t=H(e),r=t.resolve,o=t.reject,a=I((function(){var t=g(e.resolve),a=[],i=0,s=1;x(n,(function(n){var l=i++,c=!1;a.push(void 0),s++,t.call(e,n).then((function(n){c||(c=!0,a[l]=n,--s||r(a))}),o)})),--s||r(a)}));return a.error&&o(a.value),t.promise},race:function(n){var e=this,t=H(e),r=t.reject,o=I((function(){var o=g(e.resolve);x(n,(function(n){o.call(e,n).then(t.resolve,r)}))}));return o.error&&r(o.value),t.promise}})},function(n,e,t){var r=t(5),o=t(126),a=t(13),i=t(48),s=t(103),l=t(127),c=function(n,e){this.stopped=n,this.result=e};n.exports=function(n,e,t){var u,p,d,f,m,h,v,g=t&&t.that,b=!(!t||!t.AS_ENTRIES),y=!(!t||!t.IS_ITERATOR),x=!(!t||!t.INTERRUPTED),w=i(e,g,1+b+x),_=function(n){return u&&l(u),new c(!0,n)},k=function(n){return b?(r(n),x?w(n[0],n[1],_):w(n[0],n[1])):x?w(n,_):w(n)};if(y)u=n;else{if("function"!=typeof(p=s(n)))throw TypeError("Target is not iterable");if(o(p)){for(d=0,f=a(n.length);f>d;d++)if((m=k(n[d]))&&m instanceof c)return m;return new c(!1)}u=p.call(n)}for(h=u.next;!(v=h.call(u)).done;){try{m=k(v.value)}catch(n){throw l(u),n}if("object"==typeof m&&m&&m instanceof c)return m}return new c(!1)}},function(n,e,t){var r,o,a,i,s,l,c,u,p=t(2),d=t(21).f,f=t(129).set,m=t(130),h=t(55),v=p.MutationObserver||p.WebKitMutationObserver,g=p.document,b=p.process,y=p.Promise,x=d(p,"queueMicrotask"),w=x&&x.value;w||(r=function(){var n,e;for(h&&(n=b.domain)&&n.exit();o;){e=o.fn,o=o.next;try{e()}catch(n){throw o?i():a=void 0,n}}a=void 0,n&&n.enter()},!m&&!h&&v&&g?(s=!0,l=g.createTextNode(""),new v(r).observe(l,{characterData:!0}),i=function(){l.data=s=!s}):y&&y.resolve?(c=y.resolve(void 0),u=c.then,i=function(){u.call(c,r)}):i=h?function(){b.nextTick(r)}:function(){f.call(p,r)}),n.exports=w||function(n){var e={fn:n,next:void 0};a&&(a.next=e),o||(o=e,i()),a=e}},function(n,e,t){var r=t(2);n.exports=function(n,e){var t=r.console;t&&t.error&&(1===arguments.length?t.error(n):t.error(n,e))}},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e,t){var r=t(0),o=t(186);r({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},function(n,e,t){"use strict";var r=t(0),o=t(20),a=t(125),i=t(1),s=t(18),l=t(108),c=t(131),u=t(9);r({target:"Promise",proto:!0,real:!0,forced:!!a&&i((function(){a.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=l(this,s("Promise")),t="function"==typeof n;return this.then(t?function(t){return c(e,n()).then((function(){return t}))}:n,t?function(t){return c(e,n()).then((function(){throw t}))}:n)}}),o||"function"!=typeof a||a.prototype.finally||u(a.prototype,"finally",s("Promise").prototype.finally)},function(n,e,t){"use strict";var r=t(87),o=t(107);n.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},function(n,e,t){"use strict";var r=t(0),o=t(206).left,a=t(34),i=t(17),s=t(56),l=t(55),c=a("reduce"),u=i("reduce",{1:0});r({target:"Array",proto:!0,forced:!c||!u||!l&&s>79&&s<83},{reduce:function(n){return o(this,n,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(23),o=t(11),a=t(38),i=t(13),s=function(n){return function(e,t,s,l){r(t);var c=o(e),u=a(c),p=i(c.length),d=n?p-1:0,f=n?-1:1;if(s<2)for(;;){if(d in u){l=u[d],d+=f;break}if(d+=f,n?d<0:p<=d)throw TypeError("Reduce of empty array with no initial value")}for(;n?d>=0:p>d;d+=f)d in u&&(l=t(l,u[d],d,c));return l}};n.exports={left:s(!1),right:s(!0)}},function(n,e,t){var r=t(0),o=t(135),a=t(1),i=t(4),s=t(208).onFreeze,l=Object.freeze;r({target:"Object",stat:!0,forced:a((function(){l(1)})),sham:!o},{freeze:function(n){return l&&i(n)?l(s(n)):n}})},function(n,e,t){var r=t(40),o=t(4),a=t(7),i=t(8).f,s=t(52),l=t(135),c=s("meta"),u=0,p=Object.isExtensible||function(){return!0},d=function(n){i(n,c,{value:{objectID:"O"+ ++u,weakData:{}}})},f=n.exports={REQUIRED:!1,fastKey:function(n,e){if(!o(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!a(n,c)){if(!p(n))return"F";if(!e)return"E";d(n)}return n[c].objectID},getWeakData:function(n,e){if(!a(n,c)){if(!p(n))return!0;if(!e)return!1;d(n)}return n[c].weakData},onFreeze:function(n){return l&&f.REQUIRED&&p(n)&&!a(n,c)&&d(n),n}};r[c]=!0},function(n,e,t){"use strict";var r,o=t(0),a=t(21).f,i=t(13),s=t(137),l=t(19),c=t(138),u=t(20),p="".startsWith,d=Math.min,f=c("startsWith");o({target:"String",proto:!0,forced:!!(u||f||(r=a(String.prototype,"startsWith"),!r||r.writable))&&!f},{startsWith:function(n){var e=String(l(this));s(n);var t=i(d(arguments.length>1?arguments[1]:void 0,e.length)),r=String(n);return p?p.call(e,r,t):e.slice(t,t+r.length)===r}})},function(n,e,t){var r=t(14),o=t(50).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return i&&"[object Window]"==a.call(n)?function(n){try{return o(n)}catch(n){return i.slice()}}(n):o(r(n))}},function(n,e,t){var r=t(5),o=t(127);n.exports=function(n,e,t,a){try{return a?e(r(t)[0],t[1]):e(t)}catch(e){throw o(n),e}}},function(n,e,t){var r=t(143),o=t(213);n.exports=function n(e,t,a,i,s){var l=-1,c=e.length;for(a||(a=o),s||(s=[]);++l<c;){var u=e[l];t>0&&a(u)?t>1?n(u,t-1,a,i,s):r(s,u):i||(s[s.length]=u)}return s}},function(n,e,t){var r=t(42),o=t(91),a=t(15),i=r?r.isConcatSpreadable:void 0;n.exports=function(n){return a(n)||o(n)||!!(i&&n&&n[i])}},function(n,e,t){var r=t(37),o=t(29);n.exports=function(n){return o(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(42),o=Object.prototype,a=o.hasOwnProperty,i=o.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=a.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var o=i.call(n);return r&&(e?n[s]=t:delete n[s]),o}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(218),o=t(274),a=t(99),i=t(15),s=t(285);n.exports=function(n){return"function"==typeof n?n:null==n?a:"object"==typeof n?i(n)?o(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(219),o=t(273),a=t(160);n.exports=function(n){var e=o(n);return 1==e.length&&e[0][2]?a(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(145),o=t(149);n.exports=function(n,e,t,a){var i=t.length,s=i,l=!a;if(null==n)return!s;for(n=Object(n);i--;){var c=t[i];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++i<s;){var u=(c=t[i])[0],p=n[u],d=c[1];if(l&&c[2]){if(void 0===p&&!(u in n))return!1}else{var f=new r;if(a)var m=a(p,d,u,n,e,f);if(!(void 0===m?o(d,p,3,a,f):m))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(62),o=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():o.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(62);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(62);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(62);n.exports=function(n,e){var t=this.__data__,o=r(t,n);return o<0?(++this.size,t.push([n,e])):t[o][1]=e,this}},function(n,e,t){var r=t(61);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(61),o=t(92),a=t(94);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var i=t.__data__;if(!o||i.length<199)return i.push([n,e]),this.size=++t.size,this;t=this.__data__=new a(i)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(147),o=t(231),a=t(93),i=t(148),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,p=c.hasOwnProperty,d=RegExp("^"+u.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!a(n)||o(n))&&(r(n)?d:s).test(i(n))}},function(n,e,t){var r,o=t(232),a=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!a&&a in n}},function(n,e,t){var r=t(16)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(235),o=t(61),a=t(92);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(a||o),string:new r}}},function(n,e,t){var r=t(236),o=t(237),a=t(238),i=t(239),s=t(240);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(63);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(63),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return o.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(63),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:o.call(e,n)}},function(n,e,t){var r=t(63);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(64);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(64);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(64);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(64);n.exports=function(n,e){var t=r(this,n),o=t.size;return t.set(n,e),this.size+=t.size==o?0:1,this}},function(n,e,t){var r=t(145),o=t(150),a=t(250),i=t(253),s=t(269),l=t(15),c=t(154),u=t(156),p="[object Object]",d=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,f,m,h){var v=l(n),g=l(e),b=v?"[object Array]":s(n),y=g?"[object Array]":s(e),x=(b="[object Arguments]"==b?p:b)==p,w=(y="[object Arguments]"==y?p:y)==p,_=b==y;if(_&&c(n)){if(!c(e))return!1;v=!0,x=!1}if(_&&!x)return h||(h=new r),v||u(n)?o(n,e,t,f,m,h):a(n,e,b,t,f,m,h);if(!(1&t)){var k=x&&d.call(n,"__wrapped__"),j=w&&d.call(e,"__wrapped__");if(k||j){var T=k?n.value():n,S=j?e.value():e;return h||(h=new r),m(T,S,t,f,h)}}return!!_&&(h||(h=new r),i(n,e,t,f,m,h))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(42),o=t(251),a=t(146),i=t(150),s=t(252),l=t(95),c=r?r.prototype:void 0,u=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,p,d){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!p(new o(n),new o(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var f=s;case"[object Set]":var m=1&r;if(f||(f=l),n.size!=e.size&&!m)return!1;var h=d.get(n);if(h)return h==e;r|=2,d.set(n,e);var v=i(f(n),f(e),r,c,p,d);return d.delete(n),v;case"[object Symbol]":if(u)return u.call(n)==u.call(e)}return!1}},function(n,e,t){var r=t(16).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(254),o=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,a,i,s){var l=1&t,c=r(n),u=c.length;if(u!=r(e).length&&!l)return!1;for(var p=u;p--;){var d=c[p];if(!(l?d in e:o.call(e,d)))return!1}var f=s.get(n),m=s.get(e);if(f&&m)return f==e&&m==n;var h=!0;s.set(n,e),s.set(e,n);for(var v=l;++p<u;){var g=n[d=c[p]],b=e[d];if(a)var y=l?a(b,g,d,e,n,s):a(g,b,d,n,e,s);if(!(void 0===y?g===b||i(g,b,t,a,s):y)){h=!1;break}v||(v="constructor"==d)}if(h&&!v){var x=n.constructor,w=e.constructor;x==w||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof w&&w instanceof w||(h=!1)}return s.delete(n),s.delete(e),h}},function(n,e,t){var r=t(255),o=t(256),a=t(153);n.exports=function(n){return r(n,a,o)}},function(n,e,t){var r=t(143),o=t(15);n.exports=function(n,e,t){var a=e(n);return o(n)?a:r(a,t(n))}},function(n,e,t){var r=t(257),o=t(258),a=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(n){return null==n?[]:(n=Object(n),r(i(n),(function(e){return a.call(n,e)})))}:o;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=0,a=[];++t<r;){var i=n[t];e(i,t,n)&&(a[o++]=i)}return a}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(260),o=t(91),a=t(15),i=t(154),s=t(155),l=t(156),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=a(n),u=!t&&o(n),p=!t&&!u&&i(n),d=!t&&!u&&!p&&l(n),f=t||u||p||d,m=f?r(n.length,String):[],h=m.length;for(var v in n)!e&&!c.call(n,v)||f&&("length"==v||p&&("offset"==v||"parent"==v)||d&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||s(v,h))||m.push(v);return m}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(37),o=t(96),a=t(29),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,n.exports=function(n){return a(n)&&o(n.length)&&!!i[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(144),o=e&&!e.nodeType&&e,a=o&&"object"==typeof n&&n&&!n.nodeType&&n,i=a&&a.exports===o&&r.process,s=function(){try{var n=a&&a.require&&a.require("util").types;return n||i&&i.binding&&i.binding("util")}catch(n){}}();n.exports=s}).call(this,t(113)(n))},function(n,e,t){var r=t(266),o=t(267),a=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return o(n);var e=[];for(var t in Object(n))a.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(268)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(270),o=t(92),a=t(271),i=t(158),s=t(272),l=t(37),c=t(148),u=c(r),p=c(o),d=c(a),f=c(i),m=c(s),h=l;(r&&"[object DataView]"!=h(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=h(new o)||a&&"[object Promise]"!=h(a.resolve())||i&&"[object Set]"!=h(new i)||s&&"[object WeakMap]"!=h(new s))&&(h=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case u:return"[object DataView]";case p:return"[object Map]";case d:return"[object Promise]";case f:return"[object Set]";case m:return"[object WeakMap]"}return e}),n.exports=h},function(n,e,t){var r=t(24)(t(16),"DataView");n.exports=r},function(n,e,t){var r=t(24)(t(16),"Promise");n.exports=r},function(n,e,t){var r=t(24)(t(16),"WeakMap");n.exports=r},function(n,e,t){var r=t(159),o=t(153);n.exports=function(n){for(var e=o(n),t=e.length;t--;){var a=e[t],i=n[a];e[t]=[a,i,r(i)]}return e}},function(n,e,t){var r=t(149),o=t(275),a=t(282),i=t(97),s=t(159),l=t(160),c=t(65);n.exports=function(n,e){return i(n)&&s(e)?l(c(n),e):function(t){var i=o(t,n);return void 0===i&&i===e?a(t,n):r(e,i,3)}}},function(n,e,t){var r=t(161);n.exports=function(n,e,t){var o=null==n?void 0:r(n,e);return void 0===o?t:o}},function(n,e,t){var r=t(277),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,i=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(o,(function(n,t,r,o){e.push(r?o.replace(a,"$1"):t||n)})),e}));n.exports=i},function(n,e,t){var r=t(278);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(94);function o(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,o=e?e.apply(this,r):r[0],a=t.cache;if(a.has(o))return a.get(o);var i=n.apply(this,r);return t.cache=a.set(o,i)||a,i};return t.cache=new(o.Cache||r),t}o.Cache=r,n.exports=o},function(n,e,t){var r=t(280);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(42),o=t(281),a=t(15),i=t(98),s=r?r.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(a(e))return o(e,n)+"";if(i(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=Array(r);++t<r;)o[t]=e(n[t],t,n);return o}},function(n,e,t){var r=t(283),o=t(284);n.exports=function(n,e){return null!=n&&o(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(162),o=t(91),a=t(15),i=t(155),s=t(96),l=t(65);n.exports=function(n,e,t){for(var c=-1,u=(e=r(e,n)).length,p=!1;++c<u;){var d=l(e[c]);if(!(p=null!=n&&t(n,d)))break;n=n[d]}return p||++c!=u?p:!!(u=null==n?0:n.length)&&s(u)&&i(d,u)&&(a(n)||o(n))}},function(n,e,t){var r=t(286),o=t(287),a=t(97),i=t(65);n.exports=function(n){return a(n)?r(i(n)):o(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(161);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(99),o=t(289),a=t(291);n.exports=function(n,e){return a(o(n,e,r),n+"")}},function(n,e,t){var r=t(290),o=Math.max;n.exports=function(n,e,t){return e=o(void 0===e?n.length-1:e,0),function(){for(var a=arguments,i=-1,s=o(a.length-e,0),l=Array(s);++i<s;)l[i]=a[e+i];i=-1;for(var c=Array(e+1);++i<e;)c[i]=a[i];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(292),o=t(295)(r);n.exports=o},function(n,e,t){var r=t(293),o=t(294),a=t(99),i=o?function(n,e){return o(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:a;n.exports=i},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(24),o=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=o},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var o=t(),a=16-(o-r);if(r=o,a>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(151),o=t(297),a=t(302),i=t(152),s=t(303),l=t(95);n.exports=function(n,e,t){var c=-1,u=o,p=n.length,d=!0,f=[],m=f;if(t)d=!1,u=a;else if(p>=200){var h=e?null:s(n);if(h)return l(h);d=!1,u=i,m=new r}else m=e?[]:f;n:for(;++c<p;){var v=n[c],g=e?e(v):v;if(v=t||0!==v?v:0,d&&g==g){for(var b=m.length;b--;)if(m[b]===g)continue n;e&&m.push(g),f.push(v)}else u(m,g,t)||(m!==f&&m.push(g),f.push(v))}return f}},function(n,e,t){var r=t(298);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(299),o=t(300),a=t(301);n.exports=function(n,e,t){return e==e?a(n,e,t):r(n,o,t)}},function(n,e){n.exports=function(n,e,t,r){for(var o=n.length,a=t+(r?1:-1);r?a--:++a<o;)if(e(n[a],a,n))return a;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,o=n.length;++r<o;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,o=null==n?0:n.length;++r<o;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(158),o=t(304),a=t(95),i=r&&1/a(new r([,-0]))[1]==1/0?function(n){return new r(n)}:o;n.exports=i},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(157),o=t(29);n.exports=function(n){return o(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var r=t(6),o=t(2),a=t(73),i=t(9),s=t(7),l=t(22),c=t(193),u=t(39),p=t(1),d=t(28),f=t(50).f,m=t(21).f,h=t(8).f,v=t(181).trim,g=o.Number,b=g.prototype,y="Number"==l(d(b)),x=function(n){var e,t,r,o,a,i,s,l,c=u(n,!1);if("string"==typeof c&&c.length>2)if(43===(e=(c=v(c)).charCodeAt(0))||45===e){if(88===(t=c.charCodeAt(2))||120===t)return NaN}else if(48===e){switch(c.charCodeAt(1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+c}for(i=(a=c.slice(2)).length,s=0;s<i;s++)if((l=a.charCodeAt(s))<48||l>o)return NaN;return parseInt(a,r)}return+c};if(a("Number",!g(" 0o1")||!g("0b1")||g("+0x1"))){for(var w,_=function(n){var e=arguments.length<1?0:n,t=this;return t instanceof _&&(y?p((function(){b.valueOf.call(t)})):"Number"!=l(t))?c(new g(x(e)),t,_):x(e)},k=r?f(g):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","),j=0;k.length>j;j++)s(g,w=k[j])&&!s(_,w)&&h(_,w,m(g,w));_.prototype=b,b.constructor=_,i(o,"Number",_)}},function(n,e,t){"use strict";t(164)},function(n,e,t){"use strict";var r=t(23),o=t(4),a=[].slice,i={},s=function(n,e,t){if(!(e in i)){for(var r=[],o=0;o<e;o++)r[o]="a["+o+"]";i[e]=Function("C,a","return new C("+r.join(",")+")")}return i[e](n,t)};n.exports=Function.bind||function(n){var e=r(this),t=a.call(arguments,1),i=function(){var r=t.concat(a.call(arguments));return this instanceof i?s(e,r.length,r):e.apply(n,r)};return o(e.prototype)&&(i.prototype=e.prototype),i}},function(n,e,t){"use strict";t(167)},function(n,e,t){"use strict";t(168)},function(n,e,t){"use strict";t.r(e);t(106),t(197),t(202),t(203),t(26),t(69),t(49),t(10),t(27),t(33),t(104);var r=t(59),o=Object.freeze({});function a(n){return null==n}function i(n){return null!=n}function s(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function p(n){return"[object Object]"===u.call(n)}function d(n){return"[object RegExp]"===u.call(n)}function f(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function m(n){return i(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function h(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===u?JSON.stringify(n,null,2):String(n)}function v(n){var e=parseFloat(n);return isNaN(e)?n:e}function g(n,e){for(var t=Object.create(null),r=n.split(","),o=0;o<r.length;o++)t[r[o]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}g("slot,component",!0);var b=g("key,ref,slot,slot-scope,is");function y(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var x=Object.prototype.hasOwnProperty;function w(n,e){return x.call(n,e)}function _(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var k=/-(\w)/g,j=_((function(n){return n.replace(k,(function(n,e){return e?e.toUpperCase():""}))})),T=_((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),S=/\B([A-Z])/g,C=_((function(n){return n.replace(S,"-$1").toLowerCase()}));var I=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function P(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function E(n,e){for(var t in e)n[t]=e[t];return n}function A(n){for(var e={},t=0;t<n.length;t++)n[t]&&E(e,n[t]);return e}function z(n,e,t){}var O=function(n,e,t){return!1},R=function(n){return n};function M(n,e){if(n===e)return!0;var t=c(n),r=c(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var o=Array.isArray(n),a=Array.isArray(e);if(o&&a)return n.length===e.length&&n.every((function(n,t){return M(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(o||a)return!1;var i=Object.keys(n),s=Object.keys(e);return i.length===s.length&&i.every((function(t){return M(n[t],e[t])}))}catch(n){return!1}}function L(n,e){for(var t=0;t<n.length;t++)if(M(n[t],e))return t;return-1}function D(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var N=["component","directive","filter"],$=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:O,isReservedAttr:O,isUnknownElement:O,getTagNamespace:z,parsePlatformTagName:R,mustUseProp:O,async:!0,_lifecycleHooks:$},B=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function U(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var V=new RegExp("[^"+B.source+".$_\\d]");var H,q="__proto__"in{},W="undefined"!=typeof window,J="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,G=J&&WXEnvironment.platform.toLowerCase(),X=W&&window.navigator.userAgent.toLowerCase(),K=X&&/msie|trident/.test(X),Y=X&&X.indexOf("msie 9.0")>0,Q=X&&X.indexOf("edge/")>0,Z=(X&&X.indexOf("android"),X&&/iphone|ipad|ipod|ios/.test(X)||"ios"===G),nn=(X&&/chrome\/\d+/.test(X),X&&/phantomjs/.test(X),X&&X.match(/firefox\/(\d+)/)),en={}.watch,tn=!1;if(W)try{var rn={};Object.defineProperty(rn,"passive",{get:function(){tn=!0}}),window.addEventListener("test-passive",null,rn)}catch(n){}var on=function(){return void 0===H&&(H=!W&&!J&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),H},an=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function sn(n){return"function"==typeof n&&/native code/.test(n.toString())}var ln,cn="undefined"!=typeof Symbol&&sn(Symbol)&&"undefined"!=typeof Reflect&&sn(Reflect.ownKeys);ln="undefined"!=typeof Set&&sn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=z,pn=0,dn=function(){this.id=pn++,this.subs=[]};dn.prototype.addSub=function(n){this.subs.push(n)},dn.prototype.removeSub=function(n){y(this.subs,n)},dn.prototype.depend=function(){dn.target&&dn.target.addDep(this)},dn.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},dn.target=null;var fn=[];function mn(n){fn.push(n),dn.target=n}function hn(){fn.pop(),dn.target=fn[fn.length-1]}var vn=function(n,e,t,r,o,a,i,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=o,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},gn={child:{configurable:!0}};gn.child.get=function(){return this.componentInstance},Object.defineProperties(vn.prototype,gn);var bn=function(n){void 0===n&&(n="");var e=new vn;return e.text=n,e.isComment=!0,e};function yn(n){return new vn(void 0,void 0,void 0,String(n))}function xn(n){var e=new vn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var wn=Array.prototype,_n=Object.create(wn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=wn[n];U(_n,n,(function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];var o,a=e.apply(this,t),i=this.__ob__;switch(n){case"push":case"unshift":o=t;break;case"splice":o=t.slice(2)}return o&&i.observeArray(o),i.dep.notify(),a}))}));var kn=Object.getOwnPropertyNames(_n),jn=!0;function Tn(n){jn=n}var Sn=function(n){this.value=n,this.dep=new dn,this.vmCount=0,U(n,"__ob__",this),Array.isArray(n)?(q?function(n,e){n.__proto__=e}(n,_n):function(n,e,t){for(var r=0,o=t.length;r<o;r++){var a=t[r];U(n,a,e[a])}}(n,_n,kn),this.observeArray(n)):this.walk(n)};function Cn(n,e){var t;if(c(n)&&!(n instanceof vn))return w(n,"__ob__")&&n.__ob__ instanceof Sn?t=n.__ob__:jn&&!on()&&(Array.isArray(n)||p(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new Sn(n)),e&&t&&t.vmCount++,t}function In(n,e,t,r,o){var a=new dn,i=Object.getOwnPropertyDescriptor(n,e);if(!i||!1!==i.configurable){var s=i&&i.get,l=i&&i.set;s&&!l||2!==arguments.length||(t=n[e]);var c=!o&&Cn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return dn.target&&(a.depend(),c&&(c.dep.depend(),Array.isArray(e)&&An(e))),e},set:function(e){var r=s?s.call(n):t;e===r||e!=e&&r!=r||s&&!l||(l?l.call(n,e):t=e,c=!o&&Cn(e),a.notify())}})}}function Pn(n,e,t){if(Array.isArray(n)&&f(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var r=n.__ob__;return n._isVue||r&&r.vmCount?t:r?(In(r.value,e,t),r.dep.notify(),t):(n[e]=t,t)}function En(n,e){if(Array.isArray(n)&&f(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||w(n,e)&&(delete n[e],t&&t.dep.notify())}}function An(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&An(e)}Sn.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)In(n,e[t])},Sn.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Cn(n[e])};var zn=F.optionMergeStrategies;function On(n,e){if(!e)return n;for(var t,r,o,a=cn?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++)"__ob__"!==(t=a[i])&&(r=n[t],o=e[t],w(n,t)?r!==o&&p(r)&&p(o)&&On(r,o):Pn(n,t,o));return n}function Rn(n,e,t){return t?function(){var r="function"==typeof e?e.call(t,t):e,o="function"==typeof n?n.call(t,t):n;return r?On(r,o):o}:e?n?function(){return On("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function Mn(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Ln(n,e,t,r){var o=Object.create(n||null);return e?E(o,e):o}zn.data=function(n,e,t){return t?Rn(n,e,t):e&&"function"!=typeof e?n:Rn(n,e)},$.forEach((function(n){zn[n]=Mn})),N.forEach((function(n){zn[n+"s"]=Ln})),zn.watch=function(n,e,t,r){if(n===en&&(n=void 0),e===en&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var o={};for(var a in E(o,n),e){var i=o[a],s=e[a];i&&!Array.isArray(i)&&(i=[i]),o[a]=i?i.concat(s):Array.isArray(s)?s:[s]}return o},zn.props=zn.methods=zn.inject=zn.computed=function(n,e,t,r){if(!n)return e;var o=Object.create(null);return E(o,n),e&&E(o,e),o},zn.provide=Rn;var Dn=function(n,e){return void 0===e?n:e};function Nn(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var r,o,a={};if(Array.isArray(t))for(r=t.length;r--;)"string"==typeof(o=t[r])&&(a[j(o)]={type:null});else if(p(t))for(var i in t)o=t[i],a[j(i)]=p(o)?o:{type:o};else 0;n.props=a}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(Array.isArray(t))for(var o=0;o<t.length;o++)r[t[o]]={from:t[o]};else if(p(t))for(var a in t){var i=t[a];r[a]=p(i)?E({from:a},i):{from:i}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];"function"==typeof r&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=Nn(n,e.extends,t)),e.mixins))for(var r=0,o=e.mixins.length;r<o;r++)n=Nn(n,e.mixins[r],t);var a,i={};for(a in n)s(a);for(a in e)w(n,a)||s(a);function s(r){var o=zn[r]||Dn;i[r]=o(n[r],e[r],t,r)}return i}function $n(n,e,t,r){if("string"==typeof t){var o=n[e];if(w(o,t))return o[t];var a=j(t);if(w(o,a))return o[a];var i=T(a);return w(o,i)?o[i]:o[t]||o[a]||o[i]}}function Fn(n,e,t,r){var o=e[n],a=!w(t,n),i=t[n],s=Vn(Boolean,o.type);if(s>-1)if(a&&!w(o,"default"))i=!1;else if(""===i||i===C(n)){var l=Vn(String,o.type);(l<0||s<l)&&(i=!0)}if(void 0===i){i=function(n,e,t){if(!w(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof r&&"Function"!==Bn(e.type)?r.call(n):r}(r,o,n);var c=jn;Tn(!0),Cn(i),Tn(c)}return i}function Bn(n){var e=n&&n.toString().match(/^\s*function (\w+)/);return e?e[1]:""}function Un(n,e){return Bn(n)===Bn(e)}function Vn(n,e){if(!Array.isArray(e))return Un(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(Un(e[t],n))return t;return-1}function Hn(n,e,t){mn();try{if(e)for(var r=e;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var a=0;a<o.length;a++)try{if(!1===o[a].call(r,n,e,t))return}catch(n){Wn(n,r,"errorCaptured hook")}}Wn(n,e,t)}finally{hn()}}function qn(n,e,t,r,o){var a;try{(a=t?n.apply(e,t):n.call(e))&&!a._isVue&&m(a)&&!a._handled&&(a.catch((function(n){return Hn(n,r,o+" (Promise/async)")})),a._handled=!0)}catch(n){Hn(n,r,o)}return a}function Wn(n,e,t){if(F.errorHandler)try{return F.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Jn(e,null,"config.errorHandler")}Jn(n,e,t)}function Jn(n,e,t){if(!W&&!J||"undefined"==typeof console)throw n;console.error(n)}var Gn,Xn=!1,Kn=[],Yn=!1;function Qn(){Yn=!1;var n=Kn.slice(0);Kn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&sn(Promise)){var Zn=Promise.resolve();Gn=function(){Zn.then(Qn),Z&&setTimeout(z)},Xn=!0}else if(K||"undefined"==typeof MutationObserver||!sn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Gn="undefined"!=typeof setImmediate&&sn(setImmediate)?function(){setImmediate(Qn)}:function(){setTimeout(Qn,0)};else{var ne=1,ee=new MutationObserver(Qn),te=document.createTextNode(String(ne));ee.observe(te,{characterData:!0}),Gn=function(){ne=(ne+1)%2,te.data=String(ne)},Xn=!0}function re(n,e){var t;if(Kn.push((function(){if(n)try{n.call(e)}catch(n){Hn(n,e,"nextTick")}else t&&t(e)})),Yn||(Yn=!0,Gn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var oe=new ln;function ae(n){!function n(e,t){var r,o,a=Array.isArray(e);if(!a&&!c(e)||Object.isFrozen(e)||e instanceof vn)return;if(e.__ob__){var i=e.__ob__.dep.id;if(t.has(i))return;t.add(i)}if(a)for(r=e.length;r--;)n(e[r],t);else for(o=Object.keys(e),r=o.length;r--;)n(e[o[r]],t)}(n,oe),oe.clear()}var ie=_((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function se(n,e){function t(){var n=arguments,r=t.fns;if(!Array.isArray(r))return qn(r,null,arguments,e,"v-on handler");for(var o=r.slice(),a=0;a<o.length;a++)qn(o[a],null,n,e,"v-on handler")}return t.fns=n,t}function le(n,e,t,r,o,i){var l,c,u,p;for(l in n)c=n[l],u=e[l],p=ie(l),a(c)||(a(u)?(a(c.fns)&&(c=n[l]=se(c,i)),s(p.once)&&(c=n[l]=o(p.name,c,p.capture)),t(p.name,c,p.capture,p.passive,p.params)):c!==u&&(u.fns=c,n[l]=u));for(l in e)a(n[l])&&r((p=ie(l)).name,e[l],p.capture)}function ce(n,e,t){var r;n instanceof vn&&(n=n.data.hook||(n.data.hook={}));var o=n[e];function l(){t.apply(this,arguments),y(r.fns,l)}a(o)?r=se([l]):i(o.fns)&&s(o.merged)?(r=o).fns.push(l):r=se([o,l]),r.merged=!0,n[e]=r}function ue(n,e,t,r,o){if(i(e)){if(w(e,t))return n[t]=e[t],o||delete e[t],!0;if(w(e,r))return n[t]=e[r],o||delete e[r],!0}return!1}function pe(n){return l(n)?[yn(n)]:Array.isArray(n)?function n(e,t){var r,o,c,u,p=[];for(r=0;r<e.length;r++)a(o=e[r])||"boolean"==typeof o||(c=p.length-1,u=p[c],Array.isArray(o)?o.length>0&&(de((o=n(o,(t||"")+"_"+r))[0])&&de(u)&&(p[c]=yn(u.text+o[0].text),o.shift()),p.push.apply(p,o)):l(o)?de(u)?p[c]=yn(u.text+o):""!==o&&p.push(yn(o)):de(o)&&de(u)?p[c]=yn(u.text+o.text):(s(e._isVList)&&i(o.tag)&&a(o.key)&&i(t)&&(o.key="__vlist"+t+"_"+r+"__"),p.push(o)));return p}(n):void 0}function de(n){return i(n)&&i(n.text)&&!1===n.isComment}function fe(n,e){if(n){for(var t=Object.create(null),r=cn?Reflect.ownKeys(n):Object.keys(n),o=0;o<r.length;o++){var a=r[o];if("__ob__"!==a){for(var i=n[a].from,s=e;s;){if(s._provided&&w(s._provided,i)){t[a]=s._provided[i];break}s=s.$parent}if(!s)if("default"in n[a]){var l=n[a].default;t[a]="function"==typeof l?l.call(e):l}else 0}}return t}}function me(n,e){if(!n||!n.length)return{};for(var t={},r=0,o=n.length;r<o;r++){var a=n[r],i=a.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,a.context!==e&&a.fnContext!==e||!i||null==i.slot)(t.default||(t.default=[])).push(a);else{var s=i.slot,l=t[s]||(t[s]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var c in t)t[c].every(he)&&delete t[c];return t}function he(n){return n.isComment&&!n.asyncFactory||" "===n.text}function ve(n,e,t){var r,a=Object.keys(e).length>0,i=n?!!n.$stable:!a,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(i&&t&&t!==o&&s===t.$key&&!a&&!t.$hasNormal)return t;for(var l in r={},n)n[l]&&"$"!==l[0]&&(r[l]=ge(e,l,n[l]))}else r={};for(var c in e)c in r||(r[c]=be(e,c));return n&&Object.isExtensible(n)&&(n._normalized=r),U(r,"$stable",i),U(r,"$key",s),U(r,"$hasNormal",a),r}function ge(n,e,t){var r=function(){var n=arguments.length?t.apply(null,arguments):t({});return(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:pe(n))&&(0===n.length||1===n.length&&n[0].isComment)?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:r,enumerable:!0,configurable:!0}),r}function be(n,e){return function(){return n[e]}}function ye(n,e){var t,r,o,a,s;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),r=0,o=n.length;r<o;r++)t[r]=e(n[r],r);else if("number"==typeof n)for(t=new Array(n),r=0;r<n;r++)t[r]=e(r+1,r);else if(c(n))if(cn&&n[Symbol.iterator]){t=[];for(var l=n[Symbol.iterator](),u=l.next();!u.done;)t.push(e(u.value,t.length)),u=l.next()}else for(a=Object.keys(n),t=new Array(a.length),r=0,o=a.length;r<o;r++)s=a[r],t[r]=e(n[s],s,r);return i(t)||(t=[]),t._isVList=!0,t}function xe(n,e,t,r){var o,a=this.$scopedSlots[n];a?(t=t||{},r&&(t=E(E({},r),t)),o=a(t)||e):o=this.$slots[n]||e;var i=t&&t.slot;return i?this.$createElement("template",{slot:i},o):o}function we(n){return $n(this.$options,"filters",n)||R}function _e(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function ke(n,e,t,r,o){var a=F.keyCodes[e]||t;return o&&r&&!F.keyCodes[e]?_e(o,r):a?_e(a,n):r?C(r)!==e:void 0}function je(n,e,t,r,o){if(t)if(c(t)){var a;Array.isArray(t)&&(t=A(t));var i=function(i){if("class"===i||"style"===i||b(i))a=n;else{var s=n.attrs&&n.attrs.type;a=r||F.mustUseProp(e,s,i)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=j(i),c=C(i);l in a||c in a||(a[i]=t[i],o&&((n.on||(n.on={}))["update:"+i]=function(n){t[i]=n}))};for(var s in t)i(s)}else;return n}function Te(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||Ce(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),r}function Se(n,e,t){return Ce(n,"__once__"+e+(t?"_"+t:""),!0),n}function Ce(n,e,t){if(Array.isArray(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&Ie(n[r],e+"_"+r,t);else Ie(n,e,t)}function Ie(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function Pe(n,e){if(e)if(p(e)){var t=n.on=n.on?E({},n.on):{};for(var r in e){var o=t[r],a=e[r];t[r]=o?[].concat(o,a):a}}else;return n}function Ee(n,e,t,r){e=e||{$stable:!t};for(var o=0;o<n.length;o++){var a=n[o];Array.isArray(a)?Ee(a,e,t):a&&(a.proxy&&(a.fn.proxy=!0),e[a.key]=a.fn)}return r&&(e.$key=r),e}function Ae(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function ze(n,e){return"string"==typeof n?e+n:n}function Oe(n){n._o=Se,n._n=v,n._s=h,n._l=ye,n._t=xe,n._q=M,n._i=L,n._m=Te,n._f=we,n._k=ke,n._b=je,n._v=yn,n._e=bn,n._u=Ee,n._g=Pe,n._d=Ae,n._p=ze}function Re(n,e,t,r,a){var i,l=this,c=a.options;w(r,"_uid")?(i=Object.create(r))._original=r:(i=r,r=r._original);var u=s(c._compiled),p=!u;this.data=n,this.props=e,this.children=t,this.parent=r,this.listeners=n.on||o,this.injections=fe(c.inject,r),this.slots=function(){return l.$slots||ve(n.scopedSlots,l.$slots=me(t,r)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ve(n.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=ve(n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,o){var a=Be(i,n,e,t,o,p);return a&&!Array.isArray(a)&&(a.fnScopeId=c._scopeId,a.fnContext=r),a}:this._c=function(n,e,t,r){return Be(i,n,e,t,r,p)}}function Me(n,e,t,r,o){var a=xn(n);return a.fnContext=t,a.fnOptions=r,e.slot&&((a.data||(a.data={})).slot=e.slot),a}function Le(n,e){for(var t in e)n[j(t)]=e[t]}Oe(Re.prototype);var De={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;De.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;i(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ye)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,r,a){0;var i=r.data.scopedSlots,s=n.$scopedSlots,l=!!(i&&!i.$stable||s!==o&&!s.$stable||i&&n.$scopedSlots.$key!==i.$key),c=!!(a||n.$options._renderChildren||l);n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r);if(n.$options._renderChildren=a,n.$attrs=r.data.attrs||o,n.$listeners=t||o,e&&n.$options.props){Tn(!1);for(var u=n._props,p=n.$options._propKeys||[],d=0;d<p.length;d++){var f=p[d],m=n.$options.props;u[f]=Fn(f,m,e,n)}Tn(!0),n.$options.propsData=e}t=t||o;var h=n.$options._parentListeners;n.$options._parentListeners=t,Ke(n,t,h),c&&(n.$slots=me(a,r.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,et(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,rt.push(e)):nt(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,Ze(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);et(e,"deactivated")}}(e,!0):e.$destroy())}},Ne=Object.keys(De);function $e(n,e,t,r,l){if(!a(n)){var u=t.$options._base;if(c(n)&&(n=u.extend(n)),"function"==typeof n){var p;if(a(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&i(n.errorComp))return n.errorComp;if(i(n.resolved))return n.resolved;var t=Ve;t&&i(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(s(n.loading)&&i(n.loadingComp))return n.loadingComp;if(t&&!i(n.owners)){var r=n.owners=[t],o=!0,l=null,u=null;t.$on("hook:destroyed",(function(){return y(r,t)}));var p=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==u&&(clearTimeout(u),u=null))},d=D((function(t){n.resolved=He(t,e),o?r.length=0:p(!0)})),f=D((function(e){i(n.errorComp)&&(n.error=!0,p(!0))})),h=n(d,f);return c(h)&&(m(h)?a(n.resolved)&&h.then(d,f):m(h.component)&&(h.component.then(d,f),i(h.error)&&(n.errorComp=He(h.error,e)),i(h.loading)&&(n.loadingComp=He(h.loading,e),0===h.delay?n.loading=!0:l=setTimeout((function(){l=null,a(n.resolved)&&a(n.error)&&(n.loading=!0,p(!1))}),h.delay||200)),i(h.timeout)&&(u=setTimeout((function(){u=null,a(n.resolved)&&f(null)}),h.timeout)))),o=!1,n.loading?n.loadingComp:n.resolved}}(p=n,u)))return function(n,e,t,r,o){var a=bn();return a.asyncFactory=n,a.asyncMeta={data:e,context:t,children:r,tag:o},a}(p,e,t,r,l);e=e||{},kt(n),i(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var o=e.on||(e.on={}),a=o[r],s=e.model.callback;i(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(o[r]=[s].concat(a)):o[r]=s}(n.options,e);var d=function(n,e,t){var r=e.options.props;if(!a(r)){var o={},s=n.attrs,l=n.props;if(i(s)||i(l))for(var c in r){var u=C(c);ue(o,l,c,u,!0)||ue(o,s,c,u,!1)}return o}}(e,n);if(s(n.options.functional))return function(n,e,t,r,a){var s=n.options,l={},c=s.props;if(i(c))for(var u in c)l[u]=Fn(u,c,e||o);else i(t.attrs)&&Le(l,t.attrs),i(t.props)&&Le(l,t.props);var p=new Re(t,l,a,r,n),d=s.render.call(null,p._c,p);if(d instanceof vn)return Me(d,t,p.parent,s,p);if(Array.isArray(d)){for(var f=pe(d)||[],m=new Array(f.length),h=0;h<f.length;h++)m[h]=Me(f[h],t,p.parent,s,p);return m}}(n,d,e,t,r);var f=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var h=e.slot;e={},h&&(e.slot=h)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<Ne.length;t++){var r=Ne[t],o=e[r],a=De[r];o===a||o&&o._merged||(e[r]=o?Fe(a,o):a)}}(e);var v=n.options.name||l;return new vn("vue-component-"+n.cid+(v?"-"+v:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:d,listeners:f,tag:l,children:r},p)}}}function Fe(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}function Be(n,e,t,r,o,u){return(Array.isArray(t)||l(t))&&(o=r,r=t,t=void 0),s(u)&&(o=2),function(n,e,t,r,o){if(i(t)&&i(t.__ob__))return bn();i(t)&&i(t.is)&&(e=t.is);if(!e)return bn();0;Array.isArray(r)&&"function"==typeof r[0]&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===o?r=pe(r):1===o&&(r=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var l,u;if("string"==typeof e){var p;u=n.$vnode&&n.$vnode.ns||F.getTagNamespace(e),l=F.isReservedTag(e)?new vn(F.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!i(p=$n(n.$options,"components",e))?new vn(e,t,r,void 0,void 0,n):$e(p,t,n,r,e)}else l=$e(e,t,n,r);return Array.isArray(l)?l:i(l)?(i(u)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(i(e.children))for(var o=0,l=e.children.length;o<l;o++){var c=e.children[o];i(c.tag)&&(a(c.ns)||s(r)&&"svg"!==c.tag)&&n(c,t,r)}}(l,u),i(t)&&function(n){c(n.style)&&ae(n.style);c(n.class)&&ae(n.class)}(t),l):bn()}(n,e,t,r,o)}var Ue,Ve=null;function He(n,e){return(n.__esModule||cn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),c(n)?e.extend(n):n}function qe(n){return n.isComment&&n.asyncFactory}function We(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(i(t)&&(i(t.componentOptions)||qe(t)))return t}}function Je(n,e){Ue.$on(n,e)}function Ge(n,e){Ue.$off(n,e)}function Xe(n,e){var t=Ue;return function r(){var o=e.apply(null,arguments);null!==o&&t.$off(n,r)}}function Ke(n,e,t){Ue=n,le(e,t||{},Je,Ge,Xe,n),Ue=void 0}var Ye=null;function Qe(n){var e=Ye;return Ye=n,function(){Ye=e}}function Ze(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function nt(n,e){if(e){if(n._directInactive=!1,Ze(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)nt(n.$children[t]);et(n,"activated")}}function et(n,e){mn();var t=n.$options[e],r=e+" hook";if(t)for(var o=0,a=t.length;o<a;o++)qn(t[o],n,null,n,r);n._hasHookEvent&&n.$emit("hook:"+e),hn()}var tt=[],rt=[],ot={},at=!1,it=!1,st=0;var lt=0,ct=Date.now;if(W&&!K){var ut=window.performance;ut&&"function"==typeof ut.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return ut.now()})}function pt(){var n,e;for(lt=ct(),it=!0,tt.sort((function(n,e){return n.id-e.id})),st=0;st<tt.length;st++)(n=tt[st]).before&&n.before(),e=n.id,ot[e]=null,n.run();var t=rt.slice(),r=tt.slice();st=tt.length=rt.length=0,ot={},at=it=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,nt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r._watcher===t&&r._isMounted&&!r._isDestroyed&&et(r,"updated")}}(r),an&&F.devtools&&an.emit("flush")}var dt=0,ft=function(n,e,t,r,o){this.vm=n,o&&(n._watcher=this),n._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++dt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ln,this.newDepIds=new ln,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!V.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=z)),this.value=this.lazy?void 0:this.get()};ft.prototype.get=function(){var n;mn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Hn(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ae(n),hn(),this.cleanupDeps()}return n},ft.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},ft.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},ft.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==ot[e]){if(ot[e]=!0,it){for(var t=tt.length-1;t>st&&tt[t].id>n.id;)t--;tt.splice(t+1,0,n)}else tt.push(n);at||(at=!0,re(pt))}}(this)},ft.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||c(n)||this.deep){var e=this.value;if(this.value=n,this.user)try{this.cb.call(this.vm,n,e)}catch(n){Hn(n,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,n,e)}}},ft.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},ft.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},ft.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||y(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var mt={enumerable:!0,configurable:!0,get:z,set:z};function ht(n,e,t){mt.get=function(){return this[e][t]},mt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,mt)}function vt(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props={},o=n.$options._propKeys=[];n.$parent&&Tn(!1);var a=function(a){o.push(a);var i=Fn(a,e,t,n);In(r,a,i),a in n||ht(n,"_props",a)};for(var i in e)a(i);Tn(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?z:I(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;p(e=n._data="function"==typeof e?function(n,e){mn();try{return n.call(e,e)}catch(n){return Hn(n,e,"data()"),{}}finally{hn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,o=(n.$options.methods,t.length);for(;o--;){var a=t[o];0,r&&w(r,a)||(i=void 0,36!==(i=(a+"").charCodeAt(0))&&95!==i&&ht(n,"_data",a))}var i;Cn(e,!0)}(n):Cn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=on();for(var o in e){var a=e[o],i="function"==typeof a?a:a.get;0,r||(t[o]=new ft(n,i||z,z,gt)),o in n||bt(n,o,a)}}(n,e.computed),e.watch&&e.watch!==en&&function(n,e){for(var t in e){var r=e[t];if(Array.isArray(r))for(var o=0;o<r.length;o++)wt(n,t,r[o]);else wt(n,t,r)}}(n,e.watch)}var gt={lazy:!0};function bt(n,e,t){var r=!on();"function"==typeof t?(mt.get=r?yt(e):xt(t),mt.set=z):(mt.get=t.get?r&&!1!==t.cache?yt(e):xt(t.get):z,mt.set=t.set||z),Object.defineProperty(n,e,mt)}function yt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),dn.target&&e.depend(),e.value}}function xt(n){return function(){return n.call(this,this)}}function wt(n,e,t,r){return p(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var _t=0;function kt(n){var e=n.options;if(n.super){var t=kt(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var o in t)t[o]!==r[o]&&(e||(e={}),e[o]=t[o]);return e}(n);r&&E(n.extendOptions,r),(e=n.options=Nn(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function jt(n){this._init(n)}function Tt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,o=n._Ctor||(n._Ctor={});if(o[r])return o[r];var a=n.name||t.options.name;var i=function(n){this._init(n)};return(i.prototype=Object.create(t.prototype)).constructor=i,i.cid=e++,i.options=Nn(t.options,n),i.super=t,i.options.props&&function(n){var e=n.options.props;for(var t in e)ht(n.prototype,"_props",t)}(i),i.options.computed&&function(n){var e=n.options.computed;for(var t in e)bt(n.prototype,t,e[t])}(i),i.extend=t.extend,i.mixin=t.mixin,i.use=t.use,N.forEach((function(n){i[n]=t[n]})),a&&(i.options.components[a]=i),i.superOptions=t.options,i.extendOptions=n,i.sealedOptions=E({},i.options),o[r]=i,i}}function St(n){return n&&(n.Ctor.options.name||n.tag)}function Ct(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!d(n)&&n.test(e)}function It(n,e){var t=n.cache,r=n.keys,o=n._vnode;for(var a in t){var i=t[a];if(i){var s=St(i.componentOptions);s&&!e(s)&&Pt(t,a,r,o)}}}function Pt(n,e,t,r){var o=n[e];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),n[e]=null,y(t,e)}jt.prototype._init=function(n){var e=this;e._uid=_t++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var o=r.componentOptions;t.propsData=o.propsData,t._parentListeners=o.listeners,t._renderChildren=o.children,t._componentTag=o.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Nn(kt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ke(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,r=t&&t.context;n.$slots=me(e._renderChildren,r),n.$scopedSlots=o,n._c=function(e,t,r,o){return Be(n,e,t,r,o,!1)},n.$createElement=function(e,t,r,o){return Be(n,e,t,r,o,!0)};var a=t&&t.data;In(n,"$attrs",a&&a.attrs||o,null,!0),In(n,"$listeners",e._parentListeners||o,null,!0)}(e),et(e,"beforeCreate"),function(n){var e=fe(n.$options.inject,n);e&&(Tn(!1),Object.keys(e).forEach((function(t){In(n,t,e[t])})),Tn(!0))}(e),vt(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),et(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Pn,n.prototype.$delete=En,n.prototype.$watch=function(n,e,t){if(p(e))return wt(this,n,e,t);(t=t||{}).user=!0;var r=new ft(this,n,e,t);if(t.immediate)try{e.call(this,r.value)}catch(n){Hn(n,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(jt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(Array.isArray(n))for(var o=0,a=n.length;o<a;o++)r.$on(n[o],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var r=0,o=n.length;r<o;r++)t.$off(n[r],e);return t}var a,i=t._events[n];if(!i)return t;if(!e)return t._events[n]=null,t;for(var s=i.length;s--;)if((a=i[s])===e||a.fn===e){i.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?P(t):t;for(var r=P(arguments,1),o='event handler for "'+n+'"',a=0,i=t.length;a<i;a++)qn(t[a],e,r,e,o)}return e}}(jt),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,o=t._vnode,a=Qe(t);t._vnode=n,t.$el=o?t.__patch__(o,n):t.__patch__(t.$el,n,e,!1),a(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){et(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||y(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),et(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(jt),function(n){Oe(n.prototype),n.prototype.$nextTick=function(n){return re(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,r=t.render,o=t._parentVnode;o&&(e.$scopedSlots=ve(o.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=o;try{Ve=e,n=r.call(e._renderProxy,e.$createElement)}catch(t){Hn(t,e,"render"),n=e._vnode}finally{Ve=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof vn||(n=bn()),n.parent=o,n}}(jt);var Et=[String,RegExp,Array],At={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Et,exclude:Et,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Pt(this.cache,n,this.keys)},mounted:function(){var n=this;this.$watch("include",(function(e){It(n,(function(n){return Ct(e,n)}))})),this.$watch("exclude",(function(e){It(n,(function(n){return!Ct(e,n)}))}))},render:function(){var n=this.$slots.default,e=We(n),t=e&&e.componentOptions;if(t){var r=St(t),o=this.include,a=this.exclude;if(o&&(!r||!Ct(o,r))||a&&r&&Ct(a,r))return e;var i=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;i[l]?(e.componentInstance=i[l].componentInstance,y(s,l),s.push(l)):(i[l]=e,s.push(l),this.max&&s.length>parseInt(this.max)&&Pt(i,s[0],s,this._vnode)),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return F}};Object.defineProperty(n,"config",e),n.util={warn:un,extend:E,mergeOptions:Nn,defineReactive:In},n.set=Pn,n.delete=En,n.nextTick=re,n.observable=function(n){return Cn(n),n},n.options=Object.create(null),N.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,E(n.options.components,At),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=P(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Nn(this.options,n),this}}(n),Tt(n),function(n){N.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(jt),Object.defineProperty(jt.prototype,"$isServer",{get:on}),Object.defineProperty(jt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(jt,"FunctionalRenderContext",{value:Re}),jt.version="2.6.12";var zt=g("style,class"),Ot=g("input,textarea,option,select,progress"),Rt=g("contenteditable,draggable,spellcheck"),Mt=g("events,caret,typing,plaintext-only"),Lt=g("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Dt="http://www.w3.org/1999/xlink",Nt=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},$t=function(n){return Nt(n)?n.slice(6,n.length):""},Ft=function(n){return null==n||!1===n};function Bt(n){for(var e=n.data,t=n,r=n;i(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=Ut(r.data,e));for(;i(t=t.parent);)t&&t.data&&(e=Ut(e,t.data));return function(n,e){if(i(n)||i(e))return Vt(n,Ht(e));return""}(e.staticClass,e.class)}function Ut(n,e){return{staticClass:Vt(n.staticClass,e.staticClass),class:i(n.class)?[n.class,e.class]:e.class}}function Vt(n,e){return n?e?n+" "+e:n:e||""}function Ht(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,o=n.length;r<o;r++)i(e=Ht(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):c(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var qt={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Wt=g("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Jt=g("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Gt=function(n){return Wt(n)||Jt(n)};var Xt=Object.create(null);var Kt=g("text,number,password,search,email,tel,url");var Yt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(qt[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Qt={create:function(n,e){Zt(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Zt(n,!0),Zt(e))},destroy:function(n){Zt(n,!0)}};function Zt(n,e){var t=n.data.ref;if(i(t)){var r=n.context,o=n.componentInstance||n.elm,a=r.$refs;e?Array.isArray(a[t])?y(a[t],o):a[t]===o&&(a[t]=void 0):n.data.refInFor?Array.isArray(a[t])?a[t].indexOf(o)<0&&a[t].push(o):a[t]=[o]:a[t]=o}}var nr=new vn("",{},[]),er=["create","activate","update","remove","destroy"];function tr(n,e){return n.key===e.key&&(n.tag===e.tag&&n.isComment===e.isComment&&i(n.data)===i(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=i(t=n.data)&&i(t=t.attrs)&&t.type,o=i(t=e.data)&&i(t=t.attrs)&&t.type;return r===o||Kt(r)&&Kt(o)}(n,e)||s(n.isAsyncPlaceholder)&&n.asyncFactory===e.asyncFactory&&a(e.asyncFactory.error))}function rr(n,e,t){var r,o,a={};for(r=e;r<=t;++r)i(o=n[r].key)&&(a[o]=r);return a}var or={create:ar,update:ar,destroy:function(n){ar(n,nr)}};function ar(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,o,a=n===nr,i=e===nr,s=sr(n.data.directives,n.context),l=sr(e.data.directives,e.context),c=[],u=[];for(t in l)r=s[t],o=l[t],r?(o.oldValue=r.value,o.oldArg=r.arg,cr(o,"update",e,n),o.def&&o.def.componentUpdated&&u.push(o)):(cr(o,"bind",e,n),o.def&&o.def.inserted&&c.push(o));if(c.length){var p=function(){for(var t=0;t<c.length;t++)cr(c[t],"inserted",e,n)};a?ce(e,"insert",p):p()}u.length&&ce(e,"postpatch",(function(){for(var t=0;t<u.length;t++)cr(u[t],"componentUpdated",e,n)}));if(!a)for(t in s)l[t]||cr(s[t],"unbind",n,n,i)}(n,e)}var ir=Object.create(null);function sr(n,e){var t,r,o=Object.create(null);if(!n)return o;for(t=0;t<n.length;t++)(r=n[t]).modifiers||(r.modifiers=ir),o[lr(r)]=r,r.def=$n(e.$options,"directives",r.name);return o}function lr(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function cr(n,e,t,r,o){var a=n.def&&n.def[e];if(a)try{a(t.elm,n,t,r,o)}catch(r){Hn(r,t.context,"directive "+n.name+" "+e+" hook")}}var ur=[Qt,or];function pr(n,e){var t=e.componentOptions;if(!(i(t)&&!1===t.Ctor.options.inheritAttrs||a(n.data.attrs)&&a(e.data.attrs))){var r,o,s=e.elm,l=n.data.attrs||{},c=e.data.attrs||{};for(r in i(c.__ob__)&&(c=e.data.attrs=E({},c)),c)o=c[r],l[r]!==o&&dr(s,r,o);for(r in(K||Q)&&c.value!==l.value&&dr(s,"value",c.value),l)a(c[r])&&(Nt(r)?s.removeAttributeNS(Dt,$t(r)):Rt(r)||s.removeAttribute(r))}}function dr(n,e,t){n.tagName.indexOf("-")>-1?fr(n,e,t):Lt(e)?Ft(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):Rt(e)?n.setAttribute(e,function(n,e){return Ft(e)||"false"===e?"false":"contenteditable"===n&&Mt(e)?e:"true"}(e,t)):Nt(e)?Ft(t)?n.removeAttributeNS(Dt,$t(e)):n.setAttributeNS(Dt,e,t):fr(n,e,t)}function fr(n,e,t){if(Ft(t))n.removeAttribute(e);else{if(K&&!Y&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var mr={create:pr,update:pr};function hr(n,e){var t=e.elm,r=e.data,o=n.data;if(!(a(r.staticClass)&&a(r.class)&&(a(o)||a(o.staticClass)&&a(o.class)))){var s=Bt(e),l=t._transitionClasses;i(l)&&(s=Vt(s,Ht(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var vr,gr={create:hr,update:hr};function br(n,e,t){var r=vr;return function o(){var a=e.apply(null,arguments);null!==a&&wr(n,o,t,r)}}var yr=Xn&&!(nn&&Number(nn[1])<=53);function xr(n,e,t,r){if(yr){var o=lt,a=e;e=a._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=o||n.timeStamp<=0||n.target.ownerDocument!==document)return a.apply(this,arguments)}}vr.addEventListener(n,e,tn?{capture:t,passive:r}:t)}function wr(n,e,t,r){(r||vr).removeEventListener(n,e._wrapper||e,t)}function _r(n,e){if(!a(n.data.on)||!a(e.data.on)){var t=e.data.on||{},r=n.data.on||{};vr=e.elm,function(n){if(i(n.__r)){var e=K?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}i(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),le(t,r,xr,wr,br,e.context),vr=void 0}}var kr,jr={create:_r,update:_r};function Tr(n,e){if(!a(n.data.domProps)||!a(e.data.domProps)){var t,r,o=e.elm,s=n.data.domProps||{},l=e.data.domProps||{};for(t in i(l.__ob__)&&(l=e.data.domProps=E({},l)),s)t in l||(o[t]="");for(t in l){if(r=l[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===s[t])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===t&&"PROGRESS"!==o.tagName){o._value=r;var c=a(r)?"":String(r);Sr(o,c)&&(o.value=c)}else if("innerHTML"===t&&Jt(o.tagName)&&a(o.innerHTML)){(kr=kr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=kr.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;u.firstChild;)o.appendChild(u.firstChild)}else if(r!==s[t])try{o[t]=r}catch(n){}}}}function Sr(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(i(r)){if(r.number)return v(t)!==v(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Cr={create:Tr,update:Tr},Ir=_((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function Pr(n){var e=Er(n.style);return n.staticStyle?E(n.staticStyle,e):e}function Er(n){return Array.isArray(n)?A(n):"string"==typeof n?Ir(n):n}var Ar,zr=/^--/,Or=/\s*!important$/,Rr=function(n,e,t){if(zr.test(e))n.style.setProperty(e,t);else if(Or.test(t))n.style.setProperty(C(e),t.replace(Or,""),"important");else{var r=Lr(e);if(Array.isArray(t))for(var o=0,a=t.length;o<a;o++)n.style[r]=t[o];else n.style[r]=t}},Mr=["Webkit","Moz","ms"],Lr=_((function(n){if(Ar=Ar||document.createElement("div").style,"filter"!==(n=j(n))&&n in Ar)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Mr.length;t++){var r=Mr[t]+e;if(r in Ar)return r}}));function Dr(n,e){var t=e.data,r=n.data;if(!(a(t.staticStyle)&&a(t.style)&&a(r.staticStyle)&&a(r.style))){var o,s,l=e.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},p=c||u,d=Er(e.data.style)||{};e.data.normalizedStyle=i(d.__ob__)?E({},d):d;var f=function(n,e){var t,r={};if(e)for(var o=n;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(t=Pr(o.data))&&E(r,t);(t=Pr(n.data))&&E(r,t);for(var a=n;a=a.parent;)a.data&&(t=Pr(a.data))&&E(r,t);return r}(e,!0);for(s in p)a(f[s])&&Rr(l,s,"");for(s in f)(o=f[s])!==p[s]&&Rr(l,s,null==o?"":o)}}var Nr={create:Dr,update:Dr},$r=/\s+/;function Fr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split($r).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Br(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split($r).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function Ur(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&E(e,Vr(n.name||"v")),E(e,n),e}return"string"==typeof n?Vr(n):void 0}}var Vr=_((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Hr=W&&!Y,qr="transition",Wr="transitionend",Jr="animation",Gr="animationend";Hr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(qr="WebkitTransition",Wr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Jr="WebkitAnimation",Gr="webkitAnimationEnd"));var Xr=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Kr(n){Xr((function(){Xr(n)}))}function Yr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Fr(n,e))}function Qr(n,e){n._transitionClasses&&y(n._transitionClasses,e),Br(n,e)}function Zr(n,e,t){var r=eo(n,e),o=r.type,a=r.timeout,i=r.propCount;if(!o)return t();var s="transition"===o?Wr:Gr,l=0,c=function(){n.removeEventListener(s,u),t()},u=function(e){e.target===n&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),a+1),n.addEventListener(s,u)}var no=/\b(transform|all)(,|$)/;function eo(n,e){var t,r=window.getComputedStyle(n),o=(r[qr+"Delay"]||"").split(", "),a=(r[qr+"Duration"]||"").split(", "),i=to(o,a),s=(r[Jr+"Delay"]||"").split(", "),l=(r[Jr+"Duration"]||"").split(", "),c=to(s,l),u=0,p=0;return"transition"===e?i>0&&(t="transition",u=i,p=a.length):"animation"===e?c>0&&(t="animation",u=c,p=l.length):p=(t=(u=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===t?a.length:l.length:0,{type:t,timeout:u,propCount:p,hasTransform:"transition"===t&&no.test(r[qr+"Property"])}}function to(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return ro(e)+ro(n[t])})))}function ro(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function oo(n,e){var t=n.elm;i(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=Ur(n.data.transition);if(!a(r)&&!i(t._enterCb)&&1===t.nodeType){for(var o=r.css,s=r.type,l=r.enterClass,u=r.enterToClass,p=r.enterActiveClass,d=r.appearClass,f=r.appearToClass,m=r.appearActiveClass,h=r.beforeEnter,g=r.enter,b=r.afterEnter,y=r.enterCancelled,x=r.beforeAppear,w=r.appear,_=r.afterAppear,k=r.appearCancelled,j=r.duration,T=Ye,S=Ye.$vnode;S&&S.parent;)T=S.context,S=S.parent;var C=!T._isMounted||!n.isRootInsert;if(!C||w||""===w){var I=C&&d?d:l,P=C&&m?m:p,E=C&&f?f:u,A=C&&x||h,z=C&&"function"==typeof w?w:g,O=C&&_||b,R=C&&k||y,M=v(c(j)?j.enter:j);0;var L=!1!==o&&!Y,N=so(z),$=t._enterCb=D((function(){L&&(Qr(t,E),Qr(t,P)),$.cancelled?(L&&Qr(t,I),R&&R(t)):O&&O(t),t._enterCb=null}));n.data.show||ce(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),z&&z(t,$)})),A&&A(t),L&&(Yr(t,I),Yr(t,P),Kr((function(){Qr(t,I),$.cancelled||(Yr(t,E),N||(io(M)?setTimeout($,M):Zr(t,s,$)))}))),n.data.show&&(e&&e(),z&&z(t,$)),L||N||$()}}}function ao(n,e){var t=n.elm;i(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=Ur(n.data.transition);if(a(r)||1!==t.nodeType)return e();if(!i(t._leaveCb)){var o=r.css,s=r.type,l=r.leaveClass,u=r.leaveToClass,p=r.leaveActiveClass,d=r.beforeLeave,f=r.leave,m=r.afterLeave,h=r.leaveCancelled,g=r.delayLeave,b=r.duration,y=!1!==o&&!Y,x=so(f),w=v(c(b)?b.leave:b);0;var _=t._leaveCb=D((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(Qr(t,u),Qr(t,p)),_.cancelled?(y&&Qr(t,l),h&&h(t)):(e(),m&&m(t)),t._leaveCb=null}));g?g(k):k()}function k(){_.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),d&&d(t),y&&(Yr(t,l),Yr(t,p),Kr((function(){Qr(t,l),_.cancelled||(Yr(t,u),x||(io(w)?setTimeout(_,w):Zr(t,s,_)))}))),f&&f(t,_),y||x||_())}}function io(n){return"number"==typeof n&&!isNaN(n)}function so(n){if(a(n))return!1;var e=n.fns;return i(e)?so(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function lo(n,e){!0!==e.data.show&&oo(e)}var co=function(n){var e,t,r={},o=n.modules,c=n.nodeOps;for(e=0;e<er.length;++e)for(r[er[e]]=[],t=0;t<o.length;++t)i(o[t][er[e]])&&r[er[e]].push(o[t][er[e]]);function u(n){var e=c.parentNode(n);i(e)&&c.removeChild(e,n)}function p(n,e,t,o,a,l,u){if(i(n.elm)&&i(l)&&(n=l[u]=xn(n)),n.isRootInsert=!a,!function(n,e,t,o){var a=n.data;if(i(a)){var l=i(n.componentInstance)&&a.keepAlive;if(i(a=a.hook)&&i(a=a.init)&&a(n,!1),i(n.componentInstance))return d(n,e),f(t,n.elm,o),s(l)&&function(n,e,t,o){var a,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,i(a=s.data)&&i(a=a.transition)){for(a=0;a<r.activate.length;++a)r.activate[a](nr,s);e.push(s);break}f(t,n.elm,o)}(n,e,t,o),!0}}(n,e,t,o)){var p=n.data,h=n.children,g=n.tag;i(g)?(n.elm=n.ns?c.createElementNS(n.ns,g):c.createElement(g,n),b(n),m(n,h,e),i(p)&&v(n,e),f(t,n.elm,o)):s(n.isComment)?(n.elm=c.createComment(n.text),f(t,n.elm,o)):(n.elm=c.createTextNode(n.text),f(t,n.elm,o))}}function d(n,e){i(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,h(n)?(v(n,e),b(n)):(Zt(n),e.push(n))}function f(n,e,t){i(n)&&(i(t)?c.parentNode(t)===n&&c.insertBefore(n,e,t):c.appendChild(n,e))}function m(n,e,t){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)p(e[r],t,n.elm,null,!0,e,r)}else l(n.text)&&c.appendChild(n.elm,c.createTextNode(String(n.text)))}function h(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return i(n.tag)}function v(n,t){for(var o=0;o<r.create.length;++o)r.create[o](nr,n);i(e=n.data.hook)&&(i(e.create)&&e.create(nr,n),i(e.insert)&&t.push(n))}function b(n){var e;if(i(e=n.fnScopeId))c.setStyleScope(n.elm,e);else for(var t=n;t;)i(e=t.context)&&i(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e),t=t.parent;i(e=Ye)&&e!==n.context&&e!==n.fnContext&&i(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e)}function y(n,e,t,r,o,a){for(;r<=o;++r)p(t[r],a,n,e,!1,t,r)}function x(n){var e,t,o=n.data;if(i(o))for(i(e=o.hook)&&i(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(i(e=n.children))for(t=0;t<n.children.length;++t)x(n.children[t])}function w(n,e,t){for(;e<=t;++e){var r=n[e];i(r)&&(i(r.tag)?(_(r),x(r)):u(r.elm))}}function _(n,e){if(i(e)||i(n.data)){var t,o=r.remove.length+1;for(i(e)?e.listeners+=o:e=function(n,e){function t(){0==--t.listeners&&u(n)}return t.listeners=e,t}(n.elm,o),i(t=n.componentInstance)&&i(t=t._vnode)&&i(t.data)&&_(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);i(t=n.data.hook)&&i(t=t.remove)?t(n,e):e()}else u(n.elm)}function k(n,e,t,r){for(var o=t;o<r;o++){var a=e[o];if(i(a)&&tr(n,a))return o}}function j(n,e,t,o,l,u){if(n!==e){i(e.elm)&&i(o)&&(e=o[l]=xn(e));var d=e.elm=n.elm;if(s(n.isAsyncPlaceholder))i(e.asyncFactory.resolved)?C(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var f,m=e.data;i(m)&&i(f=m.hook)&&i(f=f.prepatch)&&f(n,e);var v=n.children,g=e.children;if(i(m)&&h(e)){for(f=0;f<r.update.length;++f)r.update[f](n,e);i(f=m.hook)&&i(f=f.update)&&f(n,e)}a(e.text)?i(v)&&i(g)?v!==g&&function(n,e,t,r,o){var s,l,u,d=0,f=0,m=e.length-1,h=e[0],v=e[m],g=t.length-1,b=t[0],x=t[g],_=!o;for(0;d<=m&&f<=g;)a(h)?h=e[++d]:a(v)?v=e[--m]:tr(h,b)?(j(h,b,r,t,f),h=e[++d],b=t[++f]):tr(v,x)?(j(v,x,r,t,g),v=e[--m],x=t[--g]):tr(h,x)?(j(h,x,r,t,g),_&&c.insertBefore(n,h.elm,c.nextSibling(v.elm)),h=e[++d],x=t[--g]):tr(v,b)?(j(v,b,r,t,f),_&&c.insertBefore(n,v.elm,h.elm),v=e[--m],b=t[++f]):(a(s)&&(s=rr(e,d,m)),a(l=i(b.key)?s[b.key]:k(b,e,d,m))?p(b,r,n,h.elm,!1,t,f):tr(u=e[l],b)?(j(u,b,r,t,f),e[l]=void 0,_&&c.insertBefore(n,u.elm,h.elm)):p(b,r,n,h.elm,!1,t,f),b=t[++f]);d>m?y(n,a(t[g+1])?null:t[g+1].elm,t,f,g,r):f>g&&w(e,d,m)}(d,v,g,t,u):i(g)?(i(n.text)&&c.setTextContent(d,""),y(d,null,g,0,g.length-1,t)):i(v)?w(v,0,v.length-1):i(n.text)&&c.setTextContent(d,""):n.text!==e.text&&c.setTextContent(d,e.text),i(m)&&i(f=m.hook)&&i(f=f.postpatch)&&f(n,e)}}}function T(n,e,t){if(s(t)&&i(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var S=g("attrs,class,staticClass,staticStyle,key");function C(n,e,t,r){var o,a=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,s(e.isComment)&&i(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(i(l)&&(i(o=l.hook)&&i(o=o.init)&&o(e,!0),i(o=e.componentInstance)))return d(e,t),!0;if(i(a)){if(i(c))if(n.hasChildNodes())if(i(o=l)&&i(o=o.domProps)&&i(o=o.innerHTML)){if(o!==n.innerHTML)return!1}else{for(var u=!0,p=n.firstChild,f=0;f<c.length;f++){if(!p||!C(p,c[f],t,r)){u=!1;break}p=p.nextSibling}if(!u||p)return!1}else m(e,c,t);if(i(l)){var h=!1;for(var g in l)if(!S(g)){h=!0,v(e,t);break}!h&&l.class&&ae(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,o){if(!a(e)){var l,u=!1,d=[];if(a(n))u=!0,p(e,d);else{var f=i(n.nodeType);if(!f&&tr(n,e))j(n,e,d,null,null,o);else{if(f){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&C(n,e,d))return T(e,d,!0),n;l=n,n=new vn(c.tagName(l).toLowerCase(),{},[],void 0,l)}var m=n.elm,v=c.parentNode(m);if(p(e,d,m._leaveCb?null:v,c.nextSibling(m)),i(e.parent))for(var g=e.parent,b=h(e);g;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](g);if(g.elm=e.elm,b){for(var _=0;_<r.create.length;++_)r.create[_](nr,g);var k=g.data.hook.insert;if(k.merged)for(var S=1;S<k.fns.length;S++)k.fns[S]()}else Zt(g);g=g.parent}i(v)?w([n],0,0):i(n.tag)&&x(n)}}return T(e,d,u),e.elm}i(n)&&x(n)}}({nodeOps:Yt,modules:[mr,gr,jr,Cr,Nr,W?{create:lo,activate:lo,remove:function(n,e){!0!==n.data.show?ao(n,e):e()}}:{}].concat(ur)});Y&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&bo(n,"input")}));var uo={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?ce(t,"postpatch",(function(){uo.componentUpdated(n,e,t)})):po(n,e,t.context),n._vOptions=[].map.call(n.options,ho)):("textarea"===t.tag||Kt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",vo),n.addEventListener("compositionend",go),n.addEventListener("change",go),Y&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){po(n,e,t.context);var r=n._vOptions,o=n._vOptions=[].map.call(n.options,ho);if(o.some((function(n,e){return!M(n,r[e])})))(n.multiple?e.value.some((function(n){return mo(n,o)})):e.value!==e.oldValue&&mo(e.value,o))&&bo(n,"change")}}};function po(n,e,t){fo(n,e,t),(K||Q)&&setTimeout((function(){fo(n,e,t)}),0)}function fo(n,e,t){var r=e.value,o=n.multiple;if(!o||Array.isArray(r)){for(var a,i,s=0,l=n.options.length;s<l;s++)if(i=n.options[s],o)a=L(r,ho(i))>-1,i.selected!==a&&(i.selected=a);else if(M(ho(i),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));o||(n.selectedIndex=-1)}}function mo(n,e){return e.every((function(e){return!M(e,n)}))}function ho(n){return"_value"in n?n._value:n.value}function vo(n){n.target.composing=!0}function go(n){n.target.composing&&(n.target.composing=!1,bo(n.target,"input"))}function bo(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function yo(n){return!n.componentInstance||n.data&&n.data.transition?n:yo(n.componentInstance._vnode)}var xo={model:uo,show:{bind:function(n,e,t){var r=e.value,o=(t=yo(t)).data&&t.data.transition,a=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&o?(t.data.show=!0,oo(t,(function(){n.style.display=a}))):n.style.display=r?a:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=yo(t)).data&&t.data.transition?(t.data.show=!0,r?oo(t,(function(){n.style.display=n.__vOriginalDisplay})):ao(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,o){o||(n.style.display=n.__vOriginalDisplay)}}},wo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function _o(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?_o(We(e.children)):n}function ko(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var o=t._parentListeners;for(var a in o)e[j(a)]=o[a];return e}function jo(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var To=function(n){return n.tag||qe(n)},So=function(n){return"show"===n.name},Co={name:"transition",props:wo,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(To)).length){0;var r=this.mode;0;var o=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return o;var a=_o(o);if(!a)return o;if(this._leaving)return jo(n,o);var i="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?i+"comment":i+a.tag:l(a.key)?0===String(a.key).indexOf(i)?a.key:i+a.key:a.key;var s=(a.data||(a.data={})).transition=ko(this),c=this._vnode,u=_o(c);if(a.data.directives&&a.data.directives.some(So)&&(a.data.show=!0),u&&u.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(a,u)&&!qe(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var p=u.data.transition=E({},s);if("out-in"===r)return this._leaving=!0,ce(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),jo(n,o);if("in-out"===r){if(qe(a))return c;var d,f=function(){d()};ce(s,"afterEnter",f),ce(s,"enterCancelled",f),ce(p,"delayLeave",(function(n){d=n}))}}return o}}},Io=E({tag:String,moveClass:String},wo);function Po(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Eo(n){n.data.newPos=n.elm.getBoundingClientRect()}function Ao(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,o=e.top-t.top;if(r||o){n.data.moved=!0;var a=n.elm.style;a.transform=a.WebkitTransform="translate("+r+"px,"+o+"px)",a.transitionDuration="0s"}}delete Io.mode;var zo={Transition:Co,TransitionGroup:{props:Io,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var o=Qe(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,o(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],a=this.children=[],i=ko(this),s=0;s<o.length;s++){var l=o[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))a.push(l),t[l.key]=l,(l.data||(l.data={})).transition=i;else;}if(r){for(var c=[],u=[],p=0;p<r.length;p++){var d=r[p];d.data.transition=i,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?c.push(d):u.push(d)}this.kept=n(e,null,c),this.removed=u}return n(e,null,a)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Po),n.forEach(Eo),n.forEach(Ao),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;Yr(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(Wr,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(Wr,n),t._moveCb=null,Qr(t,e))})}})))},methods:{hasMove:function(n,e){if(!Hr)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Br(t,n)})),Fr(t,e),t.style.display="none",this.$el.appendChild(t);var r=eo(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};jt.config.mustUseProp=function(n,e,t){return"value"===t&&Ot(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},jt.config.isReservedTag=Gt,jt.config.isReservedAttr=zt,jt.config.getTagNamespace=function(n){return Jt(n)?"svg":"math"===n?"math":void 0},jt.config.isUnknownElement=function(n){if(!W)return!0;if(Gt(n))return!1;if(n=n.toLowerCase(),null!=Xt[n])return Xt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Xt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Xt[n]=/HTMLUnknownElement/.test(e.toString())},E(jt.options.directives,xo),E(jt.options.components,zo),jt.prototype.__patch__=W?co:z,jt.prototype.$mount=function(n,e){return function(n,e,t){var r;return n.$el=e,n.$options.render||(n.$options.render=bn),et(n,"beforeMount"),r=function(){n._update(n._render(),t)},new ft(n,r,z,{before:function(){n._isMounted&&!n._isDestroyed&&et(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,et(n,"mounted")),n}(this,n=n&&W?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},W&&setTimeout((function(){F.devtools&&an&&an.emit("init",jt)}),0);var Oo=jt;
/*!
  * vue-router v3.4.9
  * (c) 2020 Evan You
  * @license MIT
  */function Ro(n,e){for(var t in e)n[t]=e[t];return n}var Mo=/[!'()*]/g,Lo=function(n){return"%"+n.charCodeAt(0).toString(16)},Do=/%2C/g,No=function(n){return encodeURIComponent(n).replace(Mo,Lo).replace(Do,",")};function $o(n){try{return decodeURIComponent(n)}catch(n){0}return n}var Fo=function(n){return null==n||"object"==typeof n?n:String(n)};function Bo(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=$o(t.shift()),o=t.length>0?$o(t.join("=")):null;void 0===e[r]?e[r]=o:Array.isArray(e[r])?e[r].push(o):e[r]=[e[r],o]})),e):e}function Uo(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return No(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(No(e)):r.push(No(e)+"="+No(n)))})),r.join("&")}return No(e)+"="+No(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var Vo=/\/?$/;function Ho(n,e,t,r){var o=r&&r.options.stringifyQuery,a=e.query||{};try{a=qo(a)}catch(n){}var i={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:a,params:e.params||{},fullPath:Go(e,o),matched:n?Jo(n):[]};return t&&(i.redirectedFrom=Go(t,o)),Object.freeze(i)}function qo(n){if(Array.isArray(n))return n.map(qo);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=qo(n[t]);return e}return n}var Wo=Ho(null,{path:"/"});function Jo(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function Go(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var o=n.hash;return void 0===o&&(o=""),(t||"/")+(e||Uo)(r)+o}function Xo(n,e){return e===Wo?n===e:!!e&&(n.path&&e.path?n.path.replace(Vo,"")===e.path.replace(Vo,"")&&n.hash===e.hash&&Ko(n.query,e.query):!(!n.name||!e.name)&&(n.name===e.name&&n.hash===e.hash&&Ko(n.query,e.query)&&Ko(n.params,e.params)))}function Ko(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,o){var a=n[t];if(r[o]!==t)return!1;var i=e[t];return null==a||null==i?a===i:"object"==typeof a&&"object"==typeof i?Ko(a,i):String(a)===String(i)}))}function Yo(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var o=t.instances[r],a=t.enteredCbs[r];if(o&&a){delete t.enteredCbs[r];for(var i=0;i<a.length;i++)o._isBeingDestroyed||a[i](o)}}}}var Qo={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,o=e.parent,a=e.data;a.routerView=!0;for(var i=o.$createElement,s=t.name,l=o.$route,c=o._routerViewCache||(o._routerViewCache={}),u=0,p=!1;o&&o._routerRoot!==o;){var d=o.$vnode?o.$vnode.data:{};d.routerView&&u++,d.keepAlive&&o._directInactive&&o._inactive&&(p=!0),o=o.$parent}if(a.routerViewDepth=u,p){var f=c[s],m=f&&f.component;return m?(f.configProps&&Zo(m,a,f.route,f.configProps),i(m,a,r)):i()}var h=l.matched[u],v=h&&h.components[s];if(!h||!v)return c[s]=null,i();c[s]={component:v},a.registerRouteInstance=function(n,e){var t=h.instances[s];(e&&t!==n||!e&&t===n)&&(h.instances[s]=e)},(a.hook||(a.hook={})).prepatch=function(n,e){h.instances[s]=e.componentInstance},a.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==h.instances[s]&&(h.instances[s]=n.componentInstance),Yo(l)};var g=h.props&&h.props[s];return g&&(Ro(c[s],{route:l,configProps:g}),Zo(v,a,l,g)),i(v,a,r)}};function Zo(n,e,t,r){var o=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(o){o=e.props=Ro({},o);var a=e.attrs=e.attrs||{};for(var i in o)n.props&&i in n.props||(a[i]=o[i],delete o[i])}}function na(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var o=e.split("/");t&&o[o.length-1]||o.pop();for(var a=n.replace(/^\//,"").split("/"),i=0;i<a.length;i++){var s=a[i];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function ea(n){return n.replace(/\/\//g,"/")}var ta=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},ra=ga,oa=ca,aa=function(n,e){return pa(ca(n,e),e)},ia=pa,sa=va,la=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function ca(n,e){for(var t,r=[],o=0,a=0,i="",s=e&&e.delimiter||"/";null!=(t=la.exec(n));){var l=t[0],c=t[1],u=t.index;if(i+=n.slice(a,u),a=u+l.length,c)i+=c[1];else{var p=n[a],d=t[2],f=t[3],m=t[4],h=t[5],v=t[6],g=t[7];i&&(r.push(i),i="");var b=null!=d&&null!=p&&p!==d,y="+"===v||"*"===v,x="?"===v||"*"===v,w=t[2]||s,_=m||h;r.push({name:f||o++,prefix:d||"",delimiter:w,optional:x,repeat:y,partial:b,asterisk:!!g,pattern:_?fa(_):g?".*":"[^"+da(w)+"]+?"})}}return a<n.length&&(i+=n.substr(a)),i&&r.push(i),r}function ua(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function pa(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",ha(e)));return function(e,r){for(var o="",a=e||{},i=(r||{}).pretty?ua:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,u=a[l.name];if(null==u){if(l.optional){l.partial&&(o+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(ta(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<u.length;p++){if(c=i(u[p]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");o+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):i(u),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');o+=l.prefix+c}}else o+=l}return o}}function da(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function fa(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function ma(n,e){return n.keys=e,n}function ha(n){return n&&n.sensitive?"":"i"}function va(n,e,t){ta(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,o=!1!==t.end,a="",i=0;i<n.length;i++){var s=n[i];if("string"==typeof s)a+=da(s);else{var l=da(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),a+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=da(t.delimiter||"/"),p=a.slice(-u.length)===u;return r||(a=(p?a.slice(0,-u.length):a)+"(?:"+u+"(?=$))?"),a+=o?"$":r&&p?"":"(?="+u+"|$)",ma(new RegExp("^"+a,ha(t)),e)}function ga(n,e,t){return ta(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return ma(n,e)}(n,e):ta(n)?function(n,e,t){for(var r=[],o=0;o<n.length;o++)r.push(ga(n[o],e,t).source);return ma(new RegExp("(?:"+r.join("|")+")",ha(t)),e)}(n,e,t):function(n,e,t){return va(ca(n,t),e,t)}(n,e,t)}ra.parse=oa,ra.compile=aa,ra.tokensToFunction=ia,ra.tokensToRegExp=sa;var ba=Object.create(null);function ya(n,e,t){e=e||{};try{var r=ba[n]||(ba[n]=ra.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function xa(n,e,t,r){var o="string"==typeof n?{path:n}:n;if(o._normalized)return o;if(o.name){var a=(o=Ro({},n)).params;return a&&"object"==typeof a&&(o.params=Ro({},a)),o}if(!o.path&&o.params&&e){(o=Ro({},o))._normalized=!0;var i=Ro(Ro({},e.params),o.params);if(e.name)o.name=e.name,o.params=i;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;o.path=ya(s,i,e.path)}else 0;return o}var l=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var o=n.indexOf("?");return o>=0&&(t=n.slice(o+1),n=n.slice(0,o)),{path:n,query:t,hash:e}}(o.path||""),c=e&&e.path||"/",u=l.path?na(l.path,c,t||o.append):c,p=function(n,e,t){void 0===e&&(e={});var r,o=t||Bo;try{r=o(n||"")}catch(n){r={}}for(var a in e){var i=e[a];r[a]=Array.isArray(i)?i.map(Fo):Fo(i)}return r}(l.query,o.query,r&&r.options.parseQuery),d=o.hash||l.hash;return d&&"#"!==d.charAt(0)&&(d="#"+d),{_normalized:!0,path:u,query:p,hash:d}}var wa,_a=function(){},ka={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,o=t.resolve(this.to,r,this.append),a=o.location,i=o.route,s=o.href,l={},c=t.options.linkActiveClass,u=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,d=null==u?"router-link-exact-active":u,f=null==this.activeClass?p:this.activeClass,m=null==this.exactActiveClass?d:this.exactActiveClass,h=i.redirectedFrom?Ho(null,xa(i.redirectedFrom),null,t):i;l[m]=Xo(r,h),l[f]=this.exact?l[m]:function(n,e){return 0===n.path.replace(Vo,"/").indexOf(e.path.replace(Vo,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,h);var v=l[m]?this.ariaCurrentValue:null,g=function(n){ja(n)&&(e.replace?t.replace(a,_a):t.push(a,_a))},b={click:ja};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=g})):b[this.event]=g;var y={class:l},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:i,navigate:g,isActive:l[f],isExactActive:l[m]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?n():n("span",{},x)}if("a"===this.tag)y.on=b,y.attrs={href:s,"aria-current":v};else{var w=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(w){w.isStatic=!1;var _=w.data=Ro({},w.data);for(var k in _.on=_.on||{},_.on){var j=_.on[k];k in b&&(_.on[k]=Array.isArray(j)?j:[j])}for(var T in b)T in _.on?_.on[T].push(b[T]):_.on[T]=g;var S=w.data.attrs=Ro({},w.data.attrs);S.href=s,S["aria-current"]=v}else y.on=b}return n(this.tag,y,this.$slots.default)}};function ja(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Ta="undefined"!=typeof window;function Sa(n,e,t,r){var o=e||[],a=t||Object.create(null),i=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,o,a,i){var s=o.path,l=o.name;0;var c=o.pathToRegexpOptions||{},u=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return ea(e.path+"/"+n)}(s,a,c.strict);"boolean"==typeof o.caseSensitive&&(c.sensitive=o.caseSensitive);var p={path:u,regex:Ca(u,c),components:o.components||{default:o.component},instances:{},enteredCbs:{},name:l,parent:a,matchAs:i,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var a=i?ea(i+"/"+o.path):void 0;n(e,t,r,o,p,a)}));t[p.path]||(e.push(p.path),t[p.path]=p);if(void 0!==o.alias)for(var d=Array.isArray(o.alias)?o.alias:[o.alias],f=0;f<d.length;++f){0;var m={path:d[f],children:o.children};n(e,t,r,m,a,p.path||"/")}l&&(r[l]||(r[l]=p))}(o,a,i,n)}));for(var s=0,l=o.length;s<l;s++)"*"===o[s]&&(o.push(o.splice(s,1)[0]),l--,s--);return{pathList:o,pathMap:a,nameMap:i}}function Ca(n,e){return ra(n,[],e)}function Ia(n,e){var t=Sa(n),r=t.pathList,o=t.pathMap,a=t.nameMap;function i(n,t,i){var s=xa(n,t,!1,e),c=s.name;if(c){var u=a[c];if(!u)return l(null,s);var p=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var d in t.params)!(d in s.params)&&p.indexOf(d)>-1&&(s.params[d]=t.params[d]);return s.path=ya(u.path,s.params),l(u,s,i)}if(s.path){s.params={};for(var f=0;f<r.length;f++){var m=r[f],h=o[m];if(Pa(h.regex,s.path,s.params))return l(h,s,i)}}return l(null,s)}function s(n,t){var r=n.redirect,o="function"==typeof r?r(Ho(n,t,null,e)):r;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return l(null,t);var s=o,c=s.name,u=s.path,p=t.query,d=t.hash,f=t.params;if(p=s.hasOwnProperty("query")?s.query:p,d=s.hasOwnProperty("hash")?s.hash:d,f=s.hasOwnProperty("params")?s.params:f,c){a[c];return i({_normalized:!0,name:c,query:p,hash:d,params:f},void 0,t)}if(u){var m=function(n,e){return na(n,e.parent?e.parent.path:"/",!0)}(u,n);return i({_normalized:!0,path:ya(m,f),query:p,hash:d},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=i({_normalized:!0,path:ya(t,e.params)});if(r){var o=r.matched,a=o[o.length-1];return e.params=r.params,l(a,e)}return l(null,e)}(0,t,n.matchAs):Ho(n,t,r,e)}return{match:i,addRoutes:function(n){Sa(n,r,o,a)}}}function Pa(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var o=1,a=r.length;o<a;++o){var i=n.keys[o-1];i&&(t[i.name||"pathMatch"]="string"==typeof r[o]?$o(r[o]):r[o])}return!0}var Ea=Ta&&window.performance&&window.performance.now?window.performance:Date;function Aa(){return Ea.now().toFixed(3)}var za=Aa();function Oa(){return za}function Ra(n){return za=n}var Ma=Object.create(null);function La(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=Ro({},window.history.state);return t.key=Oa(),window.history.replaceState(t,"",e),window.addEventListener("popstate",$a),function(){window.removeEventListener("popstate",$a)}}function Da(n,e,t,r){if(n.app){var o=n.options.scrollBehavior;o&&n.app.$nextTick((function(){var a=function(){var n=Oa();if(n)return Ma[n]}(),i=o.call(n,e,t,r?a:null);i&&("function"==typeof i.then?i.then((function(n){Ha(n,a)})).catch((function(n){0})):Ha(i,a))}))}}function Na(){var n=Oa();n&&(Ma[n]={x:window.pageXOffset,y:window.pageYOffset})}function $a(n){Na(),n.state&&n.state.key&&Ra(n.state.key)}function Fa(n){return Ua(n.x)||Ua(n.y)}function Ba(n){return{x:Ua(n.x)?n.x:window.pageXOffset,y:Ua(n.y)?n.y:window.pageYOffset}}function Ua(n){return"number"==typeof n}var Va=/^#\d/;function Ha(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var o=Va.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(o){var a=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(o,a={x:Ua((t=a).x)?t.x:0,y:Ua(t.y)?t.y:0})}else Fa(n)&&(e=Ba(n))}else r&&Fa(n)&&(e=Ba(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var qa,Wa=Ta&&((-1===(qa=window.navigator.userAgent).indexOf("Android 2.")&&-1===qa.indexOf("Android 4.0")||-1===qa.indexOf("Mobile Safari")||-1!==qa.indexOf("Chrome")||-1!==qa.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Ja(n,e){Na();var t=window.history;try{if(e){var r=Ro({},t.state);r.key=Oa(),t.replaceState(r,"",n)}else t.pushState({key:Ra(Aa())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function Ga(n){Ja(n,!0)}function Xa(n,e,t){var r=function(o){o>=n.length?t():n[o]?e(n[o],(function(){r(o+1)})):r(o+1)};r(0)}var Ka={redirected:2,aborted:4,cancelled:8,duplicated:16};function Ya(n,e){return Za(n,e,Ka.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return ni.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function Qa(n,e){return Za(n,e,Ka.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function Za(n,e,t,r){var o=new Error(r);return o._isRouter=!0,o.from=n,o.to=e,o.type=t,o}var ni=["params","query","hash"];function ei(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function ti(n,e){return ei(n)&&n._isRouter&&(null==e||n.type===e)}function ri(n){return function(e,t,r){var o=!1,a=0,i=null;oi(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){o=!0,a++;var l,c=si((function(e){var o;((o=e).__esModule||ii&&"Module"===o[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:wa.extend(e),t.components[s]=e,--a<=0&&r()})),u=si((function(n){var e="Failed to resolve async component "+s+": "+n;i||(i=ei(n)?n:new Error(e),r(i))}));try{l=n(c,u)}catch(n){u(n)}if(l)if("function"==typeof l.then)l.then(c,u);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,u)}}})),o||r()}}function oi(n,e){return ai(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function ai(n){return Array.prototype.concat.apply([],n)}var ii="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function si(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var li=function(n,e){this.router=n,this.base=function(n){if(!n)if(Ta){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=Wo,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ci(n,e,t,r){var o=oi(n,(function(n,r,o,a){var i=function(n,e){"function"!=typeof n&&(n=wa.extend(n));return n.options[e]}(n,e);if(i)return Array.isArray(i)?i.map((function(n){return t(n,r,o,a)})):t(i,r,o,a)}));return ai(r?o.reverse():o)}function ui(n,e){if(e)return function(){return n.apply(e,arguments)}}li.prototype.listen=function(n){this.cb=n},li.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},li.prototype.onError=function(n){this.errorCbs.push(n)},li.prototype.transitionTo=function(n,e,t){var r,o=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var a=this.current;this.confirmTransition(r,(function(){o.updateRoute(r),e&&e(r),o.ensureURL(),o.router.afterHooks.forEach((function(n){n&&n(r,a)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!o.ready&&(ti(n,Ka.redirected)&&a===Wo||(o.ready=!0,o.readyErrorCbs.forEach((function(e){e(n)}))))}))},li.prototype.confirmTransition=function(n,e,t){var r=this,o=this.current;this.pending=n;var a,i,s=function(n){!ti(n)&&ei(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=o.matched.length-1;if(Xo(n,o)&&l===c&&n.matched[l]===o.matched[c])return this.ensureURL(),s(((i=Za(a=o,n,Ka.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",i));var u=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),p=u.updated,d=u.deactivated,f=u.activated,m=[].concat(function(n){return ci(n,"beforeRouteLeave",ui,!0)}(d),this.router.beforeHooks,function(n){return ci(n,"beforeRouteUpdate",ui)}(p),f.map((function(n){return n.beforeEnter})),ri(f)),h=function(e,t){if(r.pending!==n)return s(Qa(o,n));try{e(n,o,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return Za(n,e,Ka.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(o,n))):ei(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(Ya(o,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};Xa(m,h,(function(){Xa(function(n){return ci(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,o,a){return n(r,o,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),a(n)}))}}(n,t,r)}))}(f).concat(r.router.resolveHooks),h,(function(){if(r.pending!==n)return s(Qa(o,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){Yo(n)}))}))}))},li.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},li.prototype.setupListeners=function(){},li.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=Wo,this.pending=null};var pi=function(n){function e(e,t){n.call(this,e,t),this._startLocation=di(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=Wa&&t;r&&this.listeners.push(La());var o=function(){var t=n.current,o=di(n.base);n.current===Wo&&o===n._startLocation||n.transitionTo(o,(function(n){r&&Da(e,n,t,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Ja(ea(r.base+n.fullPath)),Da(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Ga(ea(r.base+n.fullPath)),Da(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(di(this.base)!==this.current.fullPath){var e=ea(this.base+this.current.fullPath);n?Ja(e):Ga(e)}},e.prototype.getCurrentLocation=function(){return di(this.base)},e}(li);function di(n){var e=window.location.pathname;return n&&0===e.toLowerCase().indexOf(n.toLowerCase())&&(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var fi=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=di(n);if(!/^\/#/.test(e))return window.location.replace(ea(n+"/#"+e)),!0}(this.base)||mi()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=Wa&&e;t&&this.listeners.push(La());var r=function(){var e=n.current;mi()&&n.transitionTo(hi(),(function(r){t&&Da(n.router,r,e,!0),Wa||bi(r.fullPath)}))},o=Wa?"popstate":"hashchange";window.addEventListener(o,r),this.listeners.push((function(){window.removeEventListener(o,r)}))}},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){gi(n.fullPath),Da(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){bi(n.fullPath),Da(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;hi()!==e&&(n?gi(e):bi(e))},e.prototype.getCurrentLocation=function(){return hi()},e}(li);function mi(){var n=hi();return"/"===n.charAt(0)||(bi("/"+n),!1)}function hi(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function vi(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function gi(n){Wa?Ja(vi(n)):window.location.hash=n}function bi(n){Wa?Ga(vi(n)):window.location.replace(vi(n))}var yi=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){ti(n,Ka.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(li),xi=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ia(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!Wa&&!1!==n.fallback,this.fallback&&(e="hash"),Ta||(e="abstract"),this.mode=e,e){case"history":this.history=new pi(this,n.base);break;case"hash":this.history=new fi(this,n.base,this.fallback);break;case"abstract":this.history=new yi(this,n.base);break;default:0}},wi={currentRoute:{configurable:!0}};function _i(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}xi.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},wi.currentRoute.get=function(){return this.history&&this.history.current},xi.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof pi||t instanceof fi){var r=function(n){t.setupListeners(),function(n){var r=t.current,o=e.options.scrollBehavior;Wa&&o&&"fullPath"in n&&Da(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},xi.prototype.beforeEach=function(n){return _i(this.beforeHooks,n)},xi.prototype.beforeResolve=function(n){return _i(this.resolveHooks,n)},xi.prototype.afterEach=function(n){return _i(this.afterHooks,n)},xi.prototype.onReady=function(n,e){this.history.onReady(n,e)},xi.prototype.onError=function(n){this.history.onError(n)},xi.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},xi.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},xi.prototype.go=function(n){this.history.go(n)},xi.prototype.back=function(){this.go(-1)},xi.prototype.forward=function(){this.go(1)},xi.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},xi.prototype.resolve=function(n,e,t){var r=xa(n,e=e||this.history.current,t,this),o=this.match(r,e),a=o.redirectedFrom||o.fullPath;return{location:r,route:o,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?ea(n+"/"+r):r}(this.history.base,a,this.mode),normalizedTo:r,resolved:o}},xi.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==Wo&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(xi.prototype,wi),xi.install=function n(e){if(!n.installed||wa!==e){n.installed=!0,wa=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",Qo),e.component("RouterLink",ka);var o=e.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},xi.version="3.4.9",xi.isNavigationFailure=ti,xi.NavigationFailureType=Ka,Ta&&window.Vue&&window.Vue.use(xi);var ki=xi;t(70),t(205),t(207),t(187),t(136),t(101),t(209),t(71);function ji(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}t(188),t(139),t(30),t(190),t(45),t(51),t(60),t(89);function Ti(n){return(Ti="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}var Si=t(43),Ci={NotFound:function(){return t.e(19).then(t.bind(null,426))},Layout:function(){return Promise.all([t.e(0),t.e(2)]).then(t.bind(null,425))}},Ii={"v-6dff3b88":function(){return t.e(20).then(t.bind(null,429))},"v-ebbfd13c":function(){return t.e(21).then(t.bind(null,430))},"v-b25c4850":function(){return t.e(23).then(t.bind(null,431))},"v-65f5d478":function(){return t.e(24).then(t.bind(null,432))},"v-136da63b":function(){return t.e(22).then(t.bind(null,433))},"v-c40b6cda":function(){return t.e(25).then(t.bind(null,434))},"v-1621fdf3":function(){return t.e(14).then(t.bind(null,435))},"v-24e6dbee":function(){return t.e(26).then(t.bind(null,436))},"v-06784333":function(){return t.e(27).then(t.bind(null,437))},"v-45ababf3":function(){return t.e(15).then(t.bind(null,438))},"v-f2c0519a":function(){return t.e(6).then(t.bind(null,439))},"v-1250ec22":function(){return t.e(28).then(t.bind(null,440))},"v-38221c5a":function(){return t.e(29).then(t.bind(null,441))},"v-7ada206e":function(){return t.e(5).then(t.bind(null,442))},"v-b5355a1a":function(){return t.e(16).then(t.bind(null,443))},"v-2b93d65a":function(){return t.e(30).then(t.bind(null,444))},"v-edd23776":function(){return t.e(31).then(t.bind(null,445))},"v-5dee0e02":function(){return t.e(32).then(t.bind(null,446))},"v-204ed578":function(){return t.e(33).then(t.bind(null,447))},"v-1ec47aae":function(){return t.e(34).then(t.bind(null,448))},"v-2c99cfb8":function(){return t.e(35).then(t.bind(null,449))},"v-3b4c0f33":function(){return t.e(3).then(t.bind(null,450))},"v-02d74e6e":function(){return t.e(36).then(t.bind(null,451))},"v-680fdff3":function(){return t.e(37).then(t.bind(null,452))},"v-e93963da":function(){return t.e(38).then(t.bind(null,453))},"v-527ede89":function(){return t.e(39).then(t.bind(null,454))},"v-5ba11db3":function(){return t.e(4).then(t.bind(null,455))},"v-73d937af":function(){return t.e(40).then(t.bind(null,456))},"v-4332c34e":function(){return t.e(41).then(t.bind(null,457))},"v-28914593":function(){return t.e(42).then(t.bind(null,458))},"v-a8ce1950":function(){return t.e(43).then(t.bind(null,459))},"v-19a0ef53":function(){return t.e(11).then(t.bind(null,460))},"v-6b7c261a":function(){return t.e(44).then(t.bind(null,461))},"v-cd3bf0e6":function(){return t.e(45).then(t.bind(null,462))},"v-c03728da":function(){return t.e(46).then(t.bind(null,463))},"v-3367bdf3":function(){return t.e(17).then(t.bind(null,464))},"v-c75594b8":function(){return t.e(47).then(t.bind(null,465))},"v-16255698":function(){return t.e(48).then(t.bind(null,466))},"v-6c6c42a2":function(){return t.e(49).then(t.bind(null,467))},"v-290093f5":function(){return t.e(50).then(t.bind(null,468))},"v-7f67f28a":function(){return t.e(51).then(t.bind(null,469))},"v-7b7d06a8":function(){return t.e(52).then(t.bind(null,470))},"v-d6c1c4b2":function(){return t.e(12).then(t.bind(null,471))},"v-586bf713":function(){return t.e(53).then(t.bind(null,472))},"v-aa62f9da":function(){return t.e(7).then(t.bind(null,473))},"v-dbf328da":function(){return t.e(54).then(t.bind(null,474))},"v-75a7d24b":function(){return t.e(55).then(t.bind(null,475))},"v-407e06c0":function(){return t.e(56).then(t.bind(null,476))},"v-6471e05a":function(){return t.e(57).then(t.bind(null,477))},"v-63502037":function(){return t.e(58).then(t.bind(null,478))},"v-723d7458":function(){return t.e(59).then(t.bind(null,479))},"v-7b6c5b6e":function(){return t.e(60).then(t.bind(null,480))},"v-d6c4d632":function(){return t.e(61).then(t.bind(null,481))},"v-64fce1e3":function(){return t.e(62).then(t.bind(null,482))},"v-58e312b8":function(){return t.e(63).then(t.bind(null,483))},"v-74ce3510":function(){return t.e(64).then(t.bind(null,484))},"v-8d151e90":function(){return t.e(65).then(t.bind(null,485))},"v-ab257c10":function(){return t.e(66).then(t.bind(null,486))},"v-475f5e83":function(){return t.e(67).then(t.bind(null,487))},"v-5b1ee393":function(){return t.e(68).then(t.bind(null,488))},"v-72ebb29a":function(){return t.e(18).then(t.bind(null,489))},"v-76f2b497":function(){return t.e(69).then(t.bind(null,490))},"v-3d396f55":function(){return t.e(13).then(t.bind(null,491))},"v-efab5a04":function(){return t.e(70).then(t.bind(null,492))},"v-e4941b72":function(){return t.e(71).then(t.bind(null,493))},"v-fd3e4dda":function(){return t.e(72).then(t.bind(null,494))},"v-dbde789a":function(){return t.e(73).then(t.bind(null,495))},"v-35f39ada":function(){return t.e(74).then(t.bind(null,496))},"v-4cb1a2b3":function(){return t.e(75).then(t.bind(null,497))},"v-4d46d953":function(){return t.e(76).then(t.bind(null,498))},"v-9ae23868":function(){return t.e(77).then(t.bind(null,499))},"v-cff0dc1a":function(){return t.e(78).then(t.bind(null,500))}};function Pi(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var Ei=/-(\w)/g,Ai=Pi((function(n){return n.replace(Ei,(function(n,e){return e?e.toUpperCase():""}))})),zi=/\B([A-Z])/g,Oi=Pi((function(n){return n.replace(zi,"-$1").toLowerCase()})),Ri=Pi((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function Mi(n,e){if(e)return n(e)?n(e):e.includes("-")?n(Ri(Ai(e))):n(Ri(e))||n(Oi(e))}var Li=Object.assign({},Ci,Ii),Di=function(n){return Li[n]},Ni=function(n){return Ii[n]},$i=function(n){return Ci[n]},Fi=function(n){return Oo.component(n)};function Bi(n){return Mi(Ni,n)}function Ui(n){return Mi($i,n)}function Vi(n){return Mi(Di,n)}function Hi(n){return Mi(Fi,n)}function qi(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(r.a)(regeneratorRuntime.mark((function n(e){var t;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(Hi(e)||!Vi(e)){n.next=5;break}return n.next=3,Vi(e)();case 3:t=n.sent,Oo.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function Wi(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}t(178),t(179);var Ji=t(100),Gi=t(169),Xi=t.n(Gi),Ki={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Object(Ji.a)(n,1)[0]})).map((function(n){var e=Object(Ji.a)(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(n[t],'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=Qi(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(Si.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=Zi(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return Xi()([{name:"description",content:this.$description}],n,this.siteMeta,ns)},updateCanonicalLink:function(){Yi(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",Qi(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){Zi(null,this.currentMetaTags),Yi()}};function Yi(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function Qi(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function Zi(n,e){if(e&&Object(Si.a)(e).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function ns(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var r=t[e];if(n.hasOwnProperty(r))return n[r]+r}return JSON.stringify(n)}t(170);var es=t(67),ts=t.n(es),rs={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:ts()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+r,i=0;i<t.length;i++){var s=t[i],l=t[i+1],c=0===i&&0===r||r>=s.parentElement.offsetTop+10&&(!l||r<l.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(c&&u!==decodeURIComponent(s.hash)){var p=s;if(a===o)for(var d=i+1;d<t.length;d++)if(u===decodeURIComponent(t[d].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(p.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},os=(t(90),t(68)),as=t.n(os),is={mounted:function(){var n=this;as.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||Oo.component(n.name)||as.a.start(),t()})),this.$router.afterEach((function(){as.a.done(),n.isSidebarOpen=!1}))}};t(72),t(163),t(306);function ss(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t(180);function ls(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function cs(n,e,t){return e&&ls(n.prototype,e),t&&ls(n,t),n}t(307);var us=function(){function n(){ss(this,n);this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}return cs(n,[{key:"show",value:function(n){var e=this,t=n.text,r=void 0===t?"":t,o=n.duration,a=void 0===o?3e3:o,i=document.createElement("div");i.className="message move-in",i.innerHTML='\n      <i style="fill: #06a35a;font-size: 14px;coolr: #06a35a">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">'.concat(r,"</div>\n    "),this.containerEl.appendChild(i),a>0&&setTimeout((function(){e.close(i)}),a)}},{key:"close",value:function(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",(function(){n.remove()}))}}]),n}(),ps=[Ki,rs,is,{mounted:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy:function(){var n=this;setTimeout((function(){(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach((function(e){document.querySelectorAll(e).forEach(n.generateCopyButton)}))}),1e3)},generateCopyButton:function(n){var e=this;if(!n.classList.contains("codecopy-enabled")){var t=document.createElement("i");t.className="code-copy",t.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',t.title="Click to Copy to Clipboard",t.addEventListener("click",(function(){e.copyToClipboard(n.innerText)})),n.appendChild(t),n.classList.add("codecopy-enabled")}},copyToClipboard:function(n){var e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy"),(new us).show({text:"代码拷贝成功",duration:3e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}}],ds={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return Wi("layout",n),Oo.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},fs=t(25),ms=Object(fs.a)(ds,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){var r;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(r=n[e]).push.apply(r,Object(Si.a)(t));break;default:throw new Error("Unknown option name.")}}(ms,"mixins",ps);var hs=[{name:"v-6dff3b88",path:"/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-6dff3b88").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-ebbfd13c",path:"/angular/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-ebbfd13c").then(t)}},{path:"/angular/index.html",redirect:"/angular/"},{name:"v-b25c4850",path:"/flutter-deep/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-b25c4850").then(t)}},{path:"/flutter-deep/index.html",redirect:"/flutter-deep/"},{name:"v-65f5d478",path:"/flutter-plugin/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-65f5d478").then(t)}},{path:"/flutter-plugin/index.html",redirect:"/flutter-plugin/"},{name:"v-136da63b",path:"/config.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-136da63b").then(t)}},{name:"v-c40b6cda",path:"/flutter-plugin/provider.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-c40b6cda").then(t)}},{name:"v-1621fdf3",path:"/flutter-plugin/shared_preferences.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-1621fdf3").then(t)}},{name:"v-24e6dbee",path:"/flutter/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-24e6dbee").then(t)}},{path:"/flutter/index.html",redirect:"/flutter/"},{name:"v-06784333",path:"/flutter/build.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-06784333").then(t)}},{name:"v-45ababf3",path:"/flutter/dio.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-45ababf3").then(t)}},{name:"v-f2c0519a",path:"/flutter/flare.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-f2c0519a").then(t)}},{name:"v-1250ec22",path:"/flutter/flutter1.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-1250ec22").then(t)}},{name:"v-38221c5a",path:"/flutter/model.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-38221c5a").then(t)}},{name:"v-7ada206e",path:"/flutter/iconfont.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-7ada206e").then(t)}},{name:"v-b5355a1a",path:"/flutter/other.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-b5355a1a").then(t)}},{name:"v-2b93d65a",path:"/flutter/state.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-2b93d65a").then(t)}},{name:"v-edd23776",path:"/flutter/vscode.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-edd23776").then(t)}},{name:"v-5dee0e02",path:"/git/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-5dee0e02").then(t)}},{path:"/git/index.html",redirect:"/git/"},{name:"v-204ed578",path:"/go/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-204ed578").then(t)}},{path:"/go/index.html",redirect:"/go/"},{name:"v-1ec47aae",path:"/interview/2021.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-1ec47aae").then(t)}},{name:"v-2c99cfb8",path:"/interview/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-2c99cfb8").then(t)}},{path:"/interview/index.html",redirect:"/interview/"},{name:"v-3b4c0f33",path:"/interview/catch.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-3b4c0f33").then(t)}},{name:"v-02d74e6e",path:"/interview/code.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-02d74e6e").then(t)}},{name:"v-680fdff3",path:"/interview/css.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-680fdff3").then(t)}},{name:"v-e93963da",path:"/interview/http.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-e93963da").then(t)}},{name:"v-527ede89",path:"/interview/javascript.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-527ede89").then(t)}},{name:"v-5ba11db3",path:"/interview/react.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-5ba11db3").then(t)}},{name:"v-73d937af",path:"/interview/type.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-73d937af").then(t)}},{name:"v-4332c34e",path:"/interview/typescript.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-4332c34e").then(t)}},{name:"v-28914593",path:"/interview/vue.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-28914593").then(t)}},{name:"v-a8ce1950",path:"/javascript/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-a8ce1950").then(t)}},{path:"/javascript/index.html",redirect:"/javascript/"},{name:"v-19a0ef53",path:"/javascript/canvas.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-19a0ef53").then(t)}},{name:"v-6b7c261a",path:"/javascript/canvas_api.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-6b7c261a").then(t)}},{name:"v-cd3bf0e6",path:"/javascript/closure.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-cd3bf0e6").then(t)}},{name:"v-c03728da",path:"/javascript/design.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-c03728da").then(t)}},{name:"v-3367bdf3",path:"/javascript/js1.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-3367bdf3").then(t)}},{name:"v-c75594b8",path:"/javascript/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-c75594b8").then(t)}},{path:"/javascript/设计模式.html",redirect:"/javascript/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html"},{path:"/javascript/设计模式.html",redirect:"/javascript/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html"},{name:"v-16255698",path:"/nodejs/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-16255698").then(t)}},{path:"/nodejs/index.html",redirect:"/nodejs/"},{name:"v-6c6c42a2",path:"/nodejs/lerna.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-6c6c42a2").then(t)}},{name:"v-290093f5",path:"/nodejs/nrm.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-290093f5").then(t)}},{name:"v-7f67f28a",path:"/nodejs/package.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-7f67f28a").then(t)}},{name:"v-7b7d06a8",path:"/react/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-7b7d06a8").then(t)}},{path:"/react/index.html",redirect:"/react/"},{name:"v-d6c1c4b2",path:"/react/life.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-d6c1c4b2").then(t)}},{name:"v-586bf713",path:"/react/other.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-586bf713").then(t)}},{name:"v-aa62f9da",path:"/react/props.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-aa62f9da").then(t)}},{name:"v-dbf328da",path:"/react/redux.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-dbf328da").then(t)}},{name:"v-75a7d24b",path:"/react/vscode.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-75a7d24b").then(t)}},{name:"v-407e06c0",path:"/specification/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-407e06c0").then(t)}},{path:"/specification/index.html",redirect:"/specification/"},{name:"v-6471e05a",path:"/specification/git.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-6471e05a").then(t)}},{name:"v-63502037",path:"/specification/images.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-63502037").then(t)}},{name:"v-723d7458",path:"/typescript/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-723d7458").then(t)}},{path:"/typescript/index.html",redirect:"/typescript/"},{name:"v-7b6c5b6e",path:"/typescript/%60extends%60%20%60implements%60%20%E5%8C%BA%E5%88%AB.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-7b6c5b6e").then(t)}},{path:"/typescript/`extends` `implements` 区别.html",redirect:"/typescript/%60extends%60%20%60implements%60%20%E5%8C%BA%E5%88%AB.html"},{path:"/typescript/`extends` `implements` 区别.html",redirect:"/typescript/%60extends%60%20%60implements%60%20%E5%8C%BA%E5%88%AB.html"},{name:"v-d6c4d632",path:"/typescript/base-type.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-d6c4d632").then(t)}},{name:"v-64fce1e3",path:"/typescript/class.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-64fce1e3").then(t)}},{name:"v-58e312b8",path:"/typescript/types%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-58e312b8").then(t)}},{path:"/typescript/types自动生成.html",redirect:"/typescript/types%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90.html"},{path:"/typescript/types自动生成.html",redirect:"/typescript/types%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90.html"},{name:"v-74ce3510",path:"/typescript/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E5%92%8C%E5%85%BC%E5%AE%B9.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-74ce3510").then(t)}},{path:"/typescript/类型推断和兼容.html",redirect:"/typescript/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E5%92%8C%E5%85%BC%E5%AE%B9.html"},{path:"/typescript/类型推断和兼容.html",redirect:"/typescript/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E5%92%8C%E5%85%BC%E5%AE%B9.html"},{name:"v-8d151e90",path:"/vite/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-8d151e90").then(t)}},{path:"/vite/index.html",redirect:"/vite/"},{name:"v-ab257c10",path:"/vue-next/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-ab257c10").then(t)}},{path:"/vue-next/index.html",redirect:"/vue-next/"},{name:"v-475f5e83",path:"/vue-next/vue-api.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-475f5e83").then(t)}},{name:"v-5b1ee393",path:"/vue-next/vue-vite.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-5b1ee393").then(t)}},{name:"v-72ebb29a",path:"/vue/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-72ebb29a").then(t)}},{path:"/vue/index.html",redirect:"/vue/"},{name:"v-76f2b497",path:"/vue/vue1.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-76f2b497").then(t)}},{name:"v-3d396f55",path:"/vue/vue2.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-3d396f55").then(t)}},{name:"v-efab5a04",path:"/web/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-efab5a04").then(t)}},{path:"/web/index.html",redirect:"/web/"},{name:"v-e4941b72",path:"/web/common-css.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-e4941b72").then(t)}},{name:"v-fd3e4dda",path:"/web/css.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-fd3e4dda").then(t)}},{name:"v-dbde789a",path:"/web/emoji.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-dbde789a").then(t)}},{name:"v-35f39ada",path:"/web/kuayu.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-35f39ada").then(t)}},{name:"v-4cb1a2b3",path:"/web/proxy.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-4cb1a2b3").then(t)}},{name:"v-4d46d953",path:"/web/webpack.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-4d46d953").then(t)}},{name:"v-9ae23868",path:"/webpack/",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-9ae23868").then(t)}},{path:"/webpack/index.html",redirect:"/webpack/"},{name:"v-cff0dc1a",path:"/webpack/tapable.html",component:ms,beforeEnter:function(n,e,t){qi("Layout","v-cff0dc1a").then(t)}},{path:"*",component:ms}],vs={title:"U世界的V梦想",description:"一切皆有可能!",base:"/blog-vuepress/",headTags:[],pages:[{title:"Home",frontmatter:{home:!0,actionText:"快速阅读→",actionLink:"/web/",features:[{title:"Web",details:"前端开发是创建Web页面或app等前端界面呈现给用户的过程，通过HTML，CSS及JavaScript以及衍生出来的各种技术、框架、解决方案，来实现互联网产品的用户界面交互 [1]  .它从网页制作演变而来，名称上有很明显的时代特征.在互联网的演化进程中，网页制作是Web1.0时代的产物，早期网站主要内容都是静态，以图片和文字为主，用户使用网站的行为也以浏览为主.随着互联网技术的发展和HTML5、CSS3的应用，现代网页更加美观，交互效果显著，功能更加强大."},{title:"Go",details:"Go（又称Golang）是Google开发的一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言."},{title:"Flutter",details:"Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面. Flutter可以与现有的代码一起工作.在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的."}],footer:"MIT Licensed | Copyright © 2021-present wangzhongjie"},regularPath:"/",relativePath:"README.md",key:"v-6dff3b88",path:"/",lastUpdated:"9/1/2021, 8:35:53 AM",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Angular",frontmatter:{},regularPath:"/angular/",relativePath:"angular/README.md",key:"v-ebbfd13c",path:"/angular/",lastUpdated:"5/30/2019, 8:32:43 AM",headersStr:null,content:"# Angular\n一套框架，多种平台 移动端 & 桌面端",normalizedContent:"# angular\n一套框架，多种平台 移动端 & 桌面端",charsets:{cjk:!0}},{title:"深入",frontmatter:{},regularPath:"/flutter-deep/",relativePath:"flutter-deep/README.md",key:"v-b25c4850",path:"/flutter-deep/",lastUpdated:"7/18/2019, 1:47:40 AM",headersStr:null,content:"# 深入",normalizedContent:"# 深入",charsets:{cjk:!0}},{title:"Flutter 插件列表",frontmatter:{},regularPath:"/flutter-plugin/",relativePath:"flutter-plugin/README.md",key:"v-65f5d478",path:"/flutter-plugin/",lastUpdated:"8/1/2019, 5:42:00 AM",headersStr:null,content:"# Flutter 插件列表\n插件                   地址       作用                                          \nflutter_screenutil   github   flutter 屏幕适配方案，让你的 UI 在不同尺寸的屏幕上都能显示合理的布局!   \nflutter_swiper       github   flutter 轮播图                                 \nurl_launcher         github   打开 url,拨打电话                                 \nflutter_screen       github   屏幕适配方案                                      \nFlutterToast         github   message 提示                                  \nfluro                github   路由                                          \nshared_preferences   github   持久化存储                                       \nprovider             github   状态管理",normalizedContent:"# flutter 插件列表\n插件                   地址       作用                                          \nflutter_screenutil   github   flutter 屏幕适配方案，让你的 ui 在不同尺寸的屏幕上都能显示合理的布局!   \nflutter_swiper       github   flutter 轮播图                                 \nurl_launcher         github   打开 url,拨打电话                                 \nflutter_screen       github   屏幕适配方案                                      \nfluttertoast         github   message 提示                                  \nfluro                github   路由                                          \nshared_preferences   github   持久化存储                                       \nprovider             github   状态管理",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/config.html",relativePath:"config.md",key:"v-136da63b",path:"/config.html",lastUpdated:"5/21/2019, 6:26:46 AM",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"状态管理 Provider",frontmatter:{},regularPath:"/flutter-plugin/provider.html",relativePath:"flutter-plugin/provider.md",key:"v-c40b6cda",path:"/flutter-plugin/provider.html",lastUpdated:"8/1/2019, 5:43:00 AM",headersStr:null,content:"# 状态管理 Provider\n##官网仓库\n\nprovider\n\n官方文档比较简洁,所以我做了一个 demo 演示几种用法\n\nflutter-provider-demo",normalizedContent:"# 状态管理 provider\n##官网仓库\n\nprovider\n\n官方文档比较简洁,所以我做了一个 demo 演示几种用法\n\nflutter-provider-demo",charsets:{cjk:!0}},{title:"shared_preferences",frontmatter:{},regularPath:"/flutter-plugin/shared_preferences.html",relativePath:"flutter-plugin/shared_preferences.md",key:"v-1621fdf3",path:"/flutter-plugin/shared_preferences.html",lastUpdated:"7/23/2019, 7:05:27 AM",headersStr:null,content:"# shared_preferences\n退出软件后再次打开软件,数据依旧还在\n\nimport 'package:flutter/material.dart';\nimport 'package:shared_preferences/shared_preferences.dart';\n\nclass CarPage extends StatefulWidget {\n  @override\n  _CarPageState createState() => _CarPageState();\n}\n\nclass _CarPageState extends State<CarPage> {\n  List<String> testList = [];\n\n  @override\n  Widget build(BuildContext context) {\n    _show();\n    return Container(\n      child: Column(\n        children: <Widget>[\n          Container(\n            height: 500,\n            child: ListView.builder(\n              itemCount: testList.length,\n              itemBuilder: (context, index) {\n                return ListTile(\n                  title: Text(testList[index]),\n                );\n              },\n            ),\n          ),\n          RaisedButton(\n            onPressed: () {\n              _add();\n            },\n            child: Text('增加'),\n          ),\n          RaisedButton(\n            onPressed: () {\n              _clear();\n            },\n            child: Text('清空'),\n          ),\n        ],\n      ),\n    );\n  }\n\n//  增加方法\n  void _add() async {\n    SharedPreferences prefs = await SharedPreferences.getInstance();\n    String temp = '呵呵';\n    testList.add(temp);\n    prefs.setStringList('testInfo', testList);\n    _show();\n  }\n\n//  查询\n  void _show() async {\n    SharedPreferences prefs = await SharedPreferences.getInstance();\n    if (prefs.getStringList('testInfo') != null) {\n      setState(() {\n        testList = prefs.getStringList('testInfo');\n      });\n    }\n  }\n\n//  删除\n  void _clear() async {\n    SharedPreferences prefs = await SharedPreferences.getInstance();\n//    全部删除\n//    prefs.clear();\n    prefs.remove('testInfo');\n    setState(() {\n      testList = [];\n    });\n  }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76",normalizedContent:"# shared_preferences\n退出软件后再次打开软件,数据依旧还在\n\nimport 'package:flutter/material.dart';\nimport 'package:shared_preferences/shared_preferences.dart';\n\nclass carpage extends statefulwidget {\n  @override\n  _carpagestate createstate() => _carpagestate();\n}\n\nclass _carpagestate extends state<carpage> {\n  list<string> testlist = [];\n\n  @override\n  widget build(buildcontext context) {\n    _show();\n    return container(\n      child: column(\n        children: <widget>[\n          container(\n            height: 500,\n            child: listview.builder(\n              itemcount: testlist.length,\n              itembuilder: (context, index) {\n                return listtile(\n                  title: text(testlist[index]),\n                );\n              },\n            ),\n          ),\n          raisedbutton(\n            onpressed: () {\n              _add();\n            },\n            child: text('增加'),\n          ),\n          raisedbutton(\n            onpressed: () {\n              _clear();\n            },\n            child: text('清空'),\n          ),\n        ],\n      ),\n    );\n  }\n\n//  增加方法\n  void _add() async {\n    sharedpreferences prefs = await sharedpreferences.getinstance();\n    string temp = '呵呵';\n    testlist.add(temp);\n    prefs.setstringlist('testinfo', testlist);\n    _show();\n  }\n\n//  查询\n  void _show() async {\n    sharedpreferences prefs = await sharedpreferences.getinstance();\n    if (prefs.getstringlist('testinfo') != null) {\n      setstate(() {\n        testlist = prefs.getstringlist('testinfo');\n      });\n    }\n  }\n\n//  删除\n  void _clear() async {\n    sharedpreferences prefs = await sharedpreferences.getinstance();\n//    全部删除\n//    prefs.clear();\n    prefs.remove('testinfo');\n    setstate(() {\n      testlist = [];\n    });\n  }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76",charsets:{cjk:!0}},{title:"Flutter",frontmatter:{},regularPath:"/flutter/",relativePath:"flutter/README.md",key:"v-24e6dbee",path:"/flutter/",lastUpdated:"7/15/2019, 12:58:09 AM",headersStr:null,content:"# Flutter\nTIP\n\nFlutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面. Flutter可以与现有的代码一起工作.在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的.\n\n特点\n\n * 1.快速开发 毫秒级的热重载，修改后，您的应用界面会立即更新.使用丰富的、完全可定制的widget在几分钟内构建原生界面.\n * 2.富有表现力和灵活的UI 快速发布聚焦于原生体验的功能.分层的架构允许您完全自定义，从而实现难以置信的快速渲染和富有表现力、灵活的设计.\n * 3.原生性能 Flutter包含了许多核心的widget，如滚动、导航、图标和字体等，这些都可以在iOS和Android上达到原生应用一样的性能.",normalizedContent:"# flutter\ntip\n\nflutter是谷歌的移动ui框架，可以快速在ios和android上构建高质量的原生用户界面. flutter可以与现有的代码一起工作.在全世界，flutter正在被越来越多的开发者和组织使用，并且flutter是完全免费、开源的.\n\n特点\n\n * 1.快速开发 毫秒级的热重载，修改后，您的应用界面会立即更新.使用丰富的、完全可定制的widget在几分钟内构建原生界面.\n * 2.富有表现力和灵活的ui 快速发布聚焦于原生体验的功能.分层的架构允许您完全自定义，从而实现难以置信的快速渲染和富有表现力、灵活的设计.\n * 3.原生性能 flutter包含了许多核心的widget，如滚动、导航、图标和字体等，这些都可以在ios和android上达到原生应用一样的性能.",charsets:{cjk:!0}},{title:"打包",frontmatter:{},regularPath:"/flutter/build.html",relativePath:"flutter/build.md",key:"v-06784333",path:"/flutter/build.html",headers:[{level:2,title:"一.修改app名称和图标",slug:"一-修改app名称和图标",normalizedTitle:"一.修改app名称和图标",charIndex:7},{level:2,title:"二.生成 keystore",slug:"二-生成-keystore",normalizedTitle:"二.生成 keystore",charIndex:170},{level:2,title:"三.配置key",slug:"三-配置key",normalizedTitle:"三.配置key",charIndex:719}],lastUpdated:"9/4/2019, 9:45:35 AM",headersStr:"一.修改app名称和图标 二.生成 keystore 三.配置key",content:"# 打包\n# 一.修改app名称和图标\n项目根目录/android/app/src/main/AndroidManifest.xml\n\nandroid:label=\"flutter_app\"   //配置APP的名称，支持中文\nandroid:icon=\"@mipmap/ic_launcher\" //APP图标的文件名称\n\n\n1\n2\n# 二.生成 keystore\nkeytool -genkey -v -keystore ~/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key\n\n\n1\n这句话肯定运行不起来的,报错寻找不到路径,解决办法如下:\n\nflutter doctor -v\n\n\n1\n复制图片中标注的java binary位置\n\n/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/bin/keytool -genkey -v -keystore ~/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key\n\n\n1\n接下来就是key找不到,需要把key地址填在~/key.jks之前\n\n/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/bin/keytool -genkey -v -keystore /key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key\n\n\n1\n# 三.配置key\n1.进入项目目录的/android/app/build.gradle文件，在android{这一行前面,加入如下代码：\n\ndef keystorePropertiesFile = rootProject.file(\"key.properties\")\ndef keystoreProperties = new Properties()\nkeystoreProperties.load(new FileInputStream(keystorePropertiesFile))\n\n\n1\n2\n3\n把如下代码替换\n\nbuildTypes {\n    release {\n        signingConfig signingConfigs.debug\n    }\n}\n\n\n1\n2\n3\n4\n5\n替换成:\n\nsigningConfigs {\n    release {\n        keyAlias keystoreProperties['keyAlias']\n        keyPassword keystoreProperties['keyPassword']\n        storeFile file(keystoreProperties['storeFile'])\n        storePassword keystoreProperties['storePassword']\n    }\n}\nbuildTypes {\n    release {\n        signingConfig signingConfigs.release\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n四.创建文件 项目目录下的android文件夹下，创建一个名为key.properties的文件，并打开粘贴下面的代码。\n\nstorePassword=<password from previous step>    //输入上一步创建KEY时输入的 密钥库 密码\nkeyPassword=<password from previous step>    //输入上一步创建KEY时输入的 密钥 密码\nkeyAlias=key\nstoreFile=<E:/key.jks>    //key.jks的存放路径\n\n\n1\n2\n3\n4\neg:\n\nstorePassword=123123\nkeyPassword=123123\nkeyAlias=key\nstoreFile=D:/key.jks\n\n\n1\n2\n3\n4\n五.打包\n\nflutter build apk\n\n\n1",normalizedContent:"# 打包\n# 一.修改app名称和图标\n项目根目录/android/app/src/main/androidmanifest.xml\n\nandroid:label=\"flutter_app\"   //配置app的名称，支持中文\nandroid:icon=\"@mipmap/ic_launcher\" //app图标的文件名称\n\n\n1\n2\n# 二.生成 keystore\nkeytool -genkey -v -keystore ~/key.jks -keyalg rsa -keysize 2048 -validity 10000 -alias key\n\n\n1\n这句话肯定运行不起来的,报错寻找不到路径,解决办法如下:\n\nflutter doctor -v\n\n\n1\n复制图片中标注的java binary位置\n\n/applications/android studio.app/contents/jre/jdk/contents/home/bin/keytool -genkey -v -keystore ~/key.jks -keyalg rsa -keysize 2048 -validity 10000 -alias key\n\n\n1\n接下来就是key找不到,需要把key地址填在~/key.jks之前\n\n/applications/android studio.app/contents/jre/jdk/contents/home/bin/keytool -genkey -v -keystore /key.jks -keyalg rsa -keysize 2048 -validity 10000 -alias key\n\n\n1\n# 三.配置key\n1.进入项目目录的/android/app/build.gradle文件，在android{这一行前面,加入如下代码：\n\ndef keystorepropertiesfile = rootproject.file(\"key.properties\")\ndef keystoreproperties = new properties()\nkeystoreproperties.load(new fileinputstream(keystorepropertiesfile))\n\n\n1\n2\n3\n把如下代码替换\n\nbuildtypes {\n    release {\n        signingconfig signingconfigs.debug\n    }\n}\n\n\n1\n2\n3\n4\n5\n替换成:\n\nsigningconfigs {\n    release {\n        keyalias keystoreproperties['keyalias']\n        keypassword keystoreproperties['keypassword']\n        storefile file(keystoreproperties['storefile'])\n        storepassword keystoreproperties['storepassword']\n    }\n}\nbuildtypes {\n    release {\n        signingconfig signingconfigs.release\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n四.创建文件 项目目录下的android文件夹下，创建一个名为key.properties的文件，并打开粘贴下面的代码。\n\nstorepassword=<password from previous step>    //输入上一步创建key时输入的 密钥库 密码\nkeypassword=<password from previous step>    //输入上一步创建key时输入的 密钥 密码\nkeyalias=key\nstorefile=<e:/key.jks>    //key.jks的存放路径\n\n\n1\n2\n3\n4\neg:\n\nstorepassword=123123\nkeypassword=123123\nkeyalias=key\nstorefile=d:/key.jks\n\n\n1\n2\n3\n4\n五.打包\n\nflutter build apk\n\n\n1",charsets:{cjk:!0}},{title:"Dio",frontmatter:{},regularPath:"/flutter/dio.html",relativePath:"flutter/dio.md",key:"v-45ababf3",path:"/flutter/dio.html",headers:[{level:2,title:"添加依赖",slug:"添加依赖",normalizedTitle:"添加依赖",charIndex:99},{level:2,title:"一个极简的示例",slug:"一个极简的示例",normalizedTitle:"一个极简的示例",charIndex:140}],lastUpdated:"7/2/2019, 2:23:23 PM",headersStr:"添加依赖 一个极简的示例",content:'# Dio\nTIP\n\ndio是一个强大的Dart Http请求库，支持Restful API、FormData、拦截器、请求取消、Cookie管理、文件上传/下载、超时、自定义适配器等...\n\n# 添加依赖\ndependencies:\n  dio: ^2.1.x\n\n\n1\n2\n# 一个极简的示例\nimport \'package:flutter/material.dart\';\nimport \'package:dio/dio.dart\';\nclass HomePage extends StatefulWidget {\n  @override\n  _HomePageState createState() => _HomePageState();\n}\n\nclass _HomePageState extends State<HomePage> {\n  TextEditingController typeController=TextEditingController();\n  String showText="欢迎你来到这里!";\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      child: Scaffold(\n        appBar: AppBar(\n          title: Text("美好人间"),\n        ),\n        body:SingleChildScrollView(\n        child:Container(\n          child: Column(\n            children: <Widget>[\n              TextField(\n                controller: typeController,\n                decoration: InputDecoration(\n                  contentPadding: EdgeInsets.all(10.0),\n                  labelText: "美女类型",\n                  helperText: \'请输入你喜欢的类型\'\n                ),\n                autofocus: false,\n              ),\n              RaisedButton(\n                onPressed: _choiceAction,\n                child: Text("选择完毕"),\n              ),\n              Text(\n                showText,\n                overflow: TextOverflow.ellipsis,\n                maxLines: 1,\n              )\n            ],\n          ),\n        ),\n        )\n      ),\n    );\n  }\n\n  void _choiceAction(){\n    print("开始选择");\n    if(typeController.text.toString()==\'\'){\n      showDialog(\n        context: context,\n        builder: (context)=>AlertDialog(title:Text("美女类型不能为空"))\n      );\n    }else{\n      getHttp(typeController.text.toString()).then((val){\n        setState(() {\n          showText=val[\'data\'][\'name\'].toString();\n        });\n      });\n    }\n  }\n\n  Future getHttp(String TypeText) async{\n     try {\n      Response response;\n      var data={"name":TypeText};\n      response = await Dio().get(\n          "https://www.easy-mock.com/mock/5c60131a4bed3a6342711498/baixing/dabaojian",\n          queryParameters: data\n          );\n      return response.data;\n    } catch (e) {\n      return print(e);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\nWARNING\n\n键盘弹出出现界面超出的问题SingleChildScrollView即可解决\n\n> 效果如下',normalizedContent:'# dio\ntip\n\ndio是一个强大的dart http请求库，支持restful api、formdata、拦截器、请求取消、cookie管理、文件上传/下载、超时、自定义适配器等...\n\n# 添加依赖\ndependencies:\n  dio: ^2.1.x\n\n\n1\n2\n# 一个极简的示例\nimport \'package:flutter/material.dart\';\nimport \'package:dio/dio.dart\';\nclass homepage extends statefulwidget {\n  @override\n  _homepagestate createstate() => _homepagestate();\n}\n\nclass _homepagestate extends state<homepage> {\n  texteditingcontroller typecontroller=texteditingcontroller();\n  string showtext="欢迎你来到这里!";\n  @override\n  widget build(buildcontext context) {\n    return container(\n      child: scaffold(\n        appbar: appbar(\n          title: text("美好人间"),\n        ),\n        body:singlechildscrollview(\n        child:container(\n          child: column(\n            children: <widget>[\n              textfield(\n                controller: typecontroller,\n                decoration: inputdecoration(\n                  contentpadding: edgeinsets.all(10.0),\n                  labeltext: "美女类型",\n                  helpertext: \'请输入你喜欢的类型\'\n                ),\n                autofocus: false,\n              ),\n              raisedbutton(\n                onpressed: _choiceaction,\n                child: text("选择完毕"),\n              ),\n              text(\n                showtext,\n                overflow: textoverflow.ellipsis,\n                maxlines: 1,\n              )\n            ],\n          ),\n        ),\n        )\n      ),\n    );\n  }\n\n  void _choiceaction(){\n    print("开始选择");\n    if(typecontroller.text.tostring()==\'\'){\n      showdialog(\n        context: context,\n        builder: (context)=>alertdialog(title:text("美女类型不能为空"))\n      );\n    }else{\n      gethttp(typecontroller.text.tostring()).then((val){\n        setstate(() {\n          showtext=val[\'data\'][\'name\'].tostring();\n        });\n      });\n    }\n  }\n\n  future gethttp(string typetext) async{\n     try {\n      response response;\n      var data={"name":typetext};\n      response = await dio().get(\n          "https://www.easy-mock.com/mock/5c60131a4bed3a6342711498/baixing/dabaojian",\n          queryparameters: data\n          );\n      return response.data;\n    } catch (e) {\n      return print(e);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\nwarning\n\n键盘弹出出现界面超出的问题singlechildscrollview即可解决\n\n> 效果如下',charsets:{cjk:!0}},{title:"Flare 动画",frontmatter:{},regularPath:"/flutter/flare.html",relativePath:"flutter/flare.md",key:"v-f2c0519a",path:"/flutter/flare.html",lastUpdated:"8/15/2019, 6:51:59 AM",headersStr:null,content:'# Flare 动画\n如上:\n\n * 1.我们需要用的是 flare 官网在Explore里面找到需要使用的动画点击进入\n   \n   \n * 2.点击OPEN FLARE进入编辑页面,\n   \n   \n * 3.\n   \n   \n * 4.\n   \n   \n * 5.将下载的文件放在项目根目录新建一个 flrs 文件夹下\n   \n   \n * 6.pubspec.yaml\n   \n   \n\ndependencies:\n  flutter:\n    sdk: flutter\n  flare_flutter: ^1.5.0\n  ...\n  assets:\n     - flrs/\n\n\n1\n2\n3\n4\n5\n6\n7\n * 7.代码\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport \'package:flutter/material.dart\';\nimport \'package:flare_flutter/flare_actor.dart\';\n\nclass BtnFlare extends StatefulWidget {\n  @override\n  _BtnFlareState createState() => _BtnFlareState();\n}\n\nclass _BtnFlareState extends State<BtnFlare> {\n  String _currentAnimation = \'normal\';\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: <Widget>[\n        Container(\n          width: 100,\n          height: 100,\n          child: GestureDetector(\n            child: FlareActor(\n              "flrs/btn.flr",\n              animation: _currentAnimation,\n              fit: BoxFit.contain,\n              callback: (animationName) {\n                switch (animationName) {\n                  case "tap":\n                    break;\n                  case "success":\n                    break;\n                  case "fail":\n                    break;\n                }\n              },\n            ),\n          ),\n        ),\n        Row(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            RaisedButton(\n              color: Colors.green,\n              onPressed: () {\n                setState(() {\n                  _currentAnimation = "success";\n                });\n              },\n              child: Text(\n                \'Success\',\n                style: TextStyle(color: Colors.white),\n              ),\n            ),\n            RaisedButton(\n              onPressed: () {\n                setState(() {\n                  _currentAnimation = "tap";\n                });\n              },\n              child: Text(\n                \'Tap\',\n                style: TextStyle(color: Colors.white),\n              ),\n            ),\n            RaisedButton(\n              color: Colors.orange,\n              onPressed: () {\n                setState(() {\n                  _currentAnimation = "loading";\n                });\n              },\n              child: Text(\n                \'Loading\',\n                style: TextStyle(color: Colors.white),\n              ),\n            ),\n            RaisedButton(\n              color: Colors.red,\n              onPressed: () {\n                setState(() {\n                  _currentAnimation = "fail";\n                });\n              },\n              child: Text(\n                \'Fail\',\n                style: TextStyle(color: Colors.white),\n              ),\n            )\n          ],\n        )\n      ],\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91',normalizedContent:'# flare 动画\n如上:\n\n * 1.我们需要用的是 flare 官网在explore里面找到需要使用的动画点击进入\n   \n   \n * 2.点击open flare进入编辑页面,\n   \n   \n * 3.\n   \n   \n * 4.\n   \n   \n * 5.将下载的文件放在项目根目录新建一个 flrs 文件夹下\n   \n   \n * 6.pubspec.yaml\n   \n   \n\ndependencies:\n  flutter:\n    sdk: flutter\n  flare_flutter: ^1.5.0\n  ...\n  assets:\n     - flrs/\n\n\n1\n2\n3\n4\n5\n6\n7\n * 7.代码\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport \'package:flutter/material.dart\';\nimport \'package:flare_flutter/flare_actor.dart\';\n\nclass btnflare extends statefulwidget {\n  @override\n  _btnflarestate createstate() => _btnflarestate();\n}\n\nclass _btnflarestate extends state<btnflare> {\n  string _currentanimation = \'normal\';\n  @override\n  widget build(buildcontext context) {\n    return column(\n      children: <widget>[\n        container(\n          width: 100,\n          height: 100,\n          child: gesturedetector(\n            child: flareactor(\n              "flrs/btn.flr",\n              animation: _currentanimation,\n              fit: boxfit.contain,\n              callback: (animationname) {\n                switch (animationname) {\n                  case "tap":\n                    break;\n                  case "success":\n                    break;\n                  case "fail":\n                    break;\n                }\n              },\n            ),\n          ),\n        ),\n        row(\n          mainaxisalignment: mainaxisalignment.center,\n          children: <widget>[\n            raisedbutton(\n              color: colors.green,\n              onpressed: () {\n                setstate(() {\n                  _currentanimation = "success";\n                });\n              },\n              child: text(\n                \'success\',\n                style: textstyle(color: colors.white),\n              ),\n            ),\n            raisedbutton(\n              onpressed: () {\n                setstate(() {\n                  _currentanimation = "tap";\n                });\n              },\n              child: text(\n                \'tap\',\n                style: textstyle(color: colors.white),\n              ),\n            ),\n            raisedbutton(\n              color: colors.orange,\n              onpressed: () {\n                setstate(() {\n                  _currentanimation = "loading";\n                });\n              },\n              child: text(\n                \'loading\',\n                style: textstyle(color: colors.white),\n              ),\n            ),\n            raisedbutton(\n              color: colors.red,\n              onpressed: () {\n                setstate(() {\n                  _currentanimation = "fail";\n                });\n              },\n              child: text(\n                \'fail\',\n                style: textstyle(color: colors.white),\n              ),\n            )\n          ],\n        )\n      ],\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91',charsets:{cjk:!0}},{title:"Flutter",frontmatter:{},regularPath:"/flutter/flutter1.html",relativePath:"flutter/flutter1.md",key:"v-1250ec22",path:"/flutter/flutter1.html",headers:[{level:2,title:"指令",slug:"指令",normalizedTitle:"指令",charIndex:12}],lastUpdated:"7/8/2019, 9:38:19 AM",headersStr:"指令",content:"# Flutter\n# 指令\n指令                       作用                                                                                                                  \nanalyze                  Analyze the project's Dart code.                                                                                    \nattach                   Attach to a running application.                                                                                    \nbash-completion          Output command line shell completion setup scripts.                                                                 \nbuild                    Flutter build commands.                                                                                             \nchannel                  List or switch flutter channels.                                                                                    \nclean                    Delete the build/ directory.                                                                                        \nconfig                   Configure Flutter settings.                                                                                         \ncreate                   Create a new Flutter project.                                                                                       \ndevices                  List all connected devices.                                                                                         \ndoctor                   Show information about the installed tooling.                                                                       \ndrive                    Runs Flutter Driver tests for the current project.                                                                  \nemulators                List, launch and create emulators.                                                                                  \nformat                   Format one or more dart files.                                                                                      \nhelp                     Display help information for flutter.                                                                               \ninstall                  Install a Flutter app on an attached device.                                                                        \nlogs                     Show log output for running Flutter apps.                                                                           \nmake-host-app-editable   Moves host apps from generated directories to non-generated.directories so that they can be edited by developers.   \npackages                 Commands for managing Flutter packages.                                                                             \nprecache                 Populates the Flutter tool's cache of binary artifacts.                                                             \nrun                      Run your Flutter app on an attached device.                                                                         \nscreenshot               Take a screenshot from a connected device.                                                                          \nstop                     Stop your Flutter app on an attached device.                                                                        \ntest                     Run Flutter unit tests for the current project.                                                                     \ntrace                    Start and stop tracing for a running Flutter app.                                                                   \nupgrade                  Upgrade your copy of Flutter.                                                                                       \n指令                       作用                                                                                                                  \n:--:                     :---:                                                                                                               \nanalyze                  分析项目的 Dart 代码.                                                                                                      \nattach                   附加到正在运行的应用程序.                                                                                                       \nbash-completion          输出命令行 shell 完成设置脚本.                                                                                                 \nbuild                    Flutter 构建命令.                                                                                                       \nchannel                  列出或切换颤振通道.                                                                                                          \nclean                    删除 build/ directory.                                                                                                \nconfig                   配置 Flutter 设置.                                                                                                      \ncreate                   创建一个 flutter 项目.                                                                                                    \ndevices                  可使用的设备.                                                                                                             \ndoctor                   诊断电脑环境配置缺少项.                                                                                                        \ndrive                    运行当前项目的 Flutter Driver 测试.                                                                                          \nemulators                列出，启动和创建模拟器.                                                                                                        \nformat                   格式化一个或多个 dart 文件.                                                                                                   \nhelp                     帮助.                                                                                                                 \ninstall                  在连接的设备上安装 Flutter 应用程序.                                                                                             \nlogs                     显示运行 Flutter 应用程序的日志输出.                                                                                             \nmake-host-app-editable   将主机应用程序从生成的目录移动到非生成目录，以便开发人员可以编辑它们.                                                                                 \npackages                 用于管理 Flutter 包的命令.                                                                                                  \nprecache                 填充 Flutter 工具的二进制工件缓存.                                                                                              \nrun                      启动项目.                                                                                                               \nscreenshot               从连接的设备截取屏幕截图.                                                                                                       \nstop                     在连接的设备上停止 Flutter 应用.                                                                                               \ntest                     运行当前项目的 Flutter 单元测试.                                                                                               \ntrace                    启动和停止正在运行的 Flutter 应用程序的跟踪.                                                                                         \nupgrade                  升级您的 Flutter 环境.                                                                                                    \n\nsource ~/.bash_profile\n\n\n1",normalizedContent:"# flutter\n# 指令\n指令                       作用                                                                                                                  \nanalyze                  analyze the project's dart code.                                                                                    \nattach                   attach to a running application.                                                                                    \nbash-completion          output command line shell completion setup scripts.                                                                 \nbuild                    flutter build commands.                                                                                             \nchannel                  list or switch flutter channels.                                                                                    \nclean                    delete the build/ directory.                                                                                        \nconfig                   configure flutter settings.                                                                                         \ncreate                   create a new flutter project.                                                                                       \ndevices                  list all connected devices.                                                                                         \ndoctor                   show information about the installed tooling.                                                                       \ndrive                    runs flutter driver tests for the current project.                                                                  \nemulators                list, launch and create emulators.                                                                                  \nformat                   format one or more dart files.                                                                                      \nhelp                     display help information for flutter.                                                                               \ninstall                  install a flutter app on an attached device.                                                                        \nlogs                     show log output for running flutter apps.                                                                           \nmake-host-app-editable   moves host apps from generated directories to non-generated.directories so that they can be edited by developers.   \npackages                 commands for managing flutter packages.                                                                             \nprecache                 populates the flutter tool's cache of binary artifacts.                                                             \nrun                      run your flutter app on an attached device.                                                                         \nscreenshot               take a screenshot from a connected device.                                                                          \nstop                     stop your flutter app on an attached device.                                                                        \ntest                     run flutter unit tests for the current project.                                                                     \ntrace                    start and stop tracing for a running flutter app.                                                                   \nupgrade                  upgrade your copy of flutter.                                                                                       \n指令                       作用                                                                                                                  \n:--:                     :---:                                                                                                               \nanalyze                  分析项目的 dart 代码.                                                                                                      \nattach                   附加到正在运行的应用程序.                                                                                                       \nbash-completion          输出命令行 shell 完成设置脚本.                                                                                                 \nbuild                    flutter 构建命令.                                                                                                       \nchannel                  列出或切换颤振通道.                                                                                                          \nclean                    删除 build/ directory.                                                                                                \nconfig                   配置 flutter 设置.                                                                                                      \ncreate                   创建一个 flutter 项目.                                                                                                    \ndevices                  可使用的设备.                                                                                                             \ndoctor                   诊断电脑环境配置缺少项.                                                                                                        \ndrive                    运行当前项目的 flutter driver 测试.                                                                                          \nemulators                列出，启动和创建模拟器.                                                                                                        \nformat                   格式化一个或多个 dart 文件.                                                                                                   \nhelp                     帮助.                                                                                                                 \ninstall                  在连接的设备上安装 flutter 应用程序.                                                                                             \nlogs                     显示运行 flutter 应用程序的日志输出.                                                                                             \nmake-host-app-editable   将主机应用程序从生成的目录移动到非生成目录，以便开发人员可以编辑它们.                                                                                 \npackages                 用于管理 flutter 包的命令.                                                                                                  \nprecache                 填充 flutter 工具的二进制工件缓存.                                                                                              \nrun                      启动项目.                                                                                                               \nscreenshot               从连接的设备截取屏幕截图.                                                                                                       \nstop                     在连接的设备上停止 flutter 应用.                                                                                               \ntest                     运行当前项目的 flutter 单元测试.                                                                                               \ntrace                    启动和停止正在运行的 flutter 应用程序的跟踪.                                                                                         \nupgrade                  升级您的 flutter 环境.                                                                                                    \n\nsource ~/.bash_profile\n\n\n1",charsets:{cjk:!0}},{title:"Model 数据模型",frontmatter:{},regularPath:"/flutter/model.html",relativePath:"flutter/model.md",key:"v-38221c5a",path:"/flutter/model.html",headers:[{level:2,title:"Dart基本数据类型",slug:"dart基本数据类型",normalizedTitle:"dart基本数据类型",charIndex:15},{level:2,title:"一层数据结构",slug:"一层数据结构",normalizedTitle:"一层数据结构",charIndex:87},{level:2,title:"两层数据结构",slug:"两层数据结构",normalizedTitle:"两层数据结构",charIndex:612},{level:2,title:"自动生成model结构网站",slug:"自动生成model结构网站",normalizedTitle:"自动生成model结构网站",charIndex:2360}],lastUpdated:"7/18/2019, 2:09:00 AM",headersStr:"Dart基本数据类型 一层数据结构 两层数据结构 自动生成model结构网站",content:'# Model 数据模型\n# Dart基本数据类型\n * Numbers\n * Strings\n * Booleans\n * List（数组）\n * Maps（字典）\n\n# 一层数据结构\n> data(数据)\n\n\n{\n    "code": 200,\n    "status": "success"\n}\n\n\n1\n2\n3\n4\n> model(模型)\n\n\nclass FirstLevel {\n  int code;\n  String status;\n\n  FirstLevel({this.code, this.status});\n\n  FirstLevel.fromJson(Map<String, dynamic> json) {\n    code = json[\'code\'];\n    status = json[\'status\'];\n  }\n\n  Map<String, dynamic> toJson() {\n    final Map<String, dynamic> data = new Map<String, dynamic>();\n    data[\'code\'] = this.code;\n    data[\'status\'] = this.status;\n    return data;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 两层数据结构\n> data(数据)\n\n\n{\n    "code": 200,\n    "status": "success",\n    "data": [\n        {\n            "id": 1,\n            "name": "老大",\n            "age": "30",\n            "height": "178"\n        },\n        {\n            "id": 2,\n            "name": "老二",\n            "age": "18",\n            "height": "175"\n        }\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n> model(模型)\n\n\nclass FirstLevel {\n  int code;\n  String status;\n  List<TwoLevel> data;\n\n  FirstLevel({this.code, this.status, this.data});\n\n  FirstLevel.fromJson(Map<String, dynamic> json) {\n    code = json[\'code\'];\n    status = json[\'status\'];\n    if (json[\'data\'] != null) {\n      data = new List<TwoLevel>();\n      json[\'data\'].forEach((v) {\n        data.add(new TwoLevel.fromJson(v));\n      });\n    }\n  }\n\n  Map<String, dynamic> toJson() {\n    final Map<String, dynamic> data = new Map<String, dynamic>();\n    data[\'code\'] = this.code;\n    data[\'status\'] = this.status;\n    if (this.data != null) {\n      data[\'data\'] = this.data.map((v) => v.toJson()).toList();\n    }\n    return data;\n  }\n}\n\nclass TwoLevel {\n  int id;\n  String name;\n  String age;\n  String height;\n\n  TwoLevel({this.id, this.name, this.age, this.height});\n\n  TwoLevel.fromJson(Map<String, dynamic> json) {\n    id = json[\'id\'];\n    name = json[\'name\'];\n    age = json[\'age\'];\n    height = json[\'height\'];\n  }\n\n  Map<String, dynamic> toJson() {\n    final Map<String, dynamic> data = new Map<String, dynamic>();\n    data[\'id\'] = this.id;\n    data[\'name\'] = this.name;\n    data[\'age\'] = this.age;\n    data[\'height\'] = this.height;\n    return data;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n# 自动生成model结构网站\nJSON to Dart',normalizedContent:'# model 数据模型\n# dart基本数据类型\n * numbers\n * strings\n * booleans\n * list（数组）\n * maps（字典）\n\n# 一层数据结构\n> data(数据)\n\n\n{\n    "code": 200,\n    "status": "success"\n}\n\n\n1\n2\n3\n4\n> model(模型)\n\n\nclass firstlevel {\n  int code;\n  string status;\n\n  firstlevel({this.code, this.status});\n\n  firstlevel.fromjson(map<string, dynamic> json) {\n    code = json[\'code\'];\n    status = json[\'status\'];\n  }\n\n  map<string, dynamic> tojson() {\n    final map<string, dynamic> data = new map<string, dynamic>();\n    data[\'code\'] = this.code;\n    data[\'status\'] = this.status;\n    return data;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 两层数据结构\n> data(数据)\n\n\n{\n    "code": 200,\n    "status": "success",\n    "data": [\n        {\n            "id": 1,\n            "name": "老大",\n            "age": "30",\n            "height": "178"\n        },\n        {\n            "id": 2,\n            "name": "老二",\n            "age": "18",\n            "height": "175"\n        }\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n> model(模型)\n\n\nclass firstlevel {\n  int code;\n  string status;\n  list<twolevel> data;\n\n  firstlevel({this.code, this.status, this.data});\n\n  firstlevel.fromjson(map<string, dynamic> json) {\n    code = json[\'code\'];\n    status = json[\'status\'];\n    if (json[\'data\'] != null) {\n      data = new list<twolevel>();\n      json[\'data\'].foreach((v) {\n        data.add(new twolevel.fromjson(v));\n      });\n    }\n  }\n\n  map<string, dynamic> tojson() {\n    final map<string, dynamic> data = new map<string, dynamic>();\n    data[\'code\'] = this.code;\n    data[\'status\'] = this.status;\n    if (this.data != null) {\n      data[\'data\'] = this.data.map((v) => v.tojson()).tolist();\n    }\n    return data;\n  }\n}\n\nclass twolevel {\n  int id;\n  string name;\n  string age;\n  string height;\n\n  twolevel({this.id, this.name, this.age, this.height});\n\n  twolevel.fromjson(map<string, dynamic> json) {\n    id = json[\'id\'];\n    name = json[\'name\'];\n    age = json[\'age\'];\n    height = json[\'height\'];\n  }\n\n  map<string, dynamic> tojson() {\n    final map<string, dynamic> data = new map<string, dynamic>();\n    data[\'id\'] = this.id;\n    data[\'name\'] = this.name;\n    data[\'age\'] = this.age;\n    data[\'height\'] = this.height;\n    return data;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n# 自动生成model结构网站\njson to dart',charsets:{cjk:!0}},{title:"Flutter IconFont 的引用",frontmatter:{},regularPath:"/flutter/iconfont.html",relativePath:"flutter/iconfont.md",key:"v-7ada206e",path:"/flutter/iconfont.html",lastUpdated:"7/15/2019, 6:15:24 AM",headersStr:null,content:"# Flutter IconFont 的引用\n> 效果如下\n\n\n我们这里面采用的是阿里矢量图形库\n\n * 1.先去网站搜索图标,添加到购物车\n\n * 2.在购物车中[下载代码]或者添加到项目中下载代码\n\n> 购物车下载\n\n\n> 项目中下载\n\n\n * 3.下载完成打开 zip 包\n\n * 4.将标注的 ttf 文件移动到 flutter 根目录 assets 下面 fonts 文件夹\n\n * 5.pubspec.yaml中添加\n\n  fonts:\n      - family: IconFont\n        fonts:\n          - asset: assets/fonts/iconfont.ttf\n\n\n1\n2\n3\n4\n * 6.到这一步基本工作已经完成,可以使用了\n\nchild: Icon(\n    IconData(0xe64d, fontFamily: 'IconFont'),\n    size: 40,\n    color: Colors.red,\n)\n\n\n1\n2\n3\n4\n5\n这里面做一些说明:打开刚刚的zip包里面的html文件,会显示你下载的图标\n\nfontFamily对应的是你在pubspec.yaml的family的名字",normalizedContent:"# flutter iconfont 的引用\n> 效果如下\n\n\n我们这里面采用的是阿里矢量图形库\n\n * 1.先去网站搜索图标,添加到购物车\n\n * 2.在购物车中[下载代码]或者添加到项目中下载代码\n\n> 购物车下载\n\n\n> 项目中下载\n\n\n * 3.下载完成打开 zip 包\n\n * 4.将标注的 ttf 文件移动到 flutter 根目录 assets 下面 fonts 文件夹\n\n * 5.pubspec.yaml中添加\n\n  fonts:\n      - family: iconfont\n        fonts:\n          - asset: assets/fonts/iconfont.ttf\n\n\n1\n2\n3\n4\n * 6.到这一步基本工作已经完成,可以使用了\n\nchild: icon(\n    icondata(0xe64d, fontfamily: 'iconfont'),\n    size: 40,\n    color: colors.red,\n)\n\n\n1\n2\n3\n4\n5\n这里面做一些说明:打开刚刚的zip包里面的html文件,会显示你下载的图标\n\nfontfamily对应的是你在pubspec.yaml的family的名字",charsets:{cjk:!0}},{title:"杂乱问题收集",frontmatter:{},regularPath:"/flutter/other.html",relativePath:"flutter/other.md",key:"v-b5355a1a",path:"/flutter/other.html",headers:[{level:2,title:"图片圆边角",slug:"图片圆边角",normalizedTitle:"图片圆边角",charIndex:11},{level:2,title:"登录页键盘弹出页面溢出警告",slug:"登录页键盘弹出页面溢出警告",normalizedTitle:"登录页键盘弹出页面溢出警告",charIndex:298},{level:2,title:"好用的占位图",slug:"好用的占位图",normalizedTitle:"好用的占位图",charIndex:447},{level:2,title:"解决 FutureBuilder 重复请求的问题",slug:"解决-futurebuilder-重复请求的问题",normalizedTitle:"解决 futurebuilder 重复请求的问题",charIndex:658}],lastUpdated:"8/22/2019, 6:54:53 AM",headersStr:"图片圆边角 登录页键盘弹出页面溢出警告 好用的占位图 解决 FutureBuilder 重复请求的问题",content:"# 杂乱问题收集\n# 图片圆边角\n图片圆角不能像 web 端一样,元素外面包裹,设置外面元素的圆角实现!\n\n\n\nchild: ClipRRect(\n    borderRadius: BorderRadius.circular(20),\n    child: FadeInImage.assetNetwork(\n      placeholder: 'images/plac.png',\n      image: '${SwiperList[index]['imageUrl']}',\n      fit: BoxFit.fill,\n    ),\n  )\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 登录页键盘弹出页面溢出警告\nScaffold(\n     resizeToAvoidBottomInset: false,\n     backgroundColor: Colors.white,\n     body: _buildVerticalLayout()\n);\n\n\n1\n2\n3\n4\n5\n# 好用的占位图\n * 默认效果http://temp.im/ + 尺寸\n\nhttp://temp.im/640x260\n\n\n1\n * 背景色 http://temp.im/ + 尺寸 + 背景色\n\nhttp://temp.im/640x260/ccc\n\n\n1\n * 字体颜色 http://temp.im/ + 尺寸 + 背景色 +字体颜色\n\nhttp://temp.im/640x260/ff5a5f/fff\n\n\n1\n# 解决 FutureBuilder 重复请求的问题\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass SongListPage extends StatefulWidget {\n  final String songListId;\n  SongListPage(this.songListId);\n  @override\n  _SongListPageState createState() => _SongListPageState();\n}\n\nclass _SongListPageState extends State<SongListPage> {\n  AsyncMemoizer _memoizer = AsyncMemoizer();\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: FutureBuilder(\n        future: _getDetail(context),\n        builder: (context, snapshot) {\n          if (snapshot.connectionState != ConnectionState.waiting) {\n            return NestedScrollView(\n              headerSliverBuilder: _sliverBuilder,\n              body: BottomList(),\n            );\n          } else {\n            return Scaffold(\n              appBar: AppBar(\n                title: Text(''),\n                elevation: 0,\n              ),\n              body: Center(\n                child: Text('数据加载中!'),\n              ),\n            );\n          }\n        },\n      ),\n    );\n  }\n\n  List<Widget> _sliverBuilder(BuildContext context, bool innerBoxIsScrolled) {\n    return <Widget>[\n      TopArea()\n    ];\n  }\n\n  _getDetail(BuildContext context) {\n    return _memoizer.runOnce(() async {\n      return await Provider.of<SongDetailProvider>(context)\n          .getSongDetail(widget.songListId);\n    });\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49",normalizedContent:"# 杂乱问题收集\n# 图片圆边角\n图片圆角不能像 web 端一样,元素外面包裹,设置外面元素的圆角实现!\n\n\n\nchild: cliprrect(\n    borderradius: borderradius.circular(20),\n    child: fadeinimage.assetnetwork(\n      placeholder: 'images/plac.png',\n      image: '${swiperlist[index]['imageurl']}',\n      fit: boxfit.fill,\n    ),\n  )\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 登录页键盘弹出页面溢出警告\nscaffold(\n     resizetoavoidbottominset: false,\n     backgroundcolor: colors.white,\n     body: _buildverticallayout()\n);\n\n\n1\n2\n3\n4\n5\n# 好用的占位图\n * 默认效果http://temp.im/ + 尺寸\n\nhttp://temp.im/640x260\n\n\n1\n * 背景色 http://temp.im/ + 尺寸 + 背景色\n\nhttp://temp.im/640x260/ccc\n\n\n1\n * 字体颜色 http://temp.im/ + 尺寸 + 背景色 +字体颜色\n\nhttp://temp.im/640x260/ff5a5f/fff\n\n\n1\n# 解决 futurebuilder 重复请求的问题\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass songlistpage extends statefulwidget {\n  final string songlistid;\n  songlistpage(this.songlistid);\n  @override\n  _songlistpagestate createstate() => _songlistpagestate();\n}\n\nclass _songlistpagestate extends state<songlistpage> {\n  asyncmemoizer _memoizer = asyncmemoizer();\n  @override\n  widget build(buildcontext context) {\n    return scaffold(\n      body: futurebuilder(\n        future: _getdetail(context),\n        builder: (context, snapshot) {\n          if (snapshot.connectionstate != connectionstate.waiting) {\n            return nestedscrollview(\n              headersliverbuilder: _sliverbuilder,\n              body: bottomlist(),\n            );\n          } else {\n            return scaffold(\n              appbar: appbar(\n                title: text(''),\n                elevation: 0,\n              ),\n              body: center(\n                child: text('数据加载中!'),\n              ),\n            );\n          }\n        },\n      ),\n    );\n  }\n\n  list<widget> _sliverbuilder(buildcontext context, bool innerboxisscrolled) {\n    return <widget>[\n      toparea()\n    ];\n  }\n\n  _getdetail(buildcontext context) {\n    return _memoizer.runonce(() async {\n      return await provider.of<songdetailprovider>(context)\n          .getsongdetail(widget.songlistid);\n    });\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49",charsets:{cjk:!0}},{title:"状态管理",frontmatter:{},regularPath:"/flutter/state.html",relativePath:"flutter/state.md",key:"v-2b93d65a",path:"/flutter/state.html",lastUpdated:"7/17/2019, 5:57:16 AM",headersStr:null,content:"# 状态管理\nTIP\n\nflutter-provide官网状态管理\n\n最简单的示例:\n\n//这个model需要继承ChangeNotifier\nclass Counter with ChangeNotifier {\n  int _value;\n\n  int get value => _value;\n\n  Counter(this._value);\n\n  void increment() {\n    _value++;\n    notifyListeners();\n  }\n}\n\n// 界面\nclass CounterApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    final currentCounter = Provide.value<Counter>(context);\n\n    return Column(children: [\n      Provide<Counter>(\n        builder: (context, child, counter) => Text('${counter.value}'),\n      ),\n\n      StreamBuilder<Counter>(\n          initialData: currentCounter,\n          stream: Provide.stream<Counter>(context)\n              .where((counter) => counter.value % 2 == 0),\n          builder: (context, snapshot) =>\n              Text('Last even value: ${snapshot.data.value}')),\n\n      FlatButton(child: Text('increment'), onPressed: currentCounter.increment),\n\n      Text('Another widget that does not depend on the Counter'),\n    ]);\n  }\n}\n\n //定义一个全局的Provide\nvoid main() {\n    final providers = Providers()\n      ..provide(Provider.function((context) => Counter(0)));\n\n    runApp(ProviderNode(\n      providers: providers,\n      child: CounterApp(),\n    ));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49",normalizedContent:"# 状态管理\ntip\n\nflutter-provide官网状态管理\n\n最简单的示例:\n\n//这个model需要继承changenotifier\nclass counter with changenotifier {\n  int _value;\n\n  int get value => _value;\n\n  counter(this._value);\n\n  void increment() {\n    _value++;\n    notifylisteners();\n  }\n}\n\n// 界面\nclass counterapp extends statelesswidget {\n  @override\n  widget build(buildcontext context) {\n    final currentcounter = provide.value<counter>(context);\n\n    return column(children: [\n      provide<counter>(\n        builder: (context, child, counter) => text('${counter.value}'),\n      ),\n\n      streambuilder<counter>(\n          initialdata: currentcounter,\n          stream: provide.stream<counter>(context)\n              .where((counter) => counter.value % 2 == 0),\n          builder: (context, snapshot) =>\n              text('last even value: ${snapshot.data.value}')),\n\n      flatbutton(child: text('increment'), onpressed: currentcounter.increment),\n\n      text('another widget that does not depend on the counter'),\n    ]);\n  }\n}\n\n //定义一个全局的provide\nvoid main() {\n    final providers = providers()\n      ..provide(provider.function((context) => counter(0)));\n\n    runapp(providernode(\n      providers: providers,\n      child: counterapp(),\n    ));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49",charsets:{cjk:!0}},{title:"VsCode插件快捷键",frontmatter:{},regularPath:"/flutter/vscode.html",relativePath:"flutter/vscode.md",key:"v-edd23776",path:"/flutter/vscode.html",lastUpdated:"7/7/2019, 2:21:47 PM",headersStr:null,content:"# VsCode插件快捷键\n> Awesome Flutter Snippets\n\n\n快捷输入              扩展                         说明                                                                                                                                                                                    \nstatelessW        Stateless Widget           创建无状态小部件                                                                                                                                                                              \nstatefulW         Stateful Widget            创建有状态小部件                                                                                                                                                                              \nbuild             Build Method               描述窗口小部件表示的用户界面部分。                                                                                                                                                                     \ninitS             InitState                  将此对象插入树中时调用。 框架将为它创建的每个 State 对象调用此方法一次。                                                                                                                                              \ndis               Dispose                    永久地从树中删除此对象时调用。 当此 State 对象永远不会再次构建时，框架将调用此方法。                                                                                                                                        \nreassemble        Reassemble                 在调试期间重新组装应用程序时调用，例如在热重新加载期间                                                                                                                                                           \ndidChangeD        didChangeDependencies      在此State对象的依赖项更改时调用                                                                                                                                                                    \ndidUpdateW        didUpdateWidget            Called whenever the widget configuration changes.                                                                                                                                     \ncustomClipper     Custom Clipper             Used for creating custom shapes                                                                                                                                                       \ncustomPainter     Custom Painter             Used for creating custom paint                                                                                                                                                        \nlistViewB         ListView.Builder           Creates a scrollable, linear array of widgets that are created on demand.Providing a non-null itemCount improves the ability of the ListView to estimate the maximum scroll extent.   \ncustomScrollV     Custom ScrollView          Creates a ScrollView that creates custom scroll effects using slivers. If the primary argument is true, the controller must be null.                                                  \nstreamBldr        Stream Builder             Creates a new StreamBuilder that builds itself based on the latest snapshot of interaction with the specified stream                                                                  \nanimatedBldr      Animated Builder           Creates an Animated Builder. The widget specified to child is passed to the builder                                                                                                   \nstatefulBldr      Stateful Builder           Creates a widget that both has state and delegates its build to a callback. Useful for rebuilding specific sections of the widget tree.                                               \noriantationBldr   Orientation Builder        Creates a builder which allows for the orientation of the device to be specified and referenced                                                                                       \nlayoutBldr        Layout Builder             Similar to the Builder widget except that the framework calls the builder function at layout time and provides the parent widget's constraints.                                       \nsingleChildSV     Single Child Scroll View   Creates a scroll view with a single child                                                                                                                                             \nfutureBldr        Future Builder             Creates a Future Builder. This builds itself based on the latest snapshot of interaction with a Future.                                                                               \nnosm              No Such Method             This method is invoked when a non-existent method or property is accessed.                                                                                                            \ninheritedW        Inherited Widget           Class used to propagate information down the widget tree.                                                                                                                             \nmounted           Mounted                    Whether this State object is currently in a tree.                                                                                                                                     \nsnk               Sink                       A Sink is the input of a stream.                                                                                                                                                      \nstrm              Stream                     A source of asynchronous data events. A stream can be of any data type.                                                                                                               \ntoStr             To String                  Returns a string representation of this object.                                                                                                                                       \ndebugP            Debug Print                Prints a message to the console, which you can access using the flutter tool's logs command (flutter logs).                                                                           \nimportM           Material Package           Import Material package.                                                                                                                                                              \nimportC           Cupertino Package          Import Cupertino package.                                                                                                                                                             \nmateapp           Material App               Create a new Material App.                                                                                                                                                            \ncupeapp           Cupertino Package          Create a New Cupertino App.",normalizedContent:"# vscode插件快捷键\n> awesome flutter snippets\n\n\n快捷输入              扩展                         说明                                                                                                                                                                                    \nstatelessw        stateless widget           创建无状态小部件                                                                                                                                                                              \nstatefulw         stateful widget            创建有状态小部件                                                                                                                                                                              \nbuild             build method               描述窗口小部件表示的用户界面部分。                                                                                                                                                                     \ninits             initstate                  将此对象插入树中时调用。 框架将为它创建的每个 state 对象调用此方法一次。                                                                                                                                              \ndis               dispose                    永久地从树中删除此对象时调用。 当此 state 对象永远不会再次构建时，框架将调用此方法。                                                                                                                                        \nreassemble        reassemble                 在调试期间重新组装应用程序时调用，例如在热重新加载期间                                                                                                                                                           \ndidchanged        didchangedependencies      在此state对象的依赖项更改时调用                                                                                                                                                                    \ndidupdatew        didupdatewidget            called whenever the widget configuration changes.                                                                                                                                     \ncustomclipper     custom clipper             used for creating custom shapes                                                                                                                                                       \ncustompainter     custom painter             used for creating custom paint                                                                                                                                                        \nlistviewb         listview.builder           creates a scrollable, linear array of widgets that are created on demand.providing a non-null itemcount improves the ability of the listview to estimate the maximum scroll extent.   \ncustomscrollv     custom scrollview          creates a scrollview that creates custom scroll effects using slivers. if the primary argument is true, the controller must be null.                                                  \nstreambldr        stream builder             creates a new streambuilder that builds itself based on the latest snapshot of interaction with the specified stream                                                                  \nanimatedbldr      animated builder           creates an animated builder. the widget specified to child is passed to the builder                                                                                                   \nstatefulbldr      stateful builder           creates a widget that both has state and delegates its build to a callback. useful for rebuilding specific sections of the widget tree.                                               \noriantationbldr   orientation builder        creates a builder which allows for the orientation of the device to be specified and referenced                                                                                       \nlayoutbldr        layout builder             similar to the builder widget except that the framework calls the builder function at layout time and provides the parent widget's constraints.                                       \nsinglechildsv     single child scroll view   creates a scroll view with a single child                                                                                                                                             \nfuturebldr        future builder             creates a future builder. this builds itself based on the latest snapshot of interaction with a future.                                                                               \nnosm              no such method             this method is invoked when a non-existent method or property is accessed.                                                                                                            \ninheritedw        inherited widget           class used to propagate information down the widget tree.                                                                                                                             \nmounted           mounted                    whether this state object is currently in a tree.                                                                                                                                     \nsnk               sink                       a sink is the input of a stream.                                                                                                                                                      \nstrm              stream                     a source of asynchronous data events. a stream can be of any data type.                                                                                                               \ntostr             to string                  returns a string representation of this object.                                                                                                                                       \ndebugp            debug print                prints a message to the console, which you can access using the flutter tool's logs command (flutter logs).                                                                           \nimportm           material package           import material package.                                                                                                                                                              \nimportc           cupertino package          import cupertino package.                                                                                                                                                             \nmateapp           material app               create a new material app.                                                                                                                                                            \ncupeapp           cupertino package          create a new cupertino app.",charsets:{cjk:!0}},{title:"github star项目分类",frontmatter:{"mindmap-plugin":"basic"},regularPath:"/git/",relativePath:"git/README.md",key:"v-5dee0e02",path:"/git/",headers:[{level:2,title:"前端",slug:"前端",normalizedTitle:"前端",charIndex:20},{level:2,title:"后端",slug:"后端",normalizedTitle:"后端",charIndex:47}],lastUpdated:"10/15/2021, 1:59:34 AM",headersStr:"前端 后端",content:"# github star项目分类\n# 前端\n * vuejs\n * js\n * ts\n\n# 后端",normalizedContent:"# github star项目分类\n# 前端\n * vuejs\n * js\n * ts\n\n# 后端",charsets:{cjk:!0}},{title:"go",frontmatter:{},regularPath:"/go/",relativePath:"go/README.md",key:"v-204ed578",path:"/go/",lastUpdated:"6/14/2019, 7:37:55 AM",headersStr:null,content:"# go\nTIP\n\nGo 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易. Go是从2007年末由Robert Griesemer, Rob Pike, Ken Thompson主持开发，后来还加入了Ian Lance Taylor, Russ Cox等人，并最终于2009年11月开源，在2012年早些时候发布了Go 1稳定版本.现在Go的开发已经是完全开放的，并且拥有一个活跃的社区.\n\n特点\n\n * 自动垃圾回收\n * 更丰富的内置类型\n * 函数多返回值\n * 错误处理\n * 匿名函数和闭包\n * 类型和接口\n * 并发编程\n * 反射\n * 语言交互性",normalizedContent:"# go\ntip\n\ngo 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易. go是从2007年末由robert griesemer, rob pike, ken thompson主持开发，后来还加入了ian lance taylor, russ cox等人，并最终于2009年11月开源，在2012年早些时候发布了go 1稳定版本.现在go的开发已经是完全开放的，并且拥有一个活跃的社区.\n\n特点\n\n * 自动垃圾回收\n * 更丰富的内置类型\n * 函数多返回值\n * 错误处理\n * 匿名函数和闭包\n * 类型和接口\n * 并发编程\n * 反射\n * 语言交互性",charsets:{cjk:!0}},{title:"Javascript",frontmatter:{},regularPath:"/interview/2021.html",relativePath:"interview/2021.md",key:"v-1ec47aae",path:"/interview/2021.html",headers:[{level:2,title:"JavaScript 判断数组的方法",slug:"javascript-判断数组的方法",normalizedTitle:"javascript 判断数组的方法",charIndex:15},{level:2,title:"JavaScript去重方法",slug:"javascript去重方法",normalizedTitle:"javascript去重方法",charIndex:198},{level:2,title:"JavaScript的new做了什么",slug:"javascript的new做了什么",normalizedTitle:"javascript的new做了什么",charIndex:767},{level:2,title:"let const var区别",slug:"let-const-var区别",normalizedTitle:"let const var区别",charIndex:1249},{level:2,title:"this指向",slug:"this指向",normalizedTitle:"this指向",charIndex:1401},{level:2,title:"JavaScript改变this指向办法",slug:"javascript改变this指向办法",normalizedTitle:"javascript改变this指向办法",charIndex:1753},{level:2,title:"call,apply,bind区别",slug:"call-apply-bind区别",normalizedTitle:"call,apply,bind区别",charIndex:1816},{level:2,title:"箭头函数和普通函数区别",slug:"箭头函数和普通函数区别",normalizedTitle:"箭头函数和普通函数区别",charIndex:1911},{level:2,title:"JavaScript事件委托",slug:"javascript事件委托",normalizedTitle:"javascript事件委托",charIndex:2113},{level:2,title:"Promise",slug:"promise",normalizedTitle:"promise",charIndex:2225},{level:2,title:"Promise链式调用",slug:"promise链式调用",normalizedTitle:"promise链式调用",charIndex:2299},{level:2,title:"Promise相比较ajax有哪些优势",slug:"promise相比较ajax有哪些优势",normalizedTitle:"promise相比较ajax有哪些优势",charIndex:2326},{level:2,title:"JavaScript统计字符串中字符出现的次数",slug:"javascript统计字符串中字符出现的次数",normalizedTitle:"javascript统计字符串中字符出现的次数",charIndex:2958},{level:2,title:"JavaScript函数柯里化",slug:"javascript函数柯里化",normalizedTitle:"javascript函数柯里化",charIndex:3211},{level:2,title:"JavaScript防抖和节流",slug:"javascript防抖和节流",normalizedTitle:"javascript防抖和节流",charIndex:3764},{level:3,title:"防抖",slug:"防抖",normalizedTitle:"防抖",charIndex:3774},{level:3,title:"节流",slug:"节流",normalizedTitle:"节流",charIndex:3777},{level:2,title:"JavaScript宏任务和微任务",slug:"javascript宏任务和微任务",normalizedTitle:"javascript宏任务和微任务",charIndex:4191},{level:2,title:"css 垂直居中的办法",slug:"css-垂直居中的办法",normalizedTitle:"css 垂直居中的办法",charIndex:4519},{level:3,title:"仅仅居中元素宽高适用",slug:"仅仅居中元素宽高适用",normalizedTitle:"仅仅居中元素宽高适用",charIndex:4533},{level:3,title:"居中元素不定宽高",slug:"居中元素不定宽高",normalizedTitle:"居中元素不定宽高",charIndex:4614},{level:2,title:"JavaScript模块化规范有哪些",slug:"javascript模块化规范有哪些",normalizedTitle:"javascript模块化规范有哪些",charIndex:4730},{level:2,title:"Vue为什么只有一个根元素",slug:"vue为什么只有一个根元素",normalizedTitle:"vue为什么只有一个根元素",charIndex:4799},{level:3,title:"为什么抽象出来的 dom 树只有一个跟节点",slug:"为什么抽象出来的-dom-树只有一个跟节点",normalizedTitle:"为什么抽象出来的 dom 树只有一个跟节点",charIndex:4836},{level:2,title:"vue实现深度监听",slug:"vue实现深度监听",normalizedTitle:"vue实现深度监听",charIndex:5018},{level:2,title:"浏览器如何渲染页面",slug:"浏览器如何渲染页面",normalizedTitle:"浏览器如何渲染页面",charIndex:5036},{level:2,title:"浏览器重绘和回流",slug:"浏览器重绘和回流",normalizedTitle:"浏览器重绘和回流",charIndex:5273},{level:3,title:"回流",slug:"回流",normalizedTitle:"回流",charIndex:5210},{level:2,title:"重绘",slug:"重绘",normalizedTitle:"重绘",charIndex:5186},{level:2,title:"如何避免",slug:"如何避免",normalizedTitle:"如何避免",charIndex:5876},{level:3,title:"CSS",slug:"css-2",normalizedTitle:"css",charIndex:4513},{level:3,title:"Javascript",slug:"javascript-2",normalizedTitle:"javascript",charIndex:2},{level:2,title:"Tcp 过程",slug:"tcp-过程",normalizedTitle:"tcp 过程",charIndex:6267},{level:2,title:"为什么连接的时候是三次握手，关闭的时候却是四次握手",slug:"为什么连接的时候是三次握手-关闭的时候却是四次握手",normalizedTitle:"为什么连接的时候是三次握手，关闭的时候却是四次握手",charIndex:6575},{level:2,title:"http状态码",slug:"http状态码",normalizedTitle:"http状态码",charIndex:6811},{level:2,title:"http与https",slug:"http与https",normalizedTitle:"http与https",charIndex:7020},{level:2,title:"webpack 常用插件",slug:"webpack-常用插件",normalizedTitle:"webpack 常用插件",charIndex:7148},{level:2,title:"webpack做过哪些优化",slug:"webpack做过哪些优化",normalizedTitle:"webpack做过哪些优化",charIndex:7389},{level:2,title:"webpack和rollup区别",slug:"webpack和rollup区别",normalizedTitle:"webpack和rollup区别",charIndex:7708},{level:2,title:"webpack插件是如何实现的",slug:"webpack插件是如何实现的",normalizedTitle:"webpack插件是如何实现的",charIndex:7891}],lastUpdated:"3/8/2021, 2:46:06 AM",headersStr:"JavaScript 判断数组的方法 JavaScript去重方法 JavaScript的new做了什么 let const var区别 this指向 JavaScript改变this指向办法 call,apply,bind区别 箭头函数和普通函数区别 JavaScript事件委托 Promise Promise链式调用 Promise相比较ajax有哪些优势 JavaScript统计字符串中字符出现的次数 JavaScript函数柯里化 JavaScript防抖和节流 防抖 节流 JavaScript宏任务和微任务 css 垂直居中的办法 仅仅居中元素宽高适用 居中元素不定宽高 JavaScript模块化规范有哪些 Vue为什么只有一个根元素 为什么抽象出来的 dom 树只有一个跟节点 vue实现深度监听 浏览器如何渲染页面 浏览器重绘和回流 回流 重绘 如何避免 CSS Javascript Tcp 过程 为什么连接的时候是三次握手，关闭的时候却是四次握手 http状态码 http与https webpack 常用插件 webpack做过哪些优化 webpack和rollup区别 webpack插件是如何实现的",content:'# Javascript\n# JavaScript 判断数组的方法\n * 通过 Object.prototype.toString.call()做判断\n * obj.__proto__ === Array.prototype;\n * Array.isArray()\n * obj instanceof Array\n * Array.prototype.isPrototypeOf(obj)\n\n# JavaScript去重方法\n * 1.遍历数组法\n\n> 新建一个数组,遍历要去重的数组,当值不在新数组的时候(indexOf 为-1)就加入该新数组\n\n\n * 2.数组下标判断法\n\n> 如果当前数组的第 i 项在当前数组中第一次出现的位置不是 i,表示第 i 项是重复的.忽略掉,否则存入结果数组\n\n\n * 3.排序后相邻去除法\n\n> 给传入的数组排序.排序后相同的值会相邻.然后遍历排序后的数组,新数组之加入不与前一值重复的值\n\n\n * 4.优化遍历数组法\n\n> 双层循环,外层循环表示从 0 到 arr.length,内层循环表示从 i+1 到 arr.length\n\n\n * 5.ES6 中 set 方法\n * 6.利用 ES6 中 sort\n\n> 先排序,然后根据排序后的结果进行遍历及其相邻的元素对比\n\n\n * 7.利用 includes\n\n> 检测数组中是否存在某个值\n\n\n * 8.利用 for 嵌套 for,然后 splice 去重\n * 9.利用 hasOwnProperty\n\n> 利用 hasOwnProperty 哦安短是否存在对象属性\n\n\n * 10.利用递归去重\n * 11.利用 Map 数据结构去重\n * 12.利用 reduce+includes\n * 13.[...new Set(arr)]\n\n# JavaScript的new做了什么\nfunction Person() {\n  this.name = name;\n\n  this.age = age;\n\n  this.sex = sex;\n\n  this.sayName = function () {\n    return this.name;\n  };\n}\n\nvar person = new Person("tom", 21, "famle");\n\nconsole.log(person.name);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 创建一个新的对象\n * 将新的对象的__proto__指向构造函数的 prototype 对象\n * 将构造函数的作用域赋值给新的对象(也就是 this 指向新对象)\n * 执行构造函数中的代码(为这个新对象添加属性)\n * 返回新的对象\n\nvar Obj = {};\n\n\nObj._proto_ =  Person.prototype();\n\n\nPerson.call(Obj);\n\n\n1\n2\n3\n4\n5\n6\n7\n# let const var区别\n * var声明的变量挂载在window上,而let const不会\n * var声明的变量存在变量提升,let和const不存在变量提升\n * let和const声明形成块作用域\n * 同一作用域下let和const不能声明同名变量,而var可以\n * 暂存死区\n\n# this指向\n1：this 永远指向一个对象；\n\n2：this 的指向完全取决于函数调用的位置；\n\nclass Test {\n  constructor() {}\n\n  fun = () => {\n    console.log(this);\n  };\n\n  fun1() {\n    console.log(this);\n  }\n}\n\nlet test = new Test();\n\ntest.fun(); //Test\n\ntest.fun.call(this); //Test\n\ntest.fun1(); //Test\n\ntest.fun1.call(this); //window\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# JavaScript改变this指向办法\n * call()\n * apply()\n * bind()\n * that\n\n# call,apply,bind区别\nbind 返回对应函数,便于稍后调用;apply 和 call 则是立即调用\n\n除此外,在 ES6 的箭头函数下,call 和 apply 将失效\n\n# 箭头函数和普通函数区别\n * 箭头函数是匿名函数,不能作为构造函数,不能使用 new\n * 箭头函数不能绑定 arguments,取而代之用 rest 参数解决\n * 箭头函数没有原型属性\n * 箭头函数的 this 永远指向其上下文的 this,没有改变其指向,普通函数的 this 指向调用它的对象\n * 箭头函数不绑定 this,会捕获其所在的上下文的 this,作为自己的 this 的值\n\n# JavaScript事件委托\n事件委托就是利用冒泡的原理将事件加到父元素或者祖先元素上,触发执行效果\n\n> 优点\n\n\n * 可以提高 js 性能\n * 可以动态添加 dom 元素,不需要因为元素的变动而修改事件的绑定\n\n# Promise\n * pending：准备状态\n * fulfilled：成功\n * rejected：失败\n\n> 异步问题同步化解决方案\n\n\n# Promise链式调用\nreturn this\n\n# Promise相比较ajax有哪些优势\n解决了回调地狱的写法\n\n> 糟糕\n\n\n$.ajax({\n\n    url:"xxxx"\n\n    success:function(){\n\n        $.ajax({\n\n            url:"xxxx",\n\n            success:function(){\n\n                setTimeout(function(){},300)\n\n            }\n\n        })\n\n    }\n\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n> 推荐\n\n\nvar p=new Promise((resolve, reject) => {\n\n    $.ajax({\n\n        url:"xxxx",\n\n        success:function(res){\n\n            resolve(res)\n\n        }\n\n    })\n\n})\n\np.then(res=>{\n\n    return new Promise.resolve(2)\n\n}).then(res=>{\n\n    console.log(res);\n\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# JavaScript统计字符串中字符出现的次数\nvar arr = "hello world";\n\nvar obj = {};\n\nfor (var i = 0; i < arr.length; i++) {\n  var key = arr[i];\n\n  if (obj[key]) {\n    obj[key]++;\n  } else {\n    obj[key] = 1;\n  }\n}\n\nconsole.log(obj);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# JavaScript函数柯里化\n> 柯里化（Currying）是把接受多个参数的函数变换成接受一个单一参数(最初函数的第一个参数)的函数，并且返回接受余下的参数且返回结果的新函数的技术。通俗点说就是将一个函数拆分成多个函数，是固定部分参数，返回一个接受剩余参数的函数，也称为部分计算函数，目的是为了缩小适用范围，创建一个针对性更强的函数\n\n\n// 实现一个简单的加法\n\nfunction add(a, b) {\n  return a + b;\n}\n\nadd(1, 2);\n\n// 用柯里化实现\n\nconst currying = (x) => {\n  return (y) => {\n    return x + y;\n  };\n};\n\nconsole.log(currying(1)(2)); // 3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n 1. 优点：\n    \n    1）可以实现参数复用\n    \n    2）实现延迟执行；先收集所有参数，最后执行\n    \n    3）实现功能细化\n    \n    \n 2. 缺点：\n    \n     1. 实现出现闭包，占用大量内存，产生性能问题\n     2. 递归效率低\n    \n    \n\n# JavaScript防抖和节流\n# 防抖\n# 定义\n在事件被触发后 n 秒后再执行回调函数,如果这个 n 秒内又被触发,则重新计时\n\n# 应用场景\n 1. 用户输入框连续输入一串字符串后,只会在输入完成后去执行最后一次查询的 ajax 请求,这样可以有效减少请求次数,节约请求资源\n 2. window 的 resize,scroll 时间,不断的调整浏览器窗口大小,或者滚动时触发对应时间,防抖让其只触发一次\n\n# 节流\n# 定义\n规定一个单位时间,在这个单位时间内,只能有一次触发时间的回调函数执行,如果同一单位时间内某事件被触发多次,只能一次能生效\n\n# 应用场景\n 1. 鼠标连续不断的触发某事件,只能单位时间内只触发一次\n 2. 在页面的无限加载场景下,需要用户在滚动页面是,每隔一段时间发一次 ajax 请求,而不是在用户停下滚动页面操作时才去请求数据\n 3. 监听滚动事件,比如是否滑到底部自动加载更多,用 throttle 来判断\n\n# JavaScript宏任务和微任务\nsetTimeout(() => {\n  console.log(1);\n}, 0);\n\nconsole.log(2);\n\nnew Promise((resolve, reject) => {\n  console.log(3);\n\n  resolve();\n}).then((res) => {\n  console.log(4);\n});\n\nsetTimeout(() => {\n  console.log(5);\n}, 0);\n\nconsole.log(6);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n答案\n\n2 3 6 4 1 5\n\n\n1\n# CSS\n# css 垂直居中的办法\n# 仅仅居中元素宽高适用\n * absolute +负 margin\n * absolute + margin auto\n * absolute + calc\n\n# 居中元素不定宽高\n * absolute + transform\n * line-height+text-align\n * writing-mode\n * table\n * css-table\n * flex\n * grid\n\n# JavaScript模块化规范有哪些\n * CommonJs\n * AMD\n * CMD\n * ES6 Modules\n\n# Vue\n# Vue为什么只有一个根元素\n抽象出来的 dom 树只能有一个根节点\n\n# 为什么抽象出来的 dom 树只有一个跟节点\n * 从查找和遍历的角度来说,如果有多个根,那么我们的查找和遍历的效率会很低\n * 如果一个树有多个根,说明可以优化,肯定会有一个节点是可以访问到所有的节点,那么这个节点就会成为新的根节点\n * 如果一个组件有多个入口或者多个根,那不就意味你的组件还可以进一步拆分成多个组件,进一步组件优化,降低代码之间耦合程度\n\n# vue实现深度监听\n# 浏览器\n# 浏览器如何渲染页面\n * 1.根据 html 文件构建 dom 树和 cssom 树,构建 dom 树期间,如果遇到 js,阻塞了 dom 树以及 cssom 树的构建,优先加载 js 文件,再继续构建 dom 树以及 cssom 树\n * 2.构建渲染树(Render Tree)\n * 3.页面的重绘(repaint)与重排(reflow 也称回流),页面渲染完成后,若有 js 操作了 dom,根据 js 对 dom 操作的动作大小,浏览器对页面进行重绘或回流\n\n# 浏览器重绘和回流\n# 回流\n> 当 Render Tree 中的部分或全部元素的尺寸，结构或者处罚某些属性时，浏览器会重新计算并渲染页面，称为回流。此时浏览器需要重新进行计算，计算后还需要重新页面布局，因此是较重的操作。\n\n\n会导致回流的操作有:\n\n * 页面初次渲染\n * 浏览器窗口发生变化\n * 元素尺寸,位置,内容发生变化\n * 元素字体大小变化\n * 添加或者删除可见的 dom 元素\n * 激活 css 伪类\n * 查询某些属性或者调用某些方法\n\nclientWidth, clientHeight, clientTop, clientLeft\n\noffsetWidth, offsetHeight, offsetTop, offsetLeft\n\nscrollWidth, scrollHeight, scrollTop, scrollLeft\n\nscrollIntorView(), scrollInToViewIfNeeded()\n\ngetComputedStyle()\n\ngetBoundingClientRect()\n\nscrollTop\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 重绘\n> 当元素的样式改变不影响布局时,浏览器将使用重绘对元素进行更新,此时由于只需要对 UI 层面重新绘制,因为损耗较少\n\n\n回流一定会导致重绘,但是重绘不一定导致回流\n\n# 如何避免\n# CSS\n * 避免使用 table 布局\n * 尽可能在 dom 树的最末端改变 class\n * 避免设置多层内联样式\n * 避免 CSS 表达式\n\n# Javascript\n * 避免频繁的操作样式,最好一次性写好 style 属性,或者将样式定义为 class,并且一次性更改 class\n * 避免频繁操作 dom,创建一个 documentFragment,这上面应有所有的 dom 操作,最后把他添加到文档中\n * 也可以设置 display:none,操作结束后再把它显示出来,因为 display 属性为 none 的元素上进行 dom 操作不会引起重绘和回流\n * 避免频繁读取引发回流和重绘的属性,如果要多次使用,建议先把他缓存起来\n * 对具有复杂动画的元素使用绝对定位,使他脱离文档流,否则会引起父元素及其后续元素频繁回流\n\n# http\n# Tcp 过程\n * 第一次握手: 客户端发送一个 TCP 的 SYN 标志位置 1 的包指明客户打算连接的服务器的端口，以及初始序号 X,保存在包头的序列号(Sequence Number)字段里。\n * 第二次握手: 服务器发回确认包(ACK)应答。即 SYN 标志位和 ACK 标志位均为 1 同时，将确认序号(Acknowledgement Number)设置为客户的 I S N 加 1 以.即 X+1。\n * 第三次握手. 客户端再次发送确认包(ACK) SYN 标志位为 0,ACK 标志位为 1.并且把服务器发来 ACK 的序号字段+1,放在确定字段中发送给对方.并且在数据段放写 ISN 的+\n\n# 为什么连接的时候是三次握手，关闭的时候却是四次握手\n因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，"你发的FIN报文我收到了"。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。\n\n# http状态码\n状态码   分类描述                      \n1*    信息，服务器收到请求，需要请求者继续执行操作    \n2*    成功，操作被成功接收并处理             \n3*    重定向，需要进一步的操作以完成请求         \n4*    客户端错误，请求包含语法错误或无法完成请求     \n5*    服务器错误，服务器在处理请求的过程中发生了错误   \n\n# http与https\nHTTP协议通过客户端请求--\x3e服务端响应的方式进行通信。但是HTTP有一个致命的缺点就是：不够安全。\n\nHTTP协议的信息传输完全以明文的方式，不做加密，相当于在网络上裸奔。HTTPS加密方式:非对称秘钥\n\n# webpack\n# webpack 常用插件\n * html-webpack-plugin(html 文件生成插件)\n * imagemin-webpack-plugin(图片压缩插件)\n * clean-webpack-plugin(清除空文件夹插件)\n * min-css-extract-plugin(css 公共代码提取)\n * copy-webpack-plugin(文件复制插件)\n * happyPack(多线程打包插件)(不维护)\n * thread-loader(多线程打包)\n\n# webpack做过哪些优化\n 1. 优化 webpack 的构建速度\n\n * 使用高版本 webpack\n * 多线程,多实例构建\n * 缩小打包作用域\n * 充分利用缓存提升二次构建的速度\n * DLL 分包处理\n\n 2. 优化webpack打包的体积\n\n * 压缩代码\n * 提取公共资源\n * Tree Shaking\n * Scope hoisiting> 构建后代码会存在大量闭包,造成体积大,运行时代码创建的函数作用域变多,内存开销大,Scope hoisiting将所有模块按照引用顺序放在一个函数作用域内,然后适当的重命名一些变量以防止变量名冲突\n   \n   \n   \n * 图片压缩\n * 动态Polyfill\n\n# webpack和rollup区别\n * webpack拆分代码,按需加载\n * rollup 所有资源放在同一个地方，一次性加载，利用 tree-shake 特性来剔除项目中未使用的代码，减少冗余，但是webpack2已经逐渐支持tree-shaking\n * webpack ES2015模块打包支持\n * 应用使用webpack,对于类库使用rollup\n\n# webpack插件是如何实现的\nwebpack 本质是一种事件流机制,核心模块:tapable(Sync+Async)Hooks构造出=>Compiler(编译)+Compilation(创建bundles)\n\n * Compiler 对象代表了完整的 webpack 环境配置,这个对象在启动 webpack 时被一次性创建,并配置好所有可操作的设置,包括option,loader和plugin,当在 webpack 环境中应用一个插件时,插件将受到 compiler 对象的引用,可以使用它来访问 webpack 的主环境\n * Compilation 对象代表了一次资源版本的构建,当 webpack 开发环境中间时,每当检测到一个文件变化,就会创建新的 compilation,从而生成一组新的编译资源,一个 compilation 对象表现了当前的模块资源,编译生成的资源,变化的文件以及被跟踪依赖的状态信息.compilation 对象也提供了很多关键时机的回调,以供插件做自定义处理时选择使用\n * 创建一个插件函数,在其 prototype 上定一个 apply 方法,指定一个绑定到 webpack 自身事件钩子\n * 函数内,处理 webpack 内部示例的特定数据\n * 处理完成后,调用 webpack 提供的回调',normalizedContent:'# javascript\n# javascript 判断数组的方法\n * 通过 object.prototype.tostring.call()做判断\n * obj.__proto__ === array.prototype;\n * array.isarray()\n * obj instanceof array\n * array.prototype.isprototypeof(obj)\n\n# javascript去重方法\n * 1.遍历数组法\n\n> 新建一个数组,遍历要去重的数组,当值不在新数组的时候(indexof 为-1)就加入该新数组\n\n\n * 2.数组下标判断法\n\n> 如果当前数组的第 i 项在当前数组中第一次出现的位置不是 i,表示第 i 项是重复的.忽略掉,否则存入结果数组\n\n\n * 3.排序后相邻去除法\n\n> 给传入的数组排序.排序后相同的值会相邻.然后遍历排序后的数组,新数组之加入不与前一值重复的值\n\n\n * 4.优化遍历数组法\n\n> 双层循环,外层循环表示从 0 到 arr.length,内层循环表示从 i+1 到 arr.length\n\n\n * 5.es6 中 set 方法\n * 6.利用 es6 中 sort\n\n> 先排序,然后根据排序后的结果进行遍历及其相邻的元素对比\n\n\n * 7.利用 includes\n\n> 检测数组中是否存在某个值\n\n\n * 8.利用 for 嵌套 for,然后 splice 去重\n * 9.利用 hasownproperty\n\n> 利用 hasownproperty 哦安短是否存在对象属性\n\n\n * 10.利用递归去重\n * 11.利用 map 数据结构去重\n * 12.利用 reduce+includes\n * 13.[...new set(arr)]\n\n# javascript的new做了什么\nfunction person() {\n  this.name = name;\n\n  this.age = age;\n\n  this.sex = sex;\n\n  this.sayname = function () {\n    return this.name;\n  };\n}\n\nvar person = new person("tom", 21, "famle");\n\nconsole.log(person.name);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 创建一个新的对象\n * 将新的对象的__proto__指向构造函数的 prototype 对象\n * 将构造函数的作用域赋值给新的对象(也就是 this 指向新对象)\n * 执行构造函数中的代码(为这个新对象添加属性)\n * 返回新的对象\n\nvar obj = {};\n\n\nobj._proto_ =  person.prototype();\n\n\nperson.call(obj);\n\n\n1\n2\n3\n4\n5\n6\n7\n# let const var区别\n * var声明的变量挂载在window上,而let const不会\n * var声明的变量存在变量提升,let和const不存在变量提升\n * let和const声明形成块作用域\n * 同一作用域下let和const不能声明同名变量,而var可以\n * 暂存死区\n\n# this指向\n1：this 永远指向一个对象；\n\n2：this 的指向完全取决于函数调用的位置；\n\nclass test {\n  constructor() {}\n\n  fun = () => {\n    console.log(this);\n  };\n\n  fun1() {\n    console.log(this);\n  }\n}\n\nlet test = new test();\n\ntest.fun(); //test\n\ntest.fun.call(this); //test\n\ntest.fun1(); //test\n\ntest.fun1.call(this); //window\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# javascript改变this指向办法\n * call()\n * apply()\n * bind()\n * that\n\n# call,apply,bind区别\nbind 返回对应函数,便于稍后调用;apply 和 call 则是立即调用\n\n除此外,在 es6 的箭头函数下,call 和 apply 将失效\n\n# 箭头函数和普通函数区别\n * 箭头函数是匿名函数,不能作为构造函数,不能使用 new\n * 箭头函数不能绑定 arguments,取而代之用 rest 参数解决\n * 箭头函数没有原型属性\n * 箭头函数的 this 永远指向其上下文的 this,没有改变其指向,普通函数的 this 指向调用它的对象\n * 箭头函数不绑定 this,会捕获其所在的上下文的 this,作为自己的 this 的值\n\n# javascript事件委托\n事件委托就是利用冒泡的原理将事件加到父元素或者祖先元素上,触发执行效果\n\n> 优点\n\n\n * 可以提高 js 性能\n * 可以动态添加 dom 元素,不需要因为元素的变动而修改事件的绑定\n\n# promise\n * pending：准备状态\n * fulfilled：成功\n * rejected：失败\n\n> 异步问题同步化解决方案\n\n\n# promise链式调用\nreturn this\n\n# promise相比较ajax有哪些优势\n解决了回调地狱的写法\n\n> 糟糕\n\n\n$.ajax({\n\n    url:"xxxx"\n\n    success:function(){\n\n        $.ajax({\n\n            url:"xxxx",\n\n            success:function(){\n\n                settimeout(function(){},300)\n\n            }\n\n        })\n\n    }\n\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n> 推荐\n\n\nvar p=new promise((resolve, reject) => {\n\n    $.ajax({\n\n        url:"xxxx",\n\n        success:function(res){\n\n            resolve(res)\n\n        }\n\n    })\n\n})\n\np.then(res=>{\n\n    return new promise.resolve(2)\n\n}).then(res=>{\n\n    console.log(res);\n\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# javascript统计字符串中字符出现的次数\nvar arr = "hello world";\n\nvar obj = {};\n\nfor (var i = 0; i < arr.length; i++) {\n  var key = arr[i];\n\n  if (obj[key]) {\n    obj[key]++;\n  } else {\n    obj[key] = 1;\n  }\n}\n\nconsole.log(obj);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# javascript函数柯里化\n> 柯里化（currying）是把接受多个参数的函数变换成接受一个单一参数(最初函数的第一个参数)的函数，并且返回接受余下的参数且返回结果的新函数的技术。通俗点说就是将一个函数拆分成多个函数，是固定部分参数，返回一个接受剩余参数的函数，也称为部分计算函数，目的是为了缩小适用范围，创建一个针对性更强的函数\n\n\n// 实现一个简单的加法\n\nfunction add(a, b) {\n  return a + b;\n}\n\nadd(1, 2);\n\n// 用柯里化实现\n\nconst currying = (x) => {\n  return (y) => {\n    return x + y;\n  };\n};\n\nconsole.log(currying(1)(2)); // 3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n 1. 优点：\n    \n    1）可以实现参数复用\n    \n    2）实现延迟执行；先收集所有参数，最后执行\n    \n    3）实现功能细化\n    \n    \n 2. 缺点：\n    \n     1. 实现出现闭包，占用大量内存，产生性能问题\n     2. 递归效率低\n    \n    \n\n# javascript防抖和节流\n# 防抖\n# 定义\n在事件被触发后 n 秒后再执行回调函数,如果这个 n 秒内又被触发,则重新计时\n\n# 应用场景\n 1. 用户输入框连续输入一串字符串后,只会在输入完成后去执行最后一次查询的 ajax 请求,这样可以有效减少请求次数,节约请求资源\n 2. window 的 resize,scroll 时间,不断的调整浏览器窗口大小,或者滚动时触发对应时间,防抖让其只触发一次\n\n# 节流\n# 定义\n规定一个单位时间,在这个单位时间内,只能有一次触发时间的回调函数执行,如果同一单位时间内某事件被触发多次,只能一次能生效\n\n# 应用场景\n 1. 鼠标连续不断的触发某事件,只能单位时间内只触发一次\n 2. 在页面的无限加载场景下,需要用户在滚动页面是,每隔一段时间发一次 ajax 请求,而不是在用户停下滚动页面操作时才去请求数据\n 3. 监听滚动事件,比如是否滑到底部自动加载更多,用 throttle 来判断\n\n# javascript宏任务和微任务\nsettimeout(() => {\n  console.log(1);\n}, 0);\n\nconsole.log(2);\n\nnew promise((resolve, reject) => {\n  console.log(3);\n\n  resolve();\n}).then((res) => {\n  console.log(4);\n});\n\nsettimeout(() => {\n  console.log(5);\n}, 0);\n\nconsole.log(6);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n答案\n\n2 3 6 4 1 5\n\n\n1\n# css\n# css 垂直居中的办法\n# 仅仅居中元素宽高适用\n * absolute +负 margin\n * absolute + margin auto\n * absolute + calc\n\n# 居中元素不定宽高\n * absolute + transform\n * line-height+text-align\n * writing-mode\n * table\n * css-table\n * flex\n * grid\n\n# javascript模块化规范有哪些\n * commonjs\n * amd\n * cmd\n * es6 modules\n\n# vue\n# vue为什么只有一个根元素\n抽象出来的 dom 树只能有一个根节点\n\n# 为什么抽象出来的 dom 树只有一个跟节点\n * 从查找和遍历的角度来说,如果有多个根,那么我们的查找和遍历的效率会很低\n * 如果一个树有多个根,说明可以优化,肯定会有一个节点是可以访问到所有的节点,那么这个节点就会成为新的根节点\n * 如果一个组件有多个入口或者多个根,那不就意味你的组件还可以进一步拆分成多个组件,进一步组件优化,降低代码之间耦合程度\n\n# vue实现深度监听\n# 浏览器\n# 浏览器如何渲染页面\n * 1.根据 html 文件构建 dom 树和 cssom 树,构建 dom 树期间,如果遇到 js,阻塞了 dom 树以及 cssom 树的构建,优先加载 js 文件,再继续构建 dom 树以及 cssom 树\n * 2.构建渲染树(render tree)\n * 3.页面的重绘(repaint)与重排(reflow 也称回流),页面渲染完成后,若有 js 操作了 dom,根据 js 对 dom 操作的动作大小,浏览器对页面进行重绘或回流\n\n# 浏览器重绘和回流\n# 回流\n> 当 render tree 中的部分或全部元素的尺寸，结构或者处罚某些属性时，浏览器会重新计算并渲染页面，称为回流。此时浏览器需要重新进行计算，计算后还需要重新页面布局，因此是较重的操作。\n\n\n会导致回流的操作有:\n\n * 页面初次渲染\n * 浏览器窗口发生变化\n * 元素尺寸,位置,内容发生变化\n * 元素字体大小变化\n * 添加或者删除可见的 dom 元素\n * 激活 css 伪类\n * 查询某些属性或者调用某些方法\n\nclientwidth, clientheight, clienttop, clientleft\n\noffsetwidth, offsetheight, offsettop, offsetleft\n\nscrollwidth, scrollheight, scrolltop, scrollleft\n\nscrollintorview(), scrollintoviewifneeded()\n\ngetcomputedstyle()\n\ngetboundingclientrect()\n\nscrolltop\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 重绘\n> 当元素的样式改变不影响布局时,浏览器将使用重绘对元素进行更新,此时由于只需要对 ui 层面重新绘制,因为损耗较少\n\n\n回流一定会导致重绘,但是重绘不一定导致回流\n\n# 如何避免\n# css\n * 避免使用 table 布局\n * 尽可能在 dom 树的最末端改变 class\n * 避免设置多层内联样式\n * 避免 css 表达式\n\n# javascript\n * 避免频繁的操作样式,最好一次性写好 style 属性,或者将样式定义为 class,并且一次性更改 class\n * 避免频繁操作 dom,创建一个 documentfragment,这上面应有所有的 dom 操作,最后把他添加到文档中\n * 也可以设置 display:none,操作结束后再把它显示出来,因为 display 属性为 none 的元素上进行 dom 操作不会引起重绘和回流\n * 避免频繁读取引发回流和重绘的属性,如果要多次使用,建议先把他缓存起来\n * 对具有复杂动画的元素使用绝对定位,使他脱离文档流,否则会引起父元素及其后续元素频繁回流\n\n# http\n# tcp 过程\n * 第一次握手: 客户端发送一个 tcp 的 syn 标志位置 1 的包指明客户打算连接的服务器的端口，以及初始序号 x,保存在包头的序列号(sequence number)字段里。\n * 第二次握手: 服务器发回确认包(ack)应答。即 syn 标志位和 ack 标志位均为 1 同时，将确认序号(acknowledgement number)设置为客户的 i s n 加 1 以.即 x+1。\n * 第三次握手. 客户端再次发送确认包(ack) syn 标志位为 0,ack 标志位为 1.并且把服务器发来 ack 的序号字段+1,放在确定字段中发送给对方.并且在数据段放写 isn 的+\n\n# 为什么连接的时候是三次握手，关闭的时候却是四次握手\n因为当server端收到client端的syn连接请求报文后，可以直接发送syn+ack报文。其中ack报文是用来应答的，syn报文是用来同步的。但是关闭连接时，当server端收到fin报文时，很可能并不会立即关闭socket，所以只能先回复一个ack报文，告诉client端，"你发的fin报文我收到了"。只有等到我server端所有的报文都发送完了，我才能发送fin报文，因此不能一起发送。故需要四步握手。\n\n# http状态码\n状态码   分类描述                      \n1*    信息，服务器收到请求，需要请求者继续执行操作    \n2*    成功，操作被成功接收并处理             \n3*    重定向，需要进一步的操作以完成请求         \n4*    客户端错误，请求包含语法错误或无法完成请求     \n5*    服务器错误，服务器在处理请求的过程中发生了错误   \n\n# http与https\nhttp协议通过客户端请求--\x3e服务端响应的方式进行通信。但是http有一个致命的缺点就是：不够安全。\n\nhttp协议的信息传输完全以明文的方式，不做加密，相当于在网络上裸奔。https加密方式:非对称秘钥\n\n# webpack\n# webpack 常用插件\n * html-webpack-plugin(html 文件生成插件)\n * imagemin-webpack-plugin(图片压缩插件)\n * clean-webpack-plugin(清除空文件夹插件)\n * min-css-extract-plugin(css 公共代码提取)\n * copy-webpack-plugin(文件复制插件)\n * happypack(多线程打包插件)(不维护)\n * thread-loader(多线程打包)\n\n# webpack做过哪些优化\n 1. 优化 webpack 的构建速度\n\n * 使用高版本 webpack\n * 多线程,多实例构建\n * 缩小打包作用域\n * 充分利用缓存提升二次构建的速度\n * dll 分包处理\n\n 2. 优化webpack打包的体积\n\n * 压缩代码\n * 提取公共资源\n * tree shaking\n * scope hoisiting> 构建后代码会存在大量闭包,造成体积大,运行时代码创建的函数作用域变多,内存开销大,scope hoisiting将所有模块按照引用顺序放在一个函数作用域内,然后适当的重命名一些变量以防止变量名冲突\n   \n   \n   \n * 图片压缩\n * 动态polyfill\n\n# webpack和rollup区别\n * webpack拆分代码,按需加载\n * rollup 所有资源放在同一个地方，一次性加载，利用 tree-shake 特性来剔除项目中未使用的代码，减少冗余，但是webpack2已经逐渐支持tree-shaking\n * webpack es2015模块打包支持\n * 应用使用webpack,对于类库使用rollup\n\n# webpack插件是如何实现的\nwebpack 本质是一种事件流机制,核心模块:tapable(sync+async)hooks构造出=>compiler(编译)+compilation(创建bundles)\n\n * compiler 对象代表了完整的 webpack 环境配置,这个对象在启动 webpack 时被一次性创建,并配置好所有可操作的设置,包括option,loader和plugin,当在 webpack 环境中应用一个插件时,插件将受到 compiler 对象的引用,可以使用它来访问 webpack 的主环境\n * compilation 对象代表了一次资源版本的构建,当 webpack 开发环境中间时,每当检测到一个文件变化,就会创建新的 compilation,从而生成一组新的编译资源,一个 compilation 对象表现了当前的模块资源,编译生成的资源,变化的文件以及被跟踪依赖的状态信息.compilation 对象也提供了很多关键时机的回调,以供插件做自定义处理时选择使用\n * 创建一个插件函数,在其 prototype 上定一个 apply 方法,指定一个绑定到 webpack 自身事件钩子\n * 函数内,处理 webpack 内部示例的特定数据\n * 处理完成后,调用 webpack 提供的回调',charsets:{cjk:!0}},{title:"前端面试",frontmatter:{},regularPath:"/interview/",relativePath:"interview/README.md",key:"v-2c99cfb8",path:"/interview/",lastUpdated:"5/31/2019, 8:56:06 AM",headersStr:null,content:"# 前端面试\nTIP\n\n这里面收集了一些常见的前端面试题!希望对大家有帮助! 祝大家面试顺利!",normalizedContent:"# 前端面试\ntip\n\n这里面收集了一些常见的前端面试题!希望对大家有帮助! 祝大家面试顺利!",charsets:{cjk:!0}},{title:"浏览器缓存",frontmatter:{},regularPath:"/interview/catch.html",relativePath:"interview/catch.md",key:"v-3b4c0f33",path:"/interview/catch.html",headers:[{level:2,title:"缓存分类",slug:"缓存分类",normalizedTitle:"缓存分类",charIndex:297},{level:2,title:"浏览器缓存",slug:"浏览器缓存-2",normalizedTitle:"浏览器缓存",charIndex:2},{level:3,title:"一、 Cache-Control（重要策略）：",slug:"一、-cache-control-重要策略",normalizedTitle:"一、 cache-control（重要策略）：",charIndex:742},{level:3,title:"二、Expires",slug:"二、expires",normalizedTitle:"二、expires",charIndex:1649},{level:3,title:"三、Last-modified",slug:"三、last-modified",normalizedTitle:"三、last-modified",charIndex:1845},{level:3,title:"四、ETag",slug:"四、etag",normalizedTitle:"四、etag",charIndex:2088},{level:3,title:"使用缓存流程",slug:"使用缓存流程",normalizedTitle:"使用缓存流程",charIndex:2357},{level:3,title:"cache-control指令使用",slug:"cache-control指令使用",normalizedTitle:"cache-control指令使用",charIndex:3548},{level:3,title:"另外的缓存方式：LocalStorage和sessionStorage",slug:"另外的缓存方式-localstorage和sessionstorage",normalizedTitle:"另外的缓存方式：localstorage和sessionstorage",charIndex:3608},{level:2,title:"如何启用Web缓存",slug:"如何启用web缓存",normalizedTitle:"如何启用web缓存",charIndex:4076},{level:3,title:"启用缓存",slug:"启用缓存",normalizedTitle:"启用缓存",charIndex:4088},{level:3,title:"注意点",slug:"注意点",normalizedTitle:"注意点",charIndex:4463}],lastUpdated:"6/24/2019, 2:48:23 PM",headersStr:"缓存分类 浏览器缓存 一、 Cache-Control（重要策略）： 二、Expires 三、Last-modified 四、ETag 使用缓存流程 cache-control指令使用 另外的缓存方式：LocalStorage和sessionStorage 如何启用Web缓存 启用缓存 注意点",content:"# 浏览器缓存\n以前总是傻傻的分不清缓存和cookie,误认为cookie就是指浏览器缓存.还有 cookie localStorage`` sessionStorage 缓存 四者的关系也没有搞明白.经过一番折腾,终于从网上找到了一些关于缓存的知识.今天这篇文章就先介绍一下缓存吧.\n\n在前端开发中,性能一直都是被大家所重视的一点,然而判断一个网站的性能最直观的就是看网页打开的速度.其中提高网页反应速度的一个方式就是使用缓存.一个优秀的缓存策略可以缩短网页请求资源的距离,减少延迟,并且由于缓存文件可以重复利用,还可以减少带宽,降低网络负荷.那么下面我们就来看看服务器端缓存的原理.\n\n# 缓存分类\nweb缓存分为很多种,比如数据库缓存、代理服务器缓存、还有我们熟悉的CDN缓存,以及浏览器缓存.对于太多文字的阅读其实我是拒绝的,于是就画了个图来解释下. 浏览器通过代理服务器向源服务器发起请求的原理如下图 web缓存分为很多种,比如数据库缓存、代理服务器缓存、还有我们熟悉的CDN缓存,以及浏览器缓存.对于太多文字的阅读其实我是拒绝的,于是就画了个图来解释下. 浏览器通过代理服务器向源服务器发起请求的原理如下图:\n\n\n\n浏览器先向代理服务器发起Web请求,再将请求转发到源服务器.它属于共享缓存,所以很多地方都可以使用其缓存资源,因此对于节省流量有很大作用.\n\n浏览器缓存是将文件保存在客户端,在同一个会话过程中会检查缓存的副本是否足够新,在后退网页时,访问过的资源可以从浏览器缓存中拿出使用.通过减少服务器处理请求的数量,用户将获得更快的体验 下面我就来着重讲下传说中的浏览器缓存.\n\n# 浏览器缓存\n页面的缓存状态是由header决定的,header的参数有四种：\n\n# 一、 Cache-Control（重要策略）：\nCache-Control包括：max-age / s-maxage/public/private/no-cache/no-store/must-revalidate等\n\n1、max-age（单位为s）指定设置缓存最大的有效时间,定义的是时间长短.当浏览器向服务器发送请求后,在max-age这段时间里浏览器就不会再向服务器发送请求了. 我们来找个资源看下.比如shang.qq.com上的css资源,max-age=2592000,也就是说缓存有效期为2592000秒（也就是30天）.于是在30天内都会使用这个版本的资源,即使服务器上的资源发生了变化,浏览器也不会得到通知.max-age会覆盖掉Expires,后面会有讨论.\n\n\n\n2、s-maxage（单位为s）同max-age,只用于共享缓存（比如CDN缓存）. 比如,当s-maxage=60时,在这60秒中,即使更新了CDN的内容,浏览器也不会进行请求.也就是说max-age用于普通缓存,而s-maxage用于代理缓存.如果存在s-maxage,则会覆盖掉max-age和Expires header. 3、public 指定响应会被缓存,并且在多用户间共享.也就是下图的意思.如果没有指定public还是private,则默认为public.\n\n\n\n4、private 响应只作为私有的缓存（见下图）,不能在用户间共享.如果要求HTTP认证,响应会自动设置为private.\n\n\n\n5、no-cache 指定不缓存响应,表明资源不进行缓存\n\n\n\n但是设置了no-cache之后并不代表浏览器不缓存,而是在缓存前要向服务器确认资源是否被更改.因此有的时候只设置no-cache防止缓存还是不够保险,还可以加上private指令,将过期时间设为过去的时间. 6、no-store 绝对禁止缓存,一看就知道如果用了这个命令当然就是不会进行缓存啦～每次请求资源都要从服务器重新获取. 7、must-revalidate指定如果页面是过期的,则去服务器进行获取.这个指令并不常用,就不做过多的讨论了.\n\n# 二、Expires\n缓存过期时间,用来指定资源到期的时间,是服务器端的具体的时间点.也就是说,Expires=max-age +请求时间,需要和Last-modified结合使用.但在上面我们提到过,cache-control的优先级更高. Expires是Web服务器响应消息头字段,在响应http请求时告诉浏览器在过期时间前浏览器可以直接从浏览器缓存取数据,而无需再次请求.'\n\n\n\n# 三、Last-modified\n服务器端文件的最后修改时间,需要和cache-control共同使用,是检查服务器端资源是否更新的一种方式.当浏览器再次进行请求时,会向服务器传送If-Modified-Since报头,询问Last-Modified时间点之后资源是否被修改过.如果没有修改,则返回码为304,使用缓存；如果修改过,则再次去服务器请求资源,返回码和首次请求相同为200,资源为服务器最新资源. 如下图,最后修改时间为2014年12月19日星期五2点50分47秒\n\n\n\n# 四、ETag\n根据实体内容生成一段hash字符串,标识资源的状态,由服务端产生.浏览器会将这串字符串传回服务器,验证资源是否已经修改,如果没有修改,过程如下：\n\n\n\n使用ETag可以解决Last-modified存在的一些问题：\n\na、某些服务器不能精确得到资源的最后修改时间,这样就无法通过最后修改时间判断资源是否更新 \nb、如果资源修改非常频繁,在秒以下的时间内进行修改,而`Last-modified`只能精确到秒 \nc、一些资源的最后修改时间改变了,但是内容没改变,使用`ETag`就认为资源还是没有修改的.\n\n\n1\n2\n3\n# 使用缓存流程\n\n\nEtag/If-None-MatchEtag/If-None-Match也要配合Cache-Control使用.lEtag：web服务器响应请求时,告诉浏览器当前资源在服务器的唯一标识（生成规则由服务器觉得）.Apache中,ETag的值,默认是对文件的索引节（INode）,大小（Size）和最后修改时间（MTime）进行Hash后得到的.lIf-None-Match：当资源过期时（使用Cache-Control标识的max-age）,发现资源具有Etage声明,则再次向web服务器请求时带上头If-None-Match（Etag的值）.web服务器收到请求后发现有头If-None-Match则与被请求资源的相应校验串进行比对,决定返回200或304.\n\nLast-Modified/If-Modified-SinceLast-Modified/If-Modified-Since要配合Cache-Control使用.lLast-Modified：标示这个响应资源的最后修改时间.web服务器在响应请求时,告诉浏览器资源的最后修改时间.lIf-Modified-Since：当资源过期时（使用Cache-Control标识的max-age）,发现资源具有Last-Modified声明,则再次向web服务器请求时带上头If-Modified-Since,表示请求时间.web服务器收到请求后发现有头If-Modified-Since则与被请求资源的最后修改时间进行比对.若最后修改时间较新,说明资源又被改动过,则响应整片资源内容（写在响应消息包体内）,HTTP 200；若最后修改时间较旧,说明资源无新修改,则响应HTTP 304 (无需包体,节省浏览),告知浏览器继续使用所保存的cache.\n\n既生Last-Modified何生Etag？ 你可能会觉得使用Last-Modified已经足以让浏览器知道本地的缓存副本是否足够新,为什么还需要Etag（实体标识）呢？HTTP1.1中Etag的出现主要是为了解决几个Last-Modified比较难解决的问题： 1.Last-Modified标注的最后修改只能精确到秒级,如果某些文件在1秒钟以内,被修改多次的话,它将不能准确标注文件的修改时间 2.如果某些文件会被定期生成,当有时内容并没有任何变化,但Last-Modified却改变了,导致文件没法使用缓存 3.有可能存在服务器没有准确获取文件修改时间,或者与代理服务器时间不一致等情形Etag是服务器自动生成或者由开发者生成的对应资源在服务器端的唯一标识符,能够更加准确的控制缓存.Last-Modified与ETag是可以一起使用的,服务器会优先验证ETag,一致的情况下,才会继续比对Last-Modified,最后才决定是否返回304.\n\n# cache-control指令使用\n说了那么多cache-control的指令,那么如何选择使用哪些指令呢？\n\n\n\n# 另外的缓存方式：LocalStorage和sessionStorage\n除了开头提到的那么多缓存方式以外,还有一种我们都熟悉的缓存方式,LocalStorage和sessionStorage（好像是两种23333）.LocalStorage是一种本地存储的公共资源,域名下很多应用共享这份资源会有风险；LocalStorage是以页面域名划分的,如果有多个等价域名之间的LocalStorage不互通,则会造成缓存多份浪费.LocalStorage在PC上的兼容性不太好,而且当网络速度快、协商缓存响应快时使用localStorage的速度比不上304.并且不能缓存css文件.而移动端由于网速慢,使用localStorage要快于304. 而相对LocalStorage来说,SessionStorage的数据只存储到特定的会话中,不属于持久化的存储,所以关闭浏览器会清除数据.和localstorage具有相同的方法. 在前端开发中缓存是必不可少的,那么使用怎样的缓存方式更高效、让我们项目的性能更优,还是需要我们仔细斟酌.\n\n# 如何启用Web缓存\n# 启用缓存\n了解了Web缓存的基本原理和重要性,接下来的问题就是如何在项目里使用.  对于使用nginx或者apache做为Web前端的系统,有相应的指令达成目的,资料很多,比如可以参考NGINX下配置CACHE-CONTROL头部.  对于使用高版本Tomcat的项目,没有必要自造轮子,官方实现的ExpiresFilter已经可以满足日常的使用,具体方法可以参考ExpiresFilter官方文档和Tomcat性能调优 通过ExpiresFilter设置资源缓存.  对于使用低版本Tomcat的项目来说,虽然没有官方的过滤器可用,但可以自定义过滤器来实现缓存,具体方法可以参考tomcat中Cache-Control 的配置和使用Cache-Control和gzip提升tomcat应用性能(整理),代码和配置都比较简单,很好理解.\n\n# 注意点\n启用Web缓存之后,浏览器的缓存行为与用户的操作方式有关系,验证缓存特性开启的时候不要被假象蒙蔽. 使用Tomcat做应用容器,修改应用的Web.xml,增加缓存过滤器的配置,指定max-age为2周,此时使用Chrome访问应用的页面：\n\n * 在浏览器地址栏里输入URL,多次按回车,使用调试器可以观察到除了第一次访问页面,浏览器需要从Web服务器请求静态资源,一旦静态资源下载完毕,Chrome后续直接从本地缓存中加载资源,不再向Web服务器发起请求；\n * 按F5刷新页面或者右键菜单重新加载页面,浏览器向Web服务器发起加载静态资源的请求,Web服务器返回状态码304,表示资源未变化.",normalizedContent:"# 浏览器缓存\n以前总是傻傻的分不清缓存和cookie,误认为cookie就是指浏览器缓存.还有 cookie localstorage`` sessionstorage 缓存 四者的关系也没有搞明白.经过一番折腾,终于从网上找到了一些关于缓存的知识.今天这篇文章就先介绍一下缓存吧.\n\n在前端开发中,性能一直都是被大家所重视的一点,然而判断一个网站的性能最直观的就是看网页打开的速度.其中提高网页反应速度的一个方式就是使用缓存.一个优秀的缓存策略可以缩短网页请求资源的距离,减少延迟,并且由于缓存文件可以重复利用,还可以减少带宽,降低网络负荷.那么下面我们就来看看服务器端缓存的原理.\n\n# 缓存分类\nweb缓存分为很多种,比如数据库缓存、代理服务器缓存、还有我们熟悉的cdn缓存,以及浏览器缓存.对于太多文字的阅读其实我是拒绝的,于是就画了个图来解释下. 浏览器通过代理服务器向源服务器发起请求的原理如下图 web缓存分为很多种,比如数据库缓存、代理服务器缓存、还有我们熟悉的cdn缓存,以及浏览器缓存.对于太多文字的阅读其实我是拒绝的,于是就画了个图来解释下. 浏览器通过代理服务器向源服务器发起请求的原理如下图:\n\n\n\n浏览器先向代理服务器发起web请求,再将请求转发到源服务器.它属于共享缓存,所以很多地方都可以使用其缓存资源,因此对于节省流量有很大作用.\n\n浏览器缓存是将文件保存在客户端,在同一个会话过程中会检查缓存的副本是否足够新,在后退网页时,访问过的资源可以从浏览器缓存中拿出使用.通过减少服务器处理请求的数量,用户将获得更快的体验 下面我就来着重讲下传说中的浏览器缓存.\n\n# 浏览器缓存\n页面的缓存状态是由header决定的,header的参数有四种：\n\n# 一、 cache-control（重要策略）：\ncache-control包括：max-age / s-maxage/public/private/no-cache/no-store/must-revalidate等\n\n1、max-age（单位为s）指定设置缓存最大的有效时间,定义的是时间长短.当浏览器向服务器发送请求后,在max-age这段时间里浏览器就不会再向服务器发送请求了. 我们来找个资源看下.比如shang.qq.com上的css资源,max-age=2592000,也就是说缓存有效期为2592000秒（也就是30天）.于是在30天内都会使用这个版本的资源,即使服务器上的资源发生了变化,浏览器也不会得到通知.max-age会覆盖掉expires,后面会有讨论.\n\n\n\n2、s-maxage（单位为s）同max-age,只用于共享缓存（比如cdn缓存）. 比如,当s-maxage=60时,在这60秒中,即使更新了cdn的内容,浏览器也不会进行请求.也就是说max-age用于普通缓存,而s-maxage用于代理缓存.如果存在s-maxage,则会覆盖掉max-age和expires header. 3、public 指定响应会被缓存,并且在多用户间共享.也就是下图的意思.如果没有指定public还是private,则默认为public.\n\n\n\n4、private 响应只作为私有的缓存（见下图）,不能在用户间共享.如果要求http认证,响应会自动设置为private.\n\n\n\n5、no-cache 指定不缓存响应,表明资源不进行缓存\n\n\n\n但是设置了no-cache之后并不代表浏览器不缓存,而是在缓存前要向服务器确认资源是否被更改.因此有的时候只设置no-cache防止缓存还是不够保险,还可以加上private指令,将过期时间设为过去的时间. 6、no-store 绝对禁止缓存,一看就知道如果用了这个命令当然就是不会进行缓存啦～每次请求资源都要从服务器重新获取. 7、must-revalidate指定如果页面是过期的,则去服务器进行获取.这个指令并不常用,就不做过多的讨论了.\n\n# 二、expires\n缓存过期时间,用来指定资源到期的时间,是服务器端的具体的时间点.也就是说,expires=max-age +请求时间,需要和last-modified结合使用.但在上面我们提到过,cache-control的优先级更高. expires是web服务器响应消息头字段,在响应http请求时告诉浏览器在过期时间前浏览器可以直接从浏览器缓存取数据,而无需再次请求.'\n\n\n\n# 三、last-modified\n服务器端文件的最后修改时间,需要和cache-control共同使用,是检查服务器端资源是否更新的一种方式.当浏览器再次进行请求时,会向服务器传送if-modified-since报头,询问last-modified时间点之后资源是否被修改过.如果没有修改,则返回码为304,使用缓存；如果修改过,则再次去服务器请求资源,返回码和首次请求相同为200,资源为服务器最新资源. 如下图,最后修改时间为2014年12月19日星期五2点50分47秒\n\n\n\n# 四、etag\n根据实体内容生成一段hash字符串,标识资源的状态,由服务端产生.浏览器会将这串字符串传回服务器,验证资源是否已经修改,如果没有修改,过程如下：\n\n\n\n使用etag可以解决last-modified存在的一些问题：\n\na、某些服务器不能精确得到资源的最后修改时间,这样就无法通过最后修改时间判断资源是否更新 \nb、如果资源修改非常频繁,在秒以下的时间内进行修改,而`last-modified`只能精确到秒 \nc、一些资源的最后修改时间改变了,但是内容没改变,使用`etag`就认为资源还是没有修改的.\n\n\n1\n2\n3\n# 使用缓存流程\n\n\netag/if-none-matchetag/if-none-match也要配合cache-control使用.letag：web服务器响应请求时,告诉浏览器当前资源在服务器的唯一标识（生成规则由服务器觉得）.apache中,etag的值,默认是对文件的索引节（inode）,大小（size）和最后修改时间（mtime）进行hash后得到的.lif-none-match：当资源过期时（使用cache-control标识的max-age）,发现资源具有etage声明,则再次向web服务器请求时带上头if-none-match（etag的值）.web服务器收到请求后发现有头if-none-match则与被请求资源的相应校验串进行比对,决定返回200或304.\n\nlast-modified/if-modified-sincelast-modified/if-modified-since要配合cache-control使用.llast-modified：标示这个响应资源的最后修改时间.web服务器在响应请求时,告诉浏览器资源的最后修改时间.lif-modified-since：当资源过期时（使用cache-control标识的max-age）,发现资源具有last-modified声明,则再次向web服务器请求时带上头if-modified-since,表示请求时间.web服务器收到请求后发现有头if-modified-since则与被请求资源的最后修改时间进行比对.若最后修改时间较新,说明资源又被改动过,则响应整片资源内容（写在响应消息包体内）,http 200；若最后修改时间较旧,说明资源无新修改,则响应http 304 (无需包体,节省浏览),告知浏览器继续使用所保存的cache.\n\n既生last-modified何生etag？ 你可能会觉得使用last-modified已经足以让浏览器知道本地的缓存副本是否足够新,为什么还需要etag（实体标识）呢？http1.1中etag的出现主要是为了解决几个last-modified比较难解决的问题： 1.last-modified标注的最后修改只能精确到秒级,如果某些文件在1秒钟以内,被修改多次的话,它将不能准确标注文件的修改时间 2.如果某些文件会被定期生成,当有时内容并没有任何变化,但last-modified却改变了,导致文件没法使用缓存 3.有可能存在服务器没有准确获取文件修改时间,或者与代理服务器时间不一致等情形etag是服务器自动生成或者由开发者生成的对应资源在服务器端的唯一标识符,能够更加准确的控制缓存.last-modified与etag是可以一起使用的,服务器会优先验证etag,一致的情况下,才会继续比对last-modified,最后才决定是否返回304.\n\n# cache-control指令使用\n说了那么多cache-control的指令,那么如何选择使用哪些指令呢？\n\n\n\n# 另外的缓存方式：localstorage和sessionstorage\n除了开头提到的那么多缓存方式以外,还有一种我们都熟悉的缓存方式,localstorage和sessionstorage（好像是两种23333）.localstorage是一种本地存储的公共资源,域名下很多应用共享这份资源会有风险；localstorage是以页面域名划分的,如果有多个等价域名之间的localstorage不互通,则会造成缓存多份浪费.localstorage在pc上的兼容性不太好,而且当网络速度快、协商缓存响应快时使用localstorage的速度比不上304.并且不能缓存css文件.而移动端由于网速慢,使用localstorage要快于304. 而相对localstorage来说,sessionstorage的数据只存储到特定的会话中,不属于持久化的存储,所以关闭浏览器会清除数据.和localstorage具有相同的方法. 在前端开发中缓存是必不可少的,那么使用怎样的缓存方式更高效、让我们项目的性能更优,还是需要我们仔细斟酌.\n\n# 如何启用web缓存\n# 启用缓存\n了解了web缓存的基本原理和重要性,接下来的问题就是如何在项目里使用.  对于使用nginx或者apache做为web前端的系统,有相应的指令达成目的,资料很多,比如可以参考nginx下配置cache-control头部.  对于使用高版本tomcat的项目,没有必要自造轮子,官方实现的expiresfilter已经可以满足日常的使用,具体方法可以参考expiresfilter官方文档和tomcat性能调优 通过expiresfilter设置资源缓存.  对于使用低版本tomcat的项目来说,虽然没有官方的过滤器可用,但可以自定义过滤器来实现缓存,具体方法可以参考tomcat中cache-control 的配置和使用cache-control和gzip提升tomcat应用性能(整理),代码和配置都比较简单,很好理解.\n\n# 注意点\n启用web缓存之后,浏览器的缓存行为与用户的操作方式有关系,验证缓存特性开启的时候不要被假象蒙蔽. 使用tomcat做应用容器,修改应用的web.xml,增加缓存过滤器的配置,指定max-age为2周,此时使用chrome访问应用的页面：\n\n * 在浏览器地址栏里输入url,多次按回车,使用调试器可以观察到除了第一次访问页面,浏览器需要从web服务器请求静态资源,一旦静态资源下载完毕,chrome后续直接从本地缓存中加载资源,不再向web服务器发起请求；\n * 按f5刷新页面或者右键菜单重新加载页面,浏览器向web服务器发起加载静态资源的请求,web服务器返回状态码304,表示资源未变化.",charsets:{cjk:!0}},{title:"常见代码",frontmatter:{},regularPath:"/interview/code.html",relativePath:"interview/code.md",key:"v-02d74e6e",path:"/interview/code.html",headers:[{level:2,title:"代码1",slug:"代码1",normalizedTitle:"代码1",charIndex:9},{level:2,title:"代码2",slug:"代码2",normalizedTitle:"代码2",charIndex:254},{level:2,title:"代码3",slug:"代码3",normalizedTitle:"代码3",charIndex:817},{level:2,title:"代码4",slug:"代码4",normalizedTitle:"代码4",charIndex:1191},{level:2,title:"代码5",slug:"代码5",normalizedTitle:"代码5",charIndex:1396},{level:2,title:"代码6",slug:"代码6",normalizedTitle:"代码6",charIndex:2462},{level:2,title:"代码7",slug:"代码7",normalizedTitle:"代码7",charIndex:2656},{level:2,title:"代码8",slug:"代码8",normalizedTitle:"代码8",charIndex:2838}],lastUpdated:"6/14/2019, 7:37:55 AM",headersStr:"代码1 代码2 代码3 代码4 代码5 代码6 代码7 代码8",content:'# 常见代码\n# 代码1\n(function(){\nvar a = b = 3;\n})();\n\nconsole.log("a defined? " + (typeof a !== \'undefined\'));\nconsole.log("b defined? " + (typeof b !== \'undefined\'));\n\n\n1\n2\n3\n4\n5\n6\n以上代码输出?\n\nvar a=b=3我们拆解下\nb=3\nvar a=b\n此时b为全局变量,\n如果在严格模式的话会报错,b未定义\n\n\n1\n2\n3\n4\n5\n# 代码2\nvar myObject = {\n    foo: "bar",\n        func: function() {\n        var self = this;\n        console.log("outer func: this.foo = " + this.foo);\n        console.log("outer func: self.foo = " + self.foo);\n        (function() {\n            console.log("inner func: this.foo = " + this.foo);\n            console.log("inner func: self.foo = " + self.foo);\n        }());\n    }\n};\nmyObject.func();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n以上代码输入什么\n\nouter func: this.foo = bar\nouter func: self.foo = bar\ninner func: this.foo = undefined\ninner func: self.foo = bar\n\n\n1\n2\n3\n4\n# 代码3\nfunction foo1(){\n    return {\n    bar: "hello"\n    };\n}\n\nfunction foo2(){\n    return\n    {\n    bar: "hello"\n    };\n}\nconsole.log(foo1())\nconsole.log(foo2())\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n以上代码会输入相同结果吗?\n\n输入结果是不同的,\nfoo1()={bar="hello}\nfoo2()=undefined\n原因与JavaScript中分号在技术上是可选的事实有关（尽管忽略它们通常是非常糟糕的形式）.因此，在foo2()中遇到包含return语句的行（没有其他内容）时，会在return语句之后立即自动插入分号.\n\n\n1\n2\n3\n4\n# 代码4\n(function() {\n    console.log(1);\n    setTimeout(function(){console.log(2)}, 1000);\n    setTimeout(function(){console.log(3)}, 0);\n    console.log(4);\n})();\n\n\n1\n2\n3\n4\n5\n6\n执行以上代码,1-4如何排列\n\n1,4,3,2\n\n\n1\n# 代码5\nconsole.log(1 + "2" + "2");\nconsole.log(1 + +"2" + "2");\nconsole.log(1 + -"1" + "2");\nconsole.log(+"1" + "1" + "2");\nconsole.log( "A" - "B" + "2");\nconsole.log( "A" - "B" + 2);\n\n\n1\n2\n3\n4\n5\n6\n执行以上代码会出现什么结果\n\n"122"\n"32"\n"02"\n"112"\n"NaN2"\nNaN\n\n示例1：1 +“2”+“2”输出：“122”说明：第一个操作在1 +“2”中执行.由于其中一个操作数（“2”）是一个字符串，所以JavaScript假定需要执行字符串连接，因此将1的类型转换为“1”，1 +“2”转换为“12”.然后，“12”+“2”产生“122”.\n\n示例2：1 + +“2”+“2”输出：“32”说明：根据操作顺序，要执行的第一个操作是+“2”（第一个“2”之前的额外+被视为一个一元运算符）.因此，JavaScript将“2”的类型转换为数字，然后将一元+符号应用于它（即将其视为正数）.结果，下一个操作现在是1 + 2，当然这会产生3.但是，我们有一个数字和一个字符串之间的操作（即3和“2”），所以JavaScript再次转换数值赋给一个字符串并执行字符串连接，产生“32”.\n\n示例3：1 + - “1”+“2”输出：“02”说明：这里的解释与前面的示例相同，只是一元运算符是 - 而不是+.因此，“1”变为1，然后在应用 - 时将其变为-1，然后将其加1到产生0，然后转换为字符串并与最终的“2”操作数连接，产生“02”.\n\n示例4：+“1”+“1”+“2”输出：“112”说明：尽管第一个“1”操作数是基于其前面的一元+运算符的数值类型转换的，当它与第二个“1”操作数连接在一起时返回一个字符串，然后与最终的“2”操作数连接，产生字符串“112”.\n\n示例5：“A” - “B”+“2”输出：“NaN2”说明：由于 - 运算符不能应用于字符串，并且既不能将“A”也不能将“B”转换为数值， “ - ”B“产生NaN，然后与字符串”2“串联产生”NaN2“.\n\n例6：“A” - “B”+2输出：NaN说明：在前面的例子中，“A” - “B”产生NaN.但是任何运算符应用于NaN和其他数字操作数仍然会产生NaN.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 代码6\nvar b = 1;\nfunction outer(){\n    var b = 2\n    function inner(){\n        b++;\n        var b = 3;\n        console.log(b)\n    }\n    inner();\n}\nouter();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n以上代码输出什么 3\n\n# 代码7\nvar x = 21;\nvar girl = function () {\n    console.log(x);\n    var x = 20;\n};\ngirl ();\n\n\n1\n2\n3\n4\n5\n6\n以上代码输入什么? undefined 为什么它不显示21的全局值？原因是当函数执行时，它检查是否存在本地x变量但尚未声明它，因此它不会查找全局变量.\n\n# 代码8\n(function () {\n    try {\n        throw new Error();\n    } catch (x) {\n        var x = 1, y = 2;\n        console.log(x);\n    }\n    console.log(x);\n    console.log(y);\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n以上代码输出什么\n\n1\nundefined\n2\n\n\n1\n2\n3\nvar语句被挂起（没有它们的值初始化）到它所属的全局或函数作用域的顶部，即使它位于with或catch块内.但是，错误的标识符只在catch块内部可见.它相当于：\n\n(function () {\n    var x, y; // outer and hoisted\n        try {\n            throw new Error();\n        } catch (x /* inner */) {\n            x = 1; // inner x, not the outer one\n            y = 2; // there is only one y, which is in the outer scope\n            console.log(x /* inner */);\n        }\n    console.log(x);\n    console.log(y);\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12',normalizedContent:'# 常见代码\n# 代码1\n(function(){\nvar a = b = 3;\n})();\n\nconsole.log("a defined? " + (typeof a !== \'undefined\'));\nconsole.log("b defined? " + (typeof b !== \'undefined\'));\n\n\n1\n2\n3\n4\n5\n6\n以上代码输出?\n\nvar a=b=3我们拆解下\nb=3\nvar a=b\n此时b为全局变量,\n如果在严格模式的话会报错,b未定义\n\n\n1\n2\n3\n4\n5\n# 代码2\nvar myobject = {\n    foo: "bar",\n        func: function() {\n        var self = this;\n        console.log("outer func: this.foo = " + this.foo);\n        console.log("outer func: self.foo = " + self.foo);\n        (function() {\n            console.log("inner func: this.foo = " + this.foo);\n            console.log("inner func: self.foo = " + self.foo);\n        }());\n    }\n};\nmyobject.func();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n以上代码输入什么\n\nouter func: this.foo = bar\nouter func: self.foo = bar\ninner func: this.foo = undefined\ninner func: self.foo = bar\n\n\n1\n2\n3\n4\n# 代码3\nfunction foo1(){\n    return {\n    bar: "hello"\n    };\n}\n\nfunction foo2(){\n    return\n    {\n    bar: "hello"\n    };\n}\nconsole.log(foo1())\nconsole.log(foo2())\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n以上代码会输入相同结果吗?\n\n输入结果是不同的,\nfoo1()={bar="hello}\nfoo2()=undefined\n原因与javascript中分号在技术上是可选的事实有关（尽管忽略它们通常是非常糟糕的形式）.因此，在foo2()中遇到包含return语句的行（没有其他内容）时，会在return语句之后立即自动插入分号.\n\n\n1\n2\n3\n4\n# 代码4\n(function() {\n    console.log(1);\n    settimeout(function(){console.log(2)}, 1000);\n    settimeout(function(){console.log(3)}, 0);\n    console.log(4);\n})();\n\n\n1\n2\n3\n4\n5\n6\n执行以上代码,1-4如何排列\n\n1,4,3,2\n\n\n1\n# 代码5\nconsole.log(1 + "2" + "2");\nconsole.log(1 + +"2" + "2");\nconsole.log(1 + -"1" + "2");\nconsole.log(+"1" + "1" + "2");\nconsole.log( "a" - "b" + "2");\nconsole.log( "a" - "b" + 2);\n\n\n1\n2\n3\n4\n5\n6\n执行以上代码会出现什么结果\n\n"122"\n"32"\n"02"\n"112"\n"nan2"\nnan\n\n示例1：1 +“2”+“2”输出：“122”说明：第一个操作在1 +“2”中执行.由于其中一个操作数（“2”）是一个字符串，所以javascript假定需要执行字符串连接，因此将1的类型转换为“1”，1 +“2”转换为“12”.然后，“12”+“2”产生“122”.\n\n示例2：1 + +“2”+“2”输出：“32”说明：根据操作顺序，要执行的第一个操作是+“2”（第一个“2”之前的额外+被视为一个一元运算符）.因此，javascript将“2”的类型转换为数字，然后将一元+符号应用于它（即将其视为正数）.结果，下一个操作现在是1 + 2，当然这会产生3.但是，我们有一个数字和一个字符串之间的操作（即3和“2”），所以javascript再次转换数值赋给一个字符串并执行字符串连接，产生“32”.\n\n示例3：1 + - “1”+“2”输出：“02”说明：这里的解释与前面的示例相同，只是一元运算符是 - 而不是+.因此，“1”变为1，然后在应用 - 时将其变为-1，然后将其加1到产生0，然后转换为字符串并与最终的“2”操作数连接，产生“02”.\n\n示例4：+“1”+“1”+“2”输出：“112”说明：尽管第一个“1”操作数是基于其前面的一元+运算符的数值类型转换的，当它与第二个“1”操作数连接在一起时返回一个字符串，然后与最终的“2”操作数连接，产生字符串“112”.\n\n示例5：“a” - “b”+“2”输出：“nan2”说明：由于 - 运算符不能应用于字符串，并且既不能将“a”也不能将“b”转换为数值， “ - ”b“产生nan，然后与字符串”2“串联产生”nan2“.\n\n例6：“a” - “b”+2输出：nan说明：在前面的例子中，“a” - “b”产生nan.但是任何运算符应用于nan和其他数字操作数仍然会产生nan.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 代码6\nvar b = 1;\nfunction outer(){\n    var b = 2\n    function inner(){\n        b++;\n        var b = 3;\n        console.log(b)\n    }\n    inner();\n}\nouter();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n以上代码输出什么 3\n\n# 代码7\nvar x = 21;\nvar girl = function () {\n    console.log(x);\n    var x = 20;\n};\ngirl ();\n\n\n1\n2\n3\n4\n5\n6\n以上代码输入什么? undefined 为什么它不显示21的全局值？原因是当函数执行时，它检查是否存在本地x变量但尚未声明它，因此它不会查找全局变量.\n\n# 代码8\n(function () {\n    try {\n        throw new error();\n    } catch (x) {\n        var x = 1, y = 2;\n        console.log(x);\n    }\n    console.log(x);\n    console.log(y);\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n以上代码输出什么\n\n1\nundefined\n2\n\n\n1\n2\n3\nvar语句被挂起（没有它们的值初始化）到它所属的全局或函数作用域的顶部，即使它位于with或catch块内.但是，错误的标识符只在catch块内部可见.它相当于：\n\n(function () {\n    var x, y; // outer and hoisted\n        try {\n            throw new error();\n        } catch (x /* inner */) {\n            x = 1; // inner x, not the outer one\n            y = 2; // there is only one y, which is in the outer scope\n            console.log(x /* inner */);\n        }\n    console.log(x);\n    console.log(y);\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12',charsets:{cjk:!0}},{title:"Css基础",frontmatter:{},regularPath:"/interview/css.html",relativePath:"interview/css.md",key:"v-680fdff3",path:"/interview/css.html",headers:[{level:2,title:"盒模型",slug:"盒模型",normalizedTitle:"盒模型",charIndex:10},{level:2,title:"CSS 的选择符种类",slug:"css-的选择符种类",normalizedTitle:"css 的选择符种类",charIndex:166},{level:2,title:"CSS 优先级算法",slug:"css-优先级算法",normalizedTitle:"css 优先级算法",charIndex:475},{level:2,title:"CSS3 新增伪类有那些?",slug:"css3-新增伪类有那些",normalizedTitle:"css3 新增伪类有那些?",charIndex:756},{level:2,title:"CSS3 新特性",slug:"css3-新特性",normalizedTitle:"css3 新特性",charIndex:991},{level:2,title:"::before 和 :after 中双冒号和单冒号有什么区别？解释一下这 2 个伪元素的作用",slug:"before-和-after-中双冒号和单冒号有什么区别-解释一下这-2-个伪元素的作用",normalizedTitle:"::before 和 :after 中双冒号和单冒号有什么区别？解释一下这 2 个伪元素的作用",charIndex:1481},{level:2,title:"怎么让 Chrome 支持小于 12px 的文字？",slug:"怎么让-chrome-支持小于-12px-的文字",normalizedTitle:"怎么让 chrome 支持小于 12px 的文字？",charIndex:1766},{level:2,title:"让页面里的字体变清晰,变细用 CSS 怎么做？",slug:"让页面里的字体变清晰-变细用-css-怎么做",normalizedTitle:"让页面里的字体变清晰,变细用 css 怎么做？",charIndex:1873},{level:2,title:"position:fixed;在 android 下无效怎么处理？",slug:"position-fixed-在-android-下无效怎么处理",normalizedTitle:"position:fixed;在 android 下无效怎么处理？",charIndex:1997},{level:2,title:"png、jpg、gif 这些图片格式解释一下,分别什么时候用.有没有了解过 webp？",slug:"png、jpg、gif-这些图片格式解释一下-分别什么时候用-有没有了解过-webp",normalizedTitle:"png、jpg、gif 这些图片格式解释一下,分别什么时候用.有没有了解过 webp？",charIndex:2176},{level:2,title:"style 标签写在 body 后与 body 前有什么区别？",slug:"style-标签写在-body-后与-body-前有什么区别",normalizedTitle:"style 标签写在 body 后与 body 前有什么区别？",charIndex:2537},{level:2,title:"css 中隐藏元素的方法",slug:"css-中隐藏元素的方法",normalizedTitle:"css 中隐藏元素的方法",charIndex:2723},{level:2,title:"CSS 优化、提高性能的方法有哪些？",slug:"css-优化、提高性能的方法有哪些",normalizedTitle:"css 优化、提高性能的方法有哪些？",charIndex:2832},{level:2,title:"css 如何实现左侧固定300px，右侧自适应的布局",slug:"css-如何实现左侧固定300px-右侧自适应的布局",normalizedTitle:"css 如何实现左侧固定300px，右侧自适应的布局",charIndex:3011},{level:2,title:"如何实现左右固定，中间自适应布局",slug:"如何实现左右固定-中间自适应布局",normalizedTitle:"如何实现左右固定，中间自适应布局",charIndex:3252},{level:2,title:"css variable",slug:"css-variable",normalizedTitle:"css variable",charIndex:3600},{level:2,title:"css specificity",slug:"css-specificity",normalizedTitle:"css specificity",charIndex:3735},{level:2,title:"'+' 与 '~' 选择器有什么不同",slug:"与-选择器有什么不同",normalizedTitle:"'+' 与 '~' 选择器有什么不同",charIndex:4043},{level:2,title:"伪类与伪元素有什么区别",slug:"伪类与伪元素有什么区别",normalizedTitle:"伪类与伪元素有什么区别",charIndex:4103}],lastUpdated:"3/3/2021, 9:34:15 AM",headersStr:"盒模型 CSS 的选择符种类 CSS 优先级算法 CSS3 新增伪类有那些? CSS3 新特性 ::before 和 :after 中双冒号和单冒号有什么区别？解释一下这 2 个伪元素的作用 怎么让 Chrome 支持小于 12px 的文字？ 让页面里的字体变清晰,变细用 CSS 怎么做？ position:fixed;在 android 下无效怎么处理？ png、jpg、gif 这些图片格式解释一下,分别什么时候用.有没有了解过 webp？ style 标签写在 body 后与 body 前有什么区别？ css 中隐藏元素的方法 CSS 优化、提高性能的方法有哪些？ css 如何实现左侧固定300px，右侧自适应的布局 如何实现左右固定，中间自适应布局 css variable css specificity '+' 与 '~' 选择器有什么不同 伪类与伪元素有什么区别",content:'# Css基础\n# 盒模型\n盒模型基本成了面试必问的问题,有 W3C的盒模型和IE浏览器下的盒模型,盒模型从外到里包括：margin、border、padding、content.\n\n(1)W3C 盒模型的宽度 = content的宽度\n\n(2)IE 盒模型的宽度 =border+padding+content 的宽度\n\n\n\n# CSS 的选择符种类\n * 标签选择器（如：body,div,p,ul,li）\n * 类选择器（如：class=”head”,class=”head_logo”）\n * ID 选择器（如：id=”name”,id=”name_txt”）\n * 全局选择器（如：*号）\n * 组合选择器（如：.head .head_logo,注意两选择器用空格键分开）\n * 继承选择器（如：div p,注意两选择器用空格键分开）\n * 伪类选择器（如：就是链接样式,a元素的伪类,4 种不同的状态：link、visited、active、hover.）\n * 字符串匹配的属性选择符(^ $ *三种,分别对应开始、结尾、包含)\n\n# CSS 优先级算法\n * 元素选择符： 1\n * class选择符： 10\n * id 选择符：100\n * 元素标签：1000\n\n!important声明的样式优先级最高,如果冲突再进行计算.\n\n如果优先级相同,则选择最后出现的样式.\n\n继承得到的样式的优先级最低.\n\n> 权重\n\n\n》内联样式\n\n》ID选择器(#id)\n\n》类选择器(.class) = 伪类选择器(:hover等) = 属性选择器[type等]\n\n》元素选择器(p等) = 伪元素选择器(:after/:before/::selection等)\n\n》通用选择器(*)\n\n》继承的样式\n\n# CSS3 新增伪类有那些?\n * p:first-of-type 选择属于其父元素的首个元素\n * p:last-of-type 选择属于其父元素的最后元素\n * p:only-of-type 选择属于其父元素唯一的元素\n * p:only-child 选择属于其父元素的唯一子元素\n * p:nth-child(2) 选择属于其父元素的第二个子元素\n * :enabled :disabled 表单控件的禁用状态.\n * :checked单选框或复选框被选中.\n\n# CSS3 新特性\n * RGBA和透明度\n   \n   \n * background-image background-origin(content-box/padding-box/border-box) background-size background-repeat\n   \n   \n * word-wrap（对长的不可分割单词换行）word-wrap：break-word\n   \n   \n * 文字阴影：text-shadow： 5px 5px 5px #FF0000;（水平阴影,垂直阴影,模糊距离,阴影颜色）\n   \n   \n * font-face属性：定义自己的字体\n   \n   \n * 圆角（边框半径）：border-radius 属性用于创建圆角\n   \n   \n * 边框图片：border-image: url(border.png) 30 30 round 盒阴影：box-shadow: 10px 10px 5px #888888\n   \n   \n * 媒体查询：定义两套css,当浏览器的尺寸变化时会采用不同的属性\n   \n   \n * \n\n# ::before 和 :after 中双冒号和单冒号有什么区别？解释一下这 2 个伪元素的作用\n * 单冒号(:)用于 CSS3伪类,双冒号(::)用于 CSS3伪元素.\n   \n   \n * ::before就是以一个子元素的存在,定义在元素主体内容之前的一个伪元素.并不存在于dom 之中,只存在在页面之中.\n   \n   \n\n:before 和 :after 这两个伪元素,是在 CSS2.1 里新出现的.起初,伪元素的前缀使用的是单冒号语法,但随着 Web的进化,在 CSS3的规范里,伪元素的语法被修改成使用双冒号,成为::before ::after\n\n# 怎么让 Chrome 支持小于 12px 的文字？\np {\n  font-size: 10px;\n  -webkit-transform: scale(0.8);\n} //0.8是缩放比例\n\n\n1\n2\n3\n4\n# 让页面里的字体变清晰,变细用 CSS 怎么做？\n-webkit-font-smoothing在window系统下没有起作用,但是在 IOS 设备上起作用-webkit-font-smoothing：antialiased是最佳的,灰度平滑.\n\n# position:fixed;在 android 下无效怎么处理？\n<meta\n  name="viewport"\n  content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no"\n/>\n\n\n1\n2\n3\n4\n# png、jpg、gif 这些图片格式解释一下,分别什么时候用.有没有了解过 webp？\n * png是便携式网络图片（Portable Network Graphics）是一种无损数据压缩位图文件格式.优点是：压缩比高,色彩好. 大多数地方都可以用.\n   \n   \n * jpg是一种针对相片使用的一种失真压缩方法,是一种破坏性的压缩,在色调及颜色平滑变化做的不错.在www上,被用来储存和传输照片的格式.\n   \n   \n * gif是一种位图文件格式,以 8 位色重现真色彩的图像.可以实现动画效果.\n   \n   \n * webp格式是谷歌在 2010 年推出的图片格式,压缩率只有jpg的 2/3,大小比png小了45%.缺点是压缩的时间更久了,兼容性不好,目前谷歌和 opera 支持.\n   \n   \n\n# style 标签写在 body 后与 body 前有什么区别？\n页面加载自上而下 当然是先加载样式. 写在body标签后由于浏览器以逐行方式对HTML文档进行解析,当解析到写在尾部的样式表（外联或写在style标签）会导致浏览器停止之前的渲染,等待加载且解析样式表完成之后重新渲染,在windows的IE下可能会出现 FOUC 现象（即样式失效导致的页面闪烁问题）\n\n# css 中隐藏元素的方法\n * dispaly:none\n * visibility:hidden\n * z-index:-1\n * opactiy:0\n * position:absolute\n\n# css深入\n# CSS 优化、提高性能的方法有哪些？\n * 避免过度约束\n * 避免后代选择符\n * 避免链式选择符\n * 使用紧凑的语法\n * 避免不必要的命名空间\n * 避免不必要的重复\n * 最好使用表示语义的名字.一个好的类名应该是描述他是什么而不是像\n * 避免！important,可以选择其他选择器\n * 尽可能的精简规则,你可以合并不同类里的重复规则\n\n# css 如何实现左侧固定300px，右侧自适应的布局\n<div class="main">\n\t<div class="left"></div>\n\t<div class="content"></div>\n</div>\n\n.main {\n  display: flex;\n}\n\n.left {\n  flex-basis: 300px;\n}\n\n.content {\n  flex-grow: 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 如何实现左右固定，中间自适应布局\n<div class="main">\n\t<div class="left"></div>\n\t<div class="content"></div>\n\t<div class="right"></div>\n</div>\n\n.main {\n  display: flex;\n}\n\n.left {\n  flex-basis: 300px;\n  flex-shrink: 0;\n}\n\n.right {\n  flex-basis: 300px;\n  flex-shrink: 0;\n}\n\n.content {\n  flex-grow: 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# css variable\ncss变量减少样式重复定义，比如同一个颜色值要在多个地方重复使用，以前通过less和sass预处理做到，现在css变量也可以做到，方便维护，提高可读性\n\n> 最重要的可以实现暗黑模式切换(主题切换)\n\n\n# css`` specificity\ncss specificity 即 css 中关于选择器的权重，以下三种类型的选择器依次下降\n\n 1. id 选择器，如 #app\n 2. class、attribute 与 pseudo-classes 选择器，如 .header、[type="radio"] 与 :hover\n 3. type 标签选择器和伪元素选择器，如 h1、p 和 ::before\n\n其中通配符选择器 *，组合选择器 + ~ >，否定伪类选择器 :not() 对优先级无影响\n\n另有内联样式 <div class="foo" style="color: red;"></div> 及 !important(最高) 具有更高的权重\n\n# \'+\' 与 \'~\' 选择器有什么不同\n * + 选择器匹配紧邻的兄弟元素\n * ~ 选择器匹配随后的所有兄弟元素\n\n# 伪类与伪元素有什么区别\n 1. 伪类使用单冒号，而伪元素使用双冒号。如 :hover 是伪类，::before 是伪元素\n 2. 伪元素会在文档流生成一个新的元素，并且可以使用 content 属性设置内容',normalizedContent:'# css基础\n# 盒模型\n盒模型基本成了面试必问的问题,有 w3c的盒模型和ie浏览器下的盒模型,盒模型从外到里包括：margin、border、padding、content.\n\n(1)w3c 盒模型的宽度 = content的宽度\n\n(2)ie 盒模型的宽度 =border+padding+content 的宽度\n\n\n\n# css 的选择符种类\n * 标签选择器（如：body,div,p,ul,li）\n * 类选择器（如：class=”head”,class=”head_logo”）\n * id 选择器（如：id=”name”,id=”name_txt”）\n * 全局选择器（如：*号）\n * 组合选择器（如：.head .head_logo,注意两选择器用空格键分开）\n * 继承选择器（如：div p,注意两选择器用空格键分开）\n * 伪类选择器（如：就是链接样式,a元素的伪类,4 种不同的状态：link、visited、active、hover.）\n * 字符串匹配的属性选择符(^ $ *三种,分别对应开始、结尾、包含)\n\n# css 优先级算法\n * 元素选择符： 1\n * class选择符： 10\n * id 选择符：100\n * 元素标签：1000\n\n!important声明的样式优先级最高,如果冲突再进行计算.\n\n如果优先级相同,则选择最后出现的样式.\n\n继承得到的样式的优先级最低.\n\n> 权重\n\n\n》内联样式\n\n》id选择器(#id)\n\n》类选择器(.class) = 伪类选择器(:hover等) = 属性选择器[type等]\n\n》元素选择器(p等) = 伪元素选择器(:after/:before/::selection等)\n\n》通用选择器(*)\n\n》继承的样式\n\n# css3 新增伪类有那些?\n * p:first-of-type 选择属于其父元素的首个元素\n * p:last-of-type 选择属于其父元素的最后元素\n * p:only-of-type 选择属于其父元素唯一的元素\n * p:only-child 选择属于其父元素的唯一子元素\n * p:nth-child(2) 选择属于其父元素的第二个子元素\n * :enabled :disabled 表单控件的禁用状态.\n * :checked单选框或复选框被选中.\n\n# css3 新特性\n * rgba和透明度\n   \n   \n * background-image background-origin(content-box/padding-box/border-box) background-size background-repeat\n   \n   \n * word-wrap（对长的不可分割单词换行）word-wrap：break-word\n   \n   \n * 文字阴影：text-shadow： 5px 5px 5px #ff0000;（水平阴影,垂直阴影,模糊距离,阴影颜色）\n   \n   \n * font-face属性：定义自己的字体\n   \n   \n * 圆角（边框半径）：border-radius 属性用于创建圆角\n   \n   \n * 边框图片：border-image: url(border.png) 30 30 round 盒阴影：box-shadow: 10px 10px 5px #888888\n   \n   \n * 媒体查询：定义两套css,当浏览器的尺寸变化时会采用不同的属性\n   \n   \n * \n\n# ::before 和 :after 中双冒号和单冒号有什么区别？解释一下这 2 个伪元素的作用\n * 单冒号(:)用于 css3伪类,双冒号(::)用于 css3伪元素.\n   \n   \n * ::before就是以一个子元素的存在,定义在元素主体内容之前的一个伪元素.并不存在于dom 之中,只存在在页面之中.\n   \n   \n\n:before 和 :after 这两个伪元素,是在 css2.1 里新出现的.起初,伪元素的前缀使用的是单冒号语法,但随着 web的进化,在 css3的规范里,伪元素的语法被修改成使用双冒号,成为::before ::after\n\n# 怎么让 chrome 支持小于 12px 的文字？\np {\n  font-size: 10px;\n  -webkit-transform: scale(0.8);\n} //0.8是缩放比例\n\n\n1\n2\n3\n4\n# 让页面里的字体变清晰,变细用 css 怎么做？\n-webkit-font-smoothing在window系统下没有起作用,但是在 ios 设备上起作用-webkit-font-smoothing：antialiased是最佳的,灰度平滑.\n\n# position:fixed;在 android 下无效怎么处理？\n<meta\n  name="viewport"\n  content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no"\n/>\n\n\n1\n2\n3\n4\n# png、jpg、gif 这些图片格式解释一下,分别什么时候用.有没有了解过 webp？\n * png是便携式网络图片（portable network graphics）是一种无损数据压缩位图文件格式.优点是：压缩比高,色彩好. 大多数地方都可以用.\n   \n   \n * jpg是一种针对相片使用的一种失真压缩方法,是一种破坏性的压缩,在色调及颜色平滑变化做的不错.在www上,被用来储存和传输照片的格式.\n   \n   \n * gif是一种位图文件格式,以 8 位色重现真色彩的图像.可以实现动画效果.\n   \n   \n * webp格式是谷歌在 2010 年推出的图片格式,压缩率只有jpg的 2/3,大小比png小了45%.缺点是压缩的时间更久了,兼容性不好,目前谷歌和 opera 支持.\n   \n   \n\n# style 标签写在 body 后与 body 前有什么区别？\n页面加载自上而下 当然是先加载样式. 写在body标签后由于浏览器以逐行方式对html文档进行解析,当解析到写在尾部的样式表（外联或写在style标签）会导致浏览器停止之前的渲染,等待加载且解析样式表完成之后重新渲染,在windows的ie下可能会出现 fouc 现象（即样式失效导致的页面闪烁问题）\n\n# css 中隐藏元素的方法\n * dispaly:none\n * visibility:hidden\n * z-index:-1\n * opactiy:0\n * position:absolute\n\n# css深入\n# css 优化、提高性能的方法有哪些？\n * 避免过度约束\n * 避免后代选择符\n * 避免链式选择符\n * 使用紧凑的语法\n * 避免不必要的命名空间\n * 避免不必要的重复\n * 最好使用表示语义的名字.一个好的类名应该是描述他是什么而不是像\n * 避免！important,可以选择其他选择器\n * 尽可能的精简规则,你可以合并不同类里的重复规则\n\n# css 如何实现左侧固定300px，右侧自适应的布局\n<div class="main">\n\t<div class="left"></div>\n\t<div class="content"></div>\n</div>\n\n.main {\n  display: flex;\n}\n\n.left {\n  flex-basis: 300px;\n}\n\n.content {\n  flex-grow: 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 如何实现左右固定，中间自适应布局\n<div class="main">\n\t<div class="left"></div>\n\t<div class="content"></div>\n\t<div class="right"></div>\n</div>\n\n.main {\n  display: flex;\n}\n\n.left {\n  flex-basis: 300px;\n  flex-shrink: 0;\n}\n\n.right {\n  flex-basis: 300px;\n  flex-shrink: 0;\n}\n\n.content {\n  flex-grow: 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# css variable\ncss变量减少样式重复定义，比如同一个颜色值要在多个地方重复使用，以前通过less和sass预处理做到，现在css变量也可以做到，方便维护，提高可读性\n\n> 最重要的可以实现暗黑模式切换(主题切换)\n\n\n# css`` specificity\ncss specificity 即 css 中关于选择器的权重，以下三种类型的选择器依次下降\n\n 1. id 选择器，如 #app\n 2. class、attribute 与 pseudo-classes 选择器，如 .header、[type="radio"] 与 :hover\n 3. type 标签选择器和伪元素选择器，如 h1、p 和 ::before\n\n其中通配符选择器 *，组合选择器 + ~ >，否定伪类选择器 :not() 对优先级无影响\n\n另有内联样式 <div class="foo" style="color: red;"></div> 及 !important(最高) 具有更高的权重\n\n# \'+\' 与 \'~\' 选择器有什么不同\n * + 选择器匹配紧邻的兄弟元素\n * ~ 选择器匹配随后的所有兄弟元素\n\n# 伪类与伪元素有什么区别\n 1. 伪类使用单冒号，而伪元素使用双冒号。如 :hover 是伪类，::before 是伪元素\n 2. 伪元素会在文档流生成一个新的元素，并且可以使用 content 属性设置内容',charsets:{cjk:!0}},{title:"HTTP",frontmatter:{},regularPath:"/interview/http.html",relativePath:"interview/http.md",key:"v-e93963da",path:"/interview/http.html",headers:[{level:2,title:"HTTP有哪些方法",slug:"http有哪些方法",normalizedTitle:"http有哪些方法",charIndex:9},{level:2,title:"这些方法具体哪些作用",slug:"这些方法具体哪些作用",normalizedTitle:"这些方法具体哪些作用",charIndex:116},{level:2,title:"GET和POST有什么区别？",slug:"get和post有什么区别",normalizedTitle:"get和post有什么区别？",charIndex:455},{level:2,title:"PUT和POST都是给服务器发送新增资源,有什么区别？",slug:"put和post都是给服务器发送新增资源-有什么区别",normalizedTitle:"put和post都是给服务器发送新增资源,有什么区别？",charIndex:763},{level:2,title:"PUT和PATCH都是给服务器发送修改资源,有什么区别？",slug:"put和patch都是给服务器发送修改资源-有什么区别",normalizedTitle:"put和patch都是给服务器发送修改资源,有什么区别？",charIndex:911},{level:2,title:"http的请求报文是什么样的？",slug:"http的请求报文是什么样的",normalizedTitle:"http的请求报文是什么样的？",charIndex:980},{level:2,title:"http的响应报文是什么样的？",slug:"http的响应报文是什么样的",normalizedTitle:"http的响应报文是什么样的？",charIndex:1270},{level:2,title:"同样是重定向307,303,302的区别？",slug:"同样是重定向307-303-302的区别",normalizedTitle:"同样是重定向307,303,302的区别？",charIndex:1385},{level:2,title:"HTTP的keep-alive是干什么的？",slug:"http的keep-alive是干什么的",normalizedTitle:"http的keep-alive是干什么的？",charIndex:1537},{level:2,title:"为什么有了HTTP为什么还要HTTPS？",slug:"为什么有了http为什么还要https",normalizedTitle:"为什么有了http为什么还要https？",charIndex:1921}],lastUpdated:"6/24/2019, 2:49:10 PM",headersStr:"HTTP有哪些方法 这些方法具体哪些作用 GET和POST有什么区别？ PUT和POST都是给服务器发送新增资源,有什么区别？ PUT和PATCH都是给服务器发送修改资源,有什么区别？ http的请求报文是什么样的？ http的响应报文是什么样的？ 同样是重定向307,303,302的区别？ HTTP的keep-alive是干什么的？ 为什么有了HTTP为什么还要HTTPS？",content:"# HTTP\n# HTTP有哪些方法\n-HTTP1.0定义了三种请求方法： GET, POST和 HEAD方法\n\n * HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE和CONNECT\n\n# 这些方法具体哪些作用\n * GET: 通常用于请求服务器发送某些资源\n * HEAD: 请求资源的头部信息, 并且这些头部与 HTTP GET 方法请求时返回的一致. 该请求方法的一个使用场景是在下载一个大文件前先获取其大小再决定是否要下载, 以此可以节约带宽资源\n * OPTIONS: 用于获取目的资源所支持的通信选项\n * POST: 发送数据给服务器\n * PUT: 用于新增资源或者使用请求中的有效负载替换目标资源的表现形式\n * DELETE: 用于删除指定的资源\n * PATCH: 用于对资源进行部分修改\n * CONNECT: HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器\n * TRACE: 回显服务器收到的请求,主要用于测试或诊断\n\n# GET和POST有什么区别？\n * 数据传输方式不同：GET请求通过URL传输数据,而POST的数据通过请求体传输.\n * 安全性不同：POST的数据因为在请求主体内,所以有一定的安全性保证,而GET的数据在URL中,通过历史记录,缓存很容易查到数据信息.\n * 数据类型不同：GET只允许 ASCII 字符,而POST无限制\n * GET无害： 刷新、后退等浏览器操作GET请求是无害的,POST可能重复提交表单\n * 特性不同：GET是安全（这里的安全是指只读特性,就是使用这个方法不会引起服务器状态变化）且幂等（幂等的概念是指同一个请求方法执行多次和仅执行一次的效果完全相同）,而POST是非安全非幂等\n\n# PUT和POST都是给服务器发送新增资源,有什么区别？\nPUT 和POST方法的区别是,PUT方法是幂等的：连续调用一次或者多次的效果相同（无副作用）,而POST方法是非幂等的.\n\n> 『POST表示创建资源,PUT表示更新资源』这种说法是错误的,两个都能创建资源,根本区别就在于幂等性\n\n\n# PUT和PATCH都是给服务器发送修改资源,有什么区别？\nPUT和PATCH都是更新资源,而PATCH用来对已知资源进行局部更新.\n\n# http的请求报文是什么样的？\n请求报文有4部分组成:\n\n * 请求行 请求方法字段、URL字段、HTTP协议版本字段.它们用空格分隔.例如,GET /index.html HTTP/1.1.\n   \n   \n * 请求头部 请求头部由关键字/值对组成,每行一对,关键字和值用英文冒号“:”分隔 1.User-Agent：产生请求的浏览器类型. 2.Accept：客户端可识别的内容类型列表. 3.Host：请求的主机名,允许多个域名同处一个IP地址,即虚拟主机.\n   \n   \n * 空行\n   \n   \n * 请求体 post put等请求携带的数据\n   \n   \n\n# http的响应报文是什么样的？\n请求报文有4部分组成:\n\n * 响应行 由协议版本,状态码和状态码的原因短语组成,例如HTTP/1.1 200 OK.\n * 响应头 响应部首组成\n * 空行\n * 响应体 服务器响应的数据\n\n# 同样是重定向307,303,302的区别？\n302是http1.0的协议状态码,在http1.1版本的时候为了细化302状态码又出来了两个303和307.303明确表示客户端应当采用get方法获取资源,他会把POST请求变为GET请求进行重定向.307会遵照浏览器标准,不会从post变为get.\n\n# HTTP的keep-alive是干什么的？\n在早期的HTTP/1.0中,每次http请求都要创建一个连接,而创建连接的过程需要消耗资源和时间,为了减少资源消耗,缩短响应时间,就需要重用连接.在后来的HTTP/1.0中以及HTTP/1.1中,引入了重用连接的机制,就是在http请求头中加入Connection: keep-alive来告诉对方这个请求响应完成后不要关闭,下一次咱们还用这个请求继续交流.协议规定HTTP/1.0如果想要保持长连接,需要在请求头中加上Connection: keep-alive.keep-alive的优点：\n\n * 较少的CPU和内存的使用（由于同时打开的连接的减少了）\n * 允许请求和应答的HTTP管线化\n * 降低拥塞控制 （TCP连接减少了）\n * 减少了后续请求的延迟（无需再进行握手）\n * 报告错误无需关闭TCP连\n\n# 为什么有了HTTP为什么还要HTTPS？\nhttps是安全版的http,因为http协议的数据都是明文进行传输的,所以对于一些敏感信息的传输就很不安全,HTTPS就是为了解决HTTP的不安全而生的.",normalizedContent:"# http\n# http有哪些方法\n-http1.0定义了三种请求方法： get, post和 head方法\n\n * http1.1新增了五种请求方法：options, put, delete, trace和connect\n\n# 这些方法具体哪些作用\n * get: 通常用于请求服务器发送某些资源\n * head: 请求资源的头部信息, 并且这些头部与 http get 方法请求时返回的一致. 该请求方法的一个使用场景是在下载一个大文件前先获取其大小再决定是否要下载, 以此可以节约带宽资源\n * options: 用于获取目的资源所支持的通信选项\n * post: 发送数据给服务器\n * put: 用于新增资源或者使用请求中的有效负载替换目标资源的表现形式\n * delete: 用于删除指定的资源\n * patch: 用于对资源进行部分修改\n * connect: http/1.1协议中预留给能够将连接改为管道方式的代理服务器\n * trace: 回显服务器收到的请求,主要用于测试或诊断\n\n# get和post有什么区别？\n * 数据传输方式不同：get请求通过url传输数据,而post的数据通过请求体传输.\n * 安全性不同：post的数据因为在请求主体内,所以有一定的安全性保证,而get的数据在url中,通过历史记录,缓存很容易查到数据信息.\n * 数据类型不同：get只允许 ascii 字符,而post无限制\n * get无害： 刷新、后退等浏览器操作get请求是无害的,post可能重复提交表单\n * 特性不同：get是安全（这里的安全是指只读特性,就是使用这个方法不会引起服务器状态变化）且幂等（幂等的概念是指同一个请求方法执行多次和仅执行一次的效果完全相同）,而post是非安全非幂等\n\n# put和post都是给服务器发送新增资源,有什么区别？\nput 和post方法的区别是,put方法是幂等的：连续调用一次或者多次的效果相同（无副作用）,而post方法是非幂等的.\n\n> 『post表示创建资源,put表示更新资源』这种说法是错误的,两个都能创建资源,根本区别就在于幂等性\n\n\n# put和patch都是给服务器发送修改资源,有什么区别？\nput和patch都是更新资源,而patch用来对已知资源进行局部更新.\n\n# http的请求报文是什么样的？\n请求报文有4部分组成:\n\n * 请求行 请求方法字段、url字段、http协议版本字段.它们用空格分隔.例如,get /index.html http/1.1.\n   \n   \n * 请求头部 请求头部由关键字/值对组成,每行一对,关键字和值用英文冒号“:”分隔 1.user-agent：产生请求的浏览器类型. 2.accept：客户端可识别的内容类型列表. 3.host：请求的主机名,允许多个域名同处一个ip地址,即虚拟主机.\n   \n   \n * 空行\n   \n   \n * 请求体 post put等请求携带的数据\n   \n   \n\n# http的响应报文是什么样的？\n请求报文有4部分组成:\n\n * 响应行 由协议版本,状态码和状态码的原因短语组成,例如http/1.1 200 ok.\n * 响应头 响应部首组成\n * 空行\n * 响应体 服务器响应的数据\n\n# 同样是重定向307,303,302的区别？\n302是http1.0的协议状态码,在http1.1版本的时候为了细化302状态码又出来了两个303和307.303明确表示客户端应当采用get方法获取资源,他会把post请求变为get请求进行重定向.307会遵照浏览器标准,不会从post变为get.\n\n# http的keep-alive是干什么的？\n在早期的http/1.0中,每次http请求都要创建一个连接,而创建连接的过程需要消耗资源和时间,为了减少资源消耗,缩短响应时间,就需要重用连接.在后来的http/1.0中以及http/1.1中,引入了重用连接的机制,就是在http请求头中加入connection: keep-alive来告诉对方这个请求响应完成后不要关闭,下一次咱们还用这个请求继续交流.协议规定http/1.0如果想要保持长连接,需要在请求头中加上connection: keep-alive.keep-alive的优点：\n\n * 较少的cpu和内存的使用（由于同时打开的连接的减少了）\n * 允许请求和应答的http管线化\n * 降低拥塞控制 （tcp连接减少了）\n * 减少了后续请求的延迟（无需再进行握手）\n * 报告错误无需关闭tcp连\n\n# 为什么有了http为什么还要https？\nhttps是安全版的http,因为http协议的数据都是明文进行传输的,所以对于一些敏感信息的传输就很不安全,https就是为了解决http的不安全而生的.",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/interview/javascript.html",relativePath:"interview/javascript.md",key:"v-527ede89",path:"/interview/javascript.html",headers:[{level:2,title:"前端安全,理解 xss 和 csrf",slug:"前端安全-理解-xss-和-csrf",normalizedTitle:"前端安全,理解 xss 和 csrf",charIndex:54},{level:2,title:"数组快速排序",slug:"数组快速排序",normalizedTitle:"数组快速排序",charIndex:540},{level:2,title:"cookie,sessionStorage 和 localStorage 的区别",slug:"cookie-sessionstorage-和-localstorage-的区别",normalizedTitle:"cookie,sessionstorage 和 localstorage 的区别",charIndex:590},{level:2,title:"javascript 中= =和= = =的区别",slug:"javascript-中-和-的区别",normalizedTitle:"javascript 中= =和= = =的区别",charIndex:915},{level:2,title:"闭包",slug:"闭包",normalizedTitle:"闭包",charIndex:1877},{level:2,title:"哪些操作会导致内存泄漏",slug:"哪些操作会导致内存泄漏",normalizedTitle:"哪些操作会导致内存泄漏",charIndex:2324},{level:2,title:"面向对象过程的三大基本特征",slug:"面向对象过程的三大基本特征",normalizedTitle:"面向对象过程的三大基本特征",charIndex:2619},{level:2,title:"如何判断一个变量是对象还是数组",slug:"如何判断一个变量是对象还是数组",normalizedTitle:"如何判断一个变量是对象还是数组",charIndex:2647},{level:2,title:"ES5 和 ES6 中继承有啥区别",slug:"es5-和-es6-中继承有啥区别",normalizedTitle:"es5 和 es6 中继承有啥区别",charIndex:2745},{level:2,title:"值类型和引用类型的区别",slug:"值类型和引用类型的区别",normalizedTitle:"值类型和引用类型的区别",charIndex:3110},{level:2,title:"前端如何对页面性能进行优化",slug:"前端如何对页面性能进行优化",normalizedTitle:"前端如何对页面性能进行优化",charIndex:3683},{level:2,title:"使用 typeof bar ===“object”来确定 bar,是否是一个对象时有什么潜在的缺陷？这个陷阱如何避免？",slug:"使用-typeof-bar-object-来确定-bar-是否是一个对象时有什么潜在的缺陷-这个陷阱如何避免",normalizedTitle:"使用 typeof bar ===“object”来确定 bar,是否是一个对象时有什么潜在的缺陷？这个陷阱如何避免？",charIndex:4147},{level:2,title:"什么是 NaN",slug:"什么是-nan",normalizedTitle:"什么是 nan",charIndex:4504},{level:2,title:"原型/构造函数/实例",slug:"原型-构造函数-实例",normalizedTitle:"原型/构造函数/实例",charIndex:4537},{level:2,title:"原型链",slug:"原型链",normalizedTitle:"原型链",charIndex:5063},{level:2,title:"数组",slug:"数组",normalizedTitle:"数组",charIndex:540},{level:2,title:"从输入 url 到展示",slug:"从输入-url-到展示",normalizedTitle:"从输入 url 到展示",charIndex:6265},{level:2,title:"promise",slug:"promise",normalizedTitle:"promise",charIndex:6668},{level:2,title:"For of 和 for (let i = 0; i < ...) 哪种写法性能更高？为什么？",slug:"for-of-和-for-let-i-0-i-哪种写法性能更高-为什么",normalizedTitle:"for of 和 for (let i = 0; i &lt; ...) 哪种写法性能更高？为什么？",charIndex:null},{level:2,title:"函数柯里化",slug:"函数柯里化",normalizedTitle:"函数柯里化",charIndex:7606},{level:2,title:"jsonp 原理",slug:"jsonp-原理",normalizedTitle:"jsonp 原理",charIndex:8128},{level:2,title:"javascript 设计模式",slug:"javascript-设计模式",normalizedTitle:"javascript 设计模式",charIndex:8267},{level:2,title:"js 判断数组的方法",slug:"js-判断数组的方法",normalizedTitle:"js 判断数组的方法",charIndex:8766}],lastUpdated:"3/3/2021, 9:34:15 AM",headersStr:"前端安全,理解 xss 和 csrf 数组快速排序 cookie,sessionStorage 和 localStorage 的区别 javascript 中= =和= = =的区别 闭包 哪些操作会导致内存泄漏 面向对象过程的三大基本特征 如何判断一个变量是对象还是数组 ES5 和 ES6 中继承有啥区别 值类型和引用类型的区别 前端如何对页面性能进行优化 使用 typeof bar ===“object”来确定 bar,是否是一个对象时有什么潜在的缺陷？这个陷阱如何避免？ 什么是 NaN 原型/构造函数/实例 原型链 数组 从输入 url 到展示 promise For of 和 for (let i = 0; i < ...) 哪种写法性能更高？为什么？ 函数柯里化 jsonp 原理 javascript 设计模式 js 判断数组的方法",content:'通过 Object.prototype.toString.call()做判断# Javascript\n\n# 前端安全,理解 xss 和 csrf\n答案XSS：跨站脚本攻击\n\n它允许用户将恶意代码植入到提供给其他用户使用的页面中,可以简单的理解为一种 javascript 代码注入.\n\nXSS 的防御措施：\n\n * 1.过滤转义输入输出\n * 2.避免使用 eval、new Function 等执行字符串的方法,除非确定字符串和用户输入无关\n * 3.使用 cookie 的 httpOnly 属性,加上了这个属性的 cookie 字段,js 是无法进行读写的\n * 4.使用 innerHTML、document.write 的时候,如果数据是用户输入的,那么需要对象关键字符进行过滤与转义\n\nCSRF：跨站请求伪造\n\n其实就是网站中的一些提交行为,被黑客利用,在你访问黑客的网站的时候进行操作,会被操作到其他网站上;\n\nCSRF 防御措施：\n\n * 1.检测 http referer 是否是同域名\n * 2.避免登录的 session 长时间存储在客户端中\n * 3.关键请求使用验证码或者 token 机制\n\n其他的一些攻击方法还有 HTTP 劫持、界面操作劫持\n\n# 数组快速排序\n答案\n\nfunction quickSort(arr) {\n\n  //如果数组\n\n# cookie,sessionStorage 和 localStorage 的区别\n答案 * cookie 在浏览器和服务器间来回传递. sessionStorage 和 localStorage 不会\n * sessionStorage 和 localStorage 的存储空间更大；\n * sessionStorage 和 localStorage 有更多丰富易用的接口；\n * sessionStorage 和 localStorage 各自独立的存储空间；\n * sessionStorage：仅在当前浏览器窗口关闭前有效,自然也就不可能持久保持；\n * localStorage：始终有效,窗口或浏览器关闭也一直保存,因此用作持久数据\n\n# javascript 中= =和= = =的区别\n答案一言以蔽之：==先转换类型再比较,===先判断类型,如果不是同一类型直接为 false.\n\n===表示恒等于,比较的两边要绝对的相同\n\n\n\n\n\nalert(0 == ""); // true\n\n\nalert(0 == false); // true\n\n\nalert("" == false); // true\n\n\nalert(0 === ""); // false\n\n\nalert(0 === false); // false\n\n\nalert("" === false); // false\n\n\n\n\n\n先说 ===,这个比较简单,具体比较规则如下：\n\n1、如果类型不同,就[不相等]\n\n2、如果两个都是数值,并且是同一个值,那么[相等]；(！例外)的是,如果其中至少一个是 NaN,那么[不相等].（判断一个值是否是 NaN,只能用 isNaN()来判断）\n\n3、如果两个都是字符串,每个位置的字符都一样,那么[相等]；否则[不相等].\n\n4、如果两个值都是 true,或者都是 false,那么[相等].\n\n5、如果两个值都引用同一个对象或函数,那么[相等]；否则[不相等].\n\n6、如果两个值都是 null,或者都是 undefined,那么[相等].\n\n再说 ==,具体比较规则如下：\n\n1、如果两个值类型相同,进行 === 比较,比较规则同上\n\n2、如果两个值类型不同,他们可能相等.根据下面规则进行类型转换再比较：\n\na、如果一个是 null、一个是 undefined,那么[相等].\n\nb、如果一个是字符串,一个是数值,把字符串转换成数值再进行比较.\n\nc、如果任一值是 true,把它转换成 1 再比较；如果任一值是 false,把它转换成 0 再比较.\n\nd、如果一个是对象,另一个是数值或字符串,把对象转换成基础类型的值再比较.对象转换成基础类型,利用它的 toString 或者 valueOf 方法.js 核心内置类,会尝试 valueOf 先于 toString；例外的是 Date,Date 利用的是 toString 转换.非 js 核心的对象,令说（比较麻烦,我也不大懂）\n\ne、任何其他组合（array 数组等）,都[不相等].\n\n# 闭包\n答案闭包是指在 JavaScript 中,内部函数总是可以访问其所在的外部函数中声明的参数和变量,即使在其外部函数被返回了之后.然后闭包可以把一个局部变量传递到外部供其他函数或是变量使用,也可以把一个变量长时间的保留在系统的内存中\n\n换句话来说函数 A 内部有一个函数 B,函数 B 可以访问到函数 A 中的变量,那么函数 B 就是闭包..\n\n简单的说就是提升作用域\n\n闭包的缺点：\n\n 1. 更多的内存消耗\n 2. 性能问题（跨作用域访问）\n 3. 滥用闭包函数会造成内存泄露,因为闭包中引用到的包裹函数中定义的变量都永远不会被释放,所以我们应该在必要的时候,及时释放这个闭包函数\n\n闭包优点:\n\n 1. JavaScript 允许你使用在当前函数以外定义的变量\n    \n    \n 2. 即使外部函数已经返回,当前函数仍然可以引用在外部函数所定义的变量\n    \n    \n 3. 闭包可以更新外部变量的值\n    \n    \n 4. 用闭包模拟私有方法\n    \n    \n\n# 哪些操作会导致内存泄漏\n答案 1. setTimeout 的第一个参数使用字符串而非函数的话,会引发内存泄漏.\n 2. 闭包\n 3. 控制台日志\n 4. 循环（在两个对象彼此引用且彼此保留时,就会产生一个循环）\n\n * 意外的全局变量: 无法被回收\n * 定时器: 未被正确关闭,导致所引用的外部变量无法被释放\n * 事件监听: 没有正确销毁 (低版本浏览器可能出现)\n * 闭包: 会导致父级中的变量无法被释放\n * dom 引用: dom 元素被删除时,内存中的引用未被正确清空\n\n可用 chrome 中的 timeline 进行内存标记,可视化查看内存的变化情况,找出异常点.\n\n# 面向对象过程的三大基本特征\n答案继承,多态,封装\n\n# 如何判断一个变量是对象还是数组\n答案\n\nprototype.toString.call(),\n\n  这个方法兼容性最好,\n\n  千万不要使用typeof,\n\n  都会返回object;\n\n\n\n# ES5 和 ES6 中继承有啥区别\n答案ES5 的继承时通过 prototype 或构造函数机制来实现.ES5 的继承实质上是先创建子类的实例对象,然后再将父类的方法添加到 this 上（Parent.apply(this)）.\n\nES6 的继承机制完全不同,实质上是先创建父类的实例对象 this（所以必须先调用父类的 super()方法）,然后再用子类的构造函数修改 this.\n\n具体的：ES6 通过 class 关键字定义类,里面有构造方法,类之间通过 extends 关键字实现继承.子类必须在 constructor 方法中调用 super 方法,否则新建实例报错.因为子类没有自己的 this 对象,而是继承了父类的 this 对象,然后对其进行加工.如果不调用 super 方法,子类得不到 this 对象\n\n# 值类型和引用类型的区别\n答案（1）值类型：\n\n1.占用空间固定,保存在栈中（当一个方法执行时,每个方法都会建立自己的内存栈,在这个方法内定义的变量将会逐个放入这块栈内存里,随着方法的执行结束,这个方法的内存栈也将自然销毁了.因此,所有在方法中定义的变量都是放在栈内存中的；栈中存储的是基础变量以及一些对象的引用变量,基础变量的值是存储在栈中,而引用变量存储在栈中的是指向堆中的数组或者对象的地址,这就是为何修改引用类型总会影响到其他指向这个地址的引用变量）\n\n2.保存与复制的是值本身\n\n3.保存与复制的是值本身\n\n4.使用 typeof 检测数据的类型\n\n5.基本类型数据是值类型\n\n（2）引用类型：\n\n1.占用空间不固定,保存在堆中（当我们在程序中创建一个对象时,这个对象将被保存到运行时数据区中,以便反复利用（因为对象的创建成本通常较大）,这个运行时数据区就是堆内存.堆内存中的对象不会随方法的结束而销毁,即使方法结束后,这个对象还可能被另一个引用变量所引用（方法的参数传递时很常见）,则这个对象依然不会被销毁,只有当一个对象没有任何引用变量引用它时,系统的垃圾回收机制才会在核实的时候回收它.）\n\n2.保存与复制的是指向对象的一个指针\n\n3.使用 instanceof 检测数据类型\n\n4.使用 new()方法构造出的对象是引用型\n\n# 前端如何对页面性能进行优化\n答案1.减少 http 请求\n\n2.减少 http 请求大小\n\n3.将 CSS 或 JavaScript 放到外部文件中,避免使用 <style>或者<script>标签直接引入（根据实际文件大小和业务场景来选择)\n\n4.避免页面空的 href 和 src\n\n5.为 HTML 指定 Cache-Control 或 Expires\n\n6.合理设置 Etag 和 Last-Modified\n\n7.减少页面重定向\n\n8.使用静态资源分域存放来增加下载并行数\n\n9.使用静态资源 CDN 来存储文件\n\n10.使用 CDN Combo 下载传输内容\n\n11.使用可缓存的 AJAX\n\n12.使用 GET 来完成 AJAX 请求\n\n13.减少 Cookie 的大小并进行 Cookie 隔离\n\n14.缩小 favicon.ico 并缓存\n\n15.推荐使用异步 JavaScript 资源\n\n16.消除阻塞渲染的 CSS 及 JavaScript\n\n17.避免使用 CSSimport 引用加载 CSS\n\n# 使用 typeof bar ===“object”来确定 bar,是否是一个对象时有什么潜在的缺陷？这个陷阱如何避免？\n答案\n\n如果bar的值为null的话,这样的话判断依旧成立,故错误\n\n1.bar是个函数\n\nconsole.log((bar !== null) && ((typeof bar === "object") || (typeof bar === "function")));\n\n2.bar是个数组\n\nconsole.log((bar !== null) && (typeof bar === "object") && (toString.call(bar) !== "[object Array]"));\n\n\nES5\n\nconsole.log(Array.isArray(bar));\n\n\n\n# 什么是 NaN\n答案\n\nNumber.isNaN();\n\n\n\n# 原型/构造函数/实例\n答案 * 原型(prototype): 一个简单的对象,用于实现对象的 属性继承.可以简单的理解成对象的爹.在 Firefox 和 Chrome 中,每个 JavaScript 对象中都包含一个proto (非标准)的属性指向它爹(该对象的原型),可 obj.proto进行访问.\n * 构造函数: 可以通过 new 来 新建一个对象 的函数.\n * 实例: 通过构造函数和 new 创建出来的对象,便是实例. 实例通过proto指向原型,通过 constructor 指向构造函数.\n\n\n\n\n//实例\n\nconst dog = new Object();\n\n\n\n则此时, dog, 构造函数为 Object,我们知道,构造函数拥有一个 prototype 的属性指向原型,因此原型为:\n\n\n\n//原型\n\nconst prototype = Object.prototype;\n\n\n\n这里我们可以看出关系\n\n\n\n\n实例.__proto__ === 原型;\n\n\n原型.constructor === 构造函数;\n\n\n构造函数.prototype === 原型;\n\n\n实例.constructorr === 构造函数;\n\n\n\n\n\n# 原型链\n答案原型链是由原型对象组成,每个对象都有 proto 属性,指向了创建该对象的构造函数的原型,proto 将对象连接起来组成了原型链.是一个用来实现继承和共享属性的有限的对象链.\n\n * 属性查找机制: 当查找对象的属性时,如果实例对象自身不存在该属性,则沿着原型链往上一级查找,找到时则输出,不存在时,则继续沿着原型链往上一级查找,直至最顶级的原型对象 Object.prototype,如还是没找到,则输出 undefined；\n   \n   \n * 属性修改机制: 只会修改实例对象本身的属性,如果不存在,则进行添加该属性,如果需要修改原型的属性时,则可以用: b.prototype.x = 2；但是这样会造成所有继承于该对象的实例的属性发生改变.\n   \n   \n\n# 数组\n答案 * map: 遍历数组,返回回调返回值组成的新数组\n * forEach: 无法 break,可以用 try/catch 中 throw new Error 来停止\n * filter: 过滤\n * some: 有一项返回 true,则整体为 true\n * every: 有一项返回 false,则整体为 false\n * join: 通过指定连接符生成字符串\n * push / pop: 末尾推入和弹出,改变原数组, 返回推入/弹出项\n * unshift / shift: 头部推入和弹出,改变原数组,返回操作项\n * sort(fn) / reverse: 排序与反转,改变原数组\n * concat: 连接数组,不影响原数组, 浅拷贝\n * slice(start, end): 返回截断后的新数组,不改变原数组\n * splice(start, number, value...): 返回删除元素组成的数组,value 为插入项,改变原数组\n * indexOf / lastIndexOf(value, fromIndex): 查找数组项,返回对应的下标\n * reduce / reduceRight(fn(prev, cur), defaultPrev): 两两执行,prev 为上次化简函数的 return 值,cur 为当前值(从第二项开始)\n * 数组乱序：\n\n\n\n\nvar arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\narr.sort(function() {\n\n  return Math.random() - 0.5;\n\n});\n\n\n\n * 数组拆解: flat: [1,[2,3]] --\x3e [1, 2, 3]\n\n\n\n\narr.prototype.flat = function() {\n\n  this.toString()\n\n    .split(",")\n\n    .map((item) => +item);\n\n};\n\n\n\n# 从输入 url 到展示\n答案 * DNS 解析\n   \n   \n * TCP 三次握手\n   \n   \n * 发送请求,分析 url,设置请求报文(头,主体)\n   \n   \n * 服务器返回请求的文件 (html)\n   \n   \n * 浏览器渲染\n   \n   \n * HTML parser --\x3e DOM Tree\n   \n    * 标记化算法,进行元素状态的标记\n    * dom 树构建\n   \n   \n * CSS parser --\x3e Style Tree\n   \n    * 解析 css 代码,生成样式树\n   \n   \n * attachment --\x3e Render Tree\n   \n    * 结合 dom 树 与 style 树,生成渲染树\n   \n   \n * layout: 布局\n   \n   \n * GPU painting: 像素绘制页面\n   \n   \n\n# promise\n答案Promise 是异步编程的一种解决方案,比传统的解决方案——回调函数和事件——更合理和更强大.\n\nPromise 对象有以下两个特点.\n\n * （1）对象的状态不受外界影响.Promise 对象代表一个异步操作,有三种状态：pending（进行中）、fulfilled（已成功）和 rejected（已失败）.只有异步操作的结果,可以决定当前是哪一种状态,任何其他操作都无法改变这个状态.这也是 Promise 这个名字的由来,它的英语意思就是“承诺”,表示其他手段无法改变.\n * （2）一旦状态改变,就不会再变,任何时候都可以得到这个结果.Promise 对象的状态改变,只有两种可能：从 pending 变为 fulfilled 和从 pending 变为 rejected.只要这两种情况发生,状态就凝固了,不会再变了,会一直保持这个结果,这时就称为 resolved（已定型）.如果改变已经发生了,你再对 Promise 对象添加回调函数,也会立即得到这个结果.这与事件（Event）完全不同,事件的特点是,如果你错过了它,再去监听,是得不到结果的.\n * 简单例子\n\n\n\nfunction timeout(ms) {\n\n  return new Promise((resolve, reject) => {\n\n    setTimeout(resolve, ms, "done");\n\n  });\n\n}\n\n\ntimeout(100).then((value) => {\n\n  console.log(value);\n\n});\n\n\n\n# For of 和 for (let i = 0; i < ...) 哪种写法性能更高？为什么？\n答案for > for-of > for-in\n\nfor-in循环除了遍历数组元素以外,还会遍历自定义属性。\n\nfor-of循环不会循环对象的key，只会循环出数组的value，因此for-of不能循环遍历普通对象。\n\nfor-of和for-in的key是String类型，有转换过程，开销比较大，但是for循环的 i 是Number类型，开销较小。\n\n不过for-of语法在内存占用上也有一定的优势。\n\n# 函数柯里化\n答案柯里化是函数式编程的一个重要技巧,将使用多个参数的一个函数转换成一系列使用一个参数的函数的技术\n\n函数式编程另一个重要的函数 compose,能够将函数进行组合,而组合的函数只接受一个参数,所以如果有接受多个函数的需求并且需要用到 compose 进行函数组合,就需要使用柯里化对准备组合的函数进行部分求值,让它始终只接受一个参数\n\n\n\nfunction curry(fn) {\n\n  if (fn.length  {\n\n    if (fn.length === args.length) {\n\n      return fn(...args);\n\n    } else {\n\n      return (...args) => {\n\n        return generator(...args, ...args2);\n\n      };\n\n    }\n\n  };\n\n  return generator;\n\n}\n\n\nlet add = (a, b, c, d) => a + b + c + d;\n\nconst curriedAdd = curry(add);\n\nadd(5, 6, 7, 8); //26\n\n\n\n# jsonp 原理\n答案（1）首先是利用 script 标签的 src 属性来实现跨域\n\n（2）通过将前端方法作为参数传递到服务器端,然后由服务器端注入参数之后再返回,实现服务器端向客户端通信\n\n（3）由于使用 script 标签的 src 属性,因此只支持 get 方法\n\n# javascript 设计模式\n答案创建型:\n\n1.抽象工厂模式（Abstract Factory）\n\n2.构建者模式（Builder）\n\n3.工厂方法模式（Factory Method）\n\n4.原型模式（Prototype）\n\n5.单例模式（Singleton）\n\n结构型：\n\n1.适配器模式（Adapter）\n\n2.桥接模式（Bridge）\n\n3.组合模式（Compositor）\n\n4.装饰者模式（Decorator）\n\n5.外观模式（Facade）\n\n6.享元模式（Flyweight）\n\n7.代理模式（Proxy）\n\n行为：\n\n1.职责链模式（Chain of Responsibility）\n\n2.命令模式（Command）\n\n3.解释器模式（Interpreter）\n\n4.迭代器模式（Iterator）\n\n5.中介者模式（Mediator）\n\n6.备忘录模式（Memento）\n\n7.观察者模式（Observer）\n\n8.状态模式（State）\n\n9.策略模式（Strategy）\n\n10.模板方法模式（Template Method）\n\n11.访问者模式（Visitor）\n\n# js 判断数组的方法\n答案- 通过Object.prototype.toString.call()做判断 - `obj.__proto__` === Array.prototype; - Array.isArrray() - obj instanceof Array - Array.prototype.isPrototypeOf(obj)',normalizedContent:'通过 object.prototype.tostring.call()做判断# javascript\n\n# 前端安全,理解 xss 和 csrf\n答案xss：跨站脚本攻击\n\n它允许用户将恶意代码植入到提供给其他用户使用的页面中,可以简单的理解为一种 javascript 代码注入.\n\nxss 的防御措施：\n\n * 1.过滤转义输入输出\n * 2.避免使用 eval、new function 等执行字符串的方法,除非确定字符串和用户输入无关\n * 3.使用 cookie 的 httponly 属性,加上了这个属性的 cookie 字段,js 是无法进行读写的\n * 4.使用 innerhtml、document.write 的时候,如果数据是用户输入的,那么需要对象关键字符进行过滤与转义\n\ncsrf：跨站请求伪造\n\n其实就是网站中的一些提交行为,被黑客利用,在你访问黑客的网站的时候进行操作,会被操作到其他网站上;\n\ncsrf 防御措施：\n\n * 1.检测 http referer 是否是同域名\n * 2.避免登录的 session 长时间存储在客户端中\n * 3.关键请求使用验证码或者 token 机制\n\n其他的一些攻击方法还有 http 劫持、界面操作劫持\n\n# 数组快速排序\n答案\n\nfunction quicksort(arr) {\n\n  //如果数组\n\n# cookie,sessionstorage 和 localstorage 的区别\n答案 * cookie 在浏览器和服务器间来回传递. sessionstorage 和 localstorage 不会\n * sessionstorage 和 localstorage 的存储空间更大；\n * sessionstorage 和 localstorage 有更多丰富易用的接口；\n * sessionstorage 和 localstorage 各自独立的存储空间；\n * sessionstorage：仅在当前浏览器窗口关闭前有效,自然也就不可能持久保持；\n * localstorage：始终有效,窗口或浏览器关闭也一直保存,因此用作持久数据\n\n# javascript 中= =和= = =的区别\n答案一言以蔽之：==先转换类型再比较,===先判断类型,如果不是同一类型直接为 false.\n\n===表示恒等于,比较的两边要绝对的相同\n\n\n\n\n\nalert(0 == ""); // true\n\n\nalert(0 == false); // true\n\n\nalert("" == false); // true\n\n\nalert(0 === ""); // false\n\n\nalert(0 === false); // false\n\n\nalert("" === false); // false\n\n\n\n\n\n先说 ===,这个比较简单,具体比较规则如下：\n\n1、如果类型不同,就[不相等]\n\n2、如果两个都是数值,并且是同一个值,那么[相等]；(！例外)的是,如果其中至少一个是 nan,那么[不相等].（判断一个值是否是 nan,只能用 isnan()来判断）\n\n3、如果两个都是字符串,每个位置的字符都一样,那么[相等]；否则[不相等].\n\n4、如果两个值都是 true,或者都是 false,那么[相等].\n\n5、如果两个值都引用同一个对象或函数,那么[相等]；否则[不相等].\n\n6、如果两个值都是 null,或者都是 undefined,那么[相等].\n\n再说 ==,具体比较规则如下：\n\n1、如果两个值类型相同,进行 === 比较,比较规则同上\n\n2、如果两个值类型不同,他们可能相等.根据下面规则进行类型转换再比较：\n\na、如果一个是 null、一个是 undefined,那么[相等].\n\nb、如果一个是字符串,一个是数值,把字符串转换成数值再进行比较.\n\nc、如果任一值是 true,把它转换成 1 再比较；如果任一值是 false,把它转换成 0 再比较.\n\nd、如果一个是对象,另一个是数值或字符串,把对象转换成基础类型的值再比较.对象转换成基础类型,利用它的 tostring 或者 valueof 方法.js 核心内置类,会尝试 valueof 先于 tostring；例外的是 date,date 利用的是 tostring 转换.非 js 核心的对象,令说（比较麻烦,我也不大懂）\n\ne、任何其他组合（array 数组等）,都[不相等].\n\n# 闭包\n答案闭包是指在 javascript 中,内部函数总是可以访问其所在的外部函数中声明的参数和变量,即使在其外部函数被返回了之后.然后闭包可以把一个局部变量传递到外部供其他函数或是变量使用,也可以把一个变量长时间的保留在系统的内存中\n\n换句话来说函数 a 内部有一个函数 b,函数 b 可以访问到函数 a 中的变量,那么函数 b 就是闭包..\n\n简单的说就是提升作用域\n\n闭包的缺点：\n\n 1. 更多的内存消耗\n 2. 性能问题（跨作用域访问）\n 3. 滥用闭包函数会造成内存泄露,因为闭包中引用到的包裹函数中定义的变量都永远不会被释放,所以我们应该在必要的时候,及时释放这个闭包函数\n\n闭包优点:\n\n 1. javascript 允许你使用在当前函数以外定义的变量\n    \n    \n 2. 即使外部函数已经返回,当前函数仍然可以引用在外部函数所定义的变量\n    \n    \n 3. 闭包可以更新外部变量的值\n    \n    \n 4. 用闭包模拟私有方法\n    \n    \n\n# 哪些操作会导致内存泄漏\n答案 1. settimeout 的第一个参数使用字符串而非函数的话,会引发内存泄漏.\n 2. 闭包\n 3. 控制台日志\n 4. 循环（在两个对象彼此引用且彼此保留时,就会产生一个循环）\n\n * 意外的全局变量: 无法被回收\n * 定时器: 未被正确关闭,导致所引用的外部变量无法被释放\n * 事件监听: 没有正确销毁 (低版本浏览器可能出现)\n * 闭包: 会导致父级中的变量无法被释放\n * dom 引用: dom 元素被删除时,内存中的引用未被正确清空\n\n可用 chrome 中的 timeline 进行内存标记,可视化查看内存的变化情况,找出异常点.\n\n# 面向对象过程的三大基本特征\n答案继承,多态,封装\n\n# 如何判断一个变量是对象还是数组\n答案\n\nprototype.tostring.call(),\n\n  这个方法兼容性最好,\n\n  千万不要使用typeof,\n\n  都会返回object;\n\n\n\n# es5 和 es6 中继承有啥区别\n答案es5 的继承时通过 prototype 或构造函数机制来实现.es5 的继承实质上是先创建子类的实例对象,然后再将父类的方法添加到 this 上（parent.apply(this)）.\n\nes6 的继承机制完全不同,实质上是先创建父类的实例对象 this（所以必须先调用父类的 super()方法）,然后再用子类的构造函数修改 this.\n\n具体的：es6 通过 class 关键字定义类,里面有构造方法,类之间通过 extends 关键字实现继承.子类必须在 constructor 方法中调用 super 方法,否则新建实例报错.因为子类没有自己的 this 对象,而是继承了父类的 this 对象,然后对其进行加工.如果不调用 super 方法,子类得不到 this 对象\n\n# 值类型和引用类型的区别\n答案（1）值类型：\n\n1.占用空间固定,保存在栈中（当一个方法执行时,每个方法都会建立自己的内存栈,在这个方法内定义的变量将会逐个放入这块栈内存里,随着方法的执行结束,这个方法的内存栈也将自然销毁了.因此,所有在方法中定义的变量都是放在栈内存中的；栈中存储的是基础变量以及一些对象的引用变量,基础变量的值是存储在栈中,而引用变量存储在栈中的是指向堆中的数组或者对象的地址,这就是为何修改引用类型总会影响到其他指向这个地址的引用变量）\n\n2.保存与复制的是值本身\n\n3.保存与复制的是值本身\n\n4.使用 typeof 检测数据的类型\n\n5.基本类型数据是值类型\n\n（2）引用类型：\n\n1.占用空间不固定,保存在堆中（当我们在程序中创建一个对象时,这个对象将被保存到运行时数据区中,以便反复利用（因为对象的创建成本通常较大）,这个运行时数据区就是堆内存.堆内存中的对象不会随方法的结束而销毁,即使方法结束后,这个对象还可能被另一个引用变量所引用（方法的参数传递时很常见）,则这个对象依然不会被销毁,只有当一个对象没有任何引用变量引用它时,系统的垃圾回收机制才会在核实的时候回收它.）\n\n2.保存与复制的是指向对象的一个指针\n\n3.使用 instanceof 检测数据类型\n\n4.使用 new()方法构造出的对象是引用型\n\n# 前端如何对页面性能进行优化\n答案1.减少 http 请求\n\n2.减少 http 请求大小\n\n3.将 css 或 javascript 放到外部文件中,避免使用 <style>或者<script>标签直接引入（根据实际文件大小和业务场景来选择)\n\n4.避免页面空的 href 和 src\n\n5.为 html 指定 cache-control 或 expires\n\n6.合理设置 etag 和 last-modified\n\n7.减少页面重定向\n\n8.使用静态资源分域存放来增加下载并行数\n\n9.使用静态资源 cdn 来存储文件\n\n10.使用 cdn combo 下载传输内容\n\n11.使用可缓存的 ajax\n\n12.使用 get 来完成 ajax 请求\n\n13.减少 cookie 的大小并进行 cookie 隔离\n\n14.缩小 favicon.ico 并缓存\n\n15.推荐使用异步 javascript 资源\n\n16.消除阻塞渲染的 css 及 javascript\n\n17.避免使用 cssimport 引用加载 css\n\n# 使用 typeof bar ===“object”来确定 bar,是否是一个对象时有什么潜在的缺陷？这个陷阱如何避免？\n答案\n\n如果bar的值为null的话,这样的话判断依旧成立,故错误\n\n1.bar是个函数\n\nconsole.log((bar !== null) && ((typeof bar === "object") || (typeof bar === "function")));\n\n2.bar是个数组\n\nconsole.log((bar !== null) && (typeof bar === "object") && (tostring.call(bar) !== "[object array]"));\n\n\nes5\n\nconsole.log(array.isarray(bar));\n\n\n\n# 什么是 nan\n答案\n\nnumber.isnan();\n\n\n\n# 原型/构造函数/实例\n答案 * 原型(prototype): 一个简单的对象,用于实现对象的 属性继承.可以简单的理解成对象的爹.在 firefox 和 chrome 中,每个 javascript 对象中都包含一个proto (非标准)的属性指向它爹(该对象的原型),可 obj.proto进行访问.\n * 构造函数: 可以通过 new 来 新建一个对象 的函数.\n * 实例: 通过构造函数和 new 创建出来的对象,便是实例. 实例通过proto指向原型,通过 constructor 指向构造函数.\n\n\n\n\n//实例\n\nconst dog = new object();\n\n\n\n则此时, dog, 构造函数为 object,我们知道,构造函数拥有一个 prototype 的属性指向原型,因此原型为:\n\n\n\n//原型\n\nconst prototype = object.prototype;\n\n\n\n这里我们可以看出关系\n\n\n\n\n实例.__proto__ === 原型;\n\n\n原型.constructor === 构造函数;\n\n\n构造函数.prototype === 原型;\n\n\n实例.constructorr === 构造函数;\n\n\n\n\n\n# 原型链\n答案原型链是由原型对象组成,每个对象都有 proto 属性,指向了创建该对象的构造函数的原型,proto 将对象连接起来组成了原型链.是一个用来实现继承和共享属性的有限的对象链.\n\n * 属性查找机制: 当查找对象的属性时,如果实例对象自身不存在该属性,则沿着原型链往上一级查找,找到时则输出,不存在时,则继续沿着原型链往上一级查找,直至最顶级的原型对象 object.prototype,如还是没找到,则输出 undefined；\n   \n   \n * 属性修改机制: 只会修改实例对象本身的属性,如果不存在,则进行添加该属性,如果需要修改原型的属性时,则可以用: b.prototype.x = 2；但是这样会造成所有继承于该对象的实例的属性发生改变.\n   \n   \n\n# 数组\n答案 * map: 遍历数组,返回回调返回值组成的新数组\n * foreach: 无法 break,可以用 try/catch 中 throw new error 来停止\n * filter: 过滤\n * some: 有一项返回 true,则整体为 true\n * every: 有一项返回 false,则整体为 false\n * join: 通过指定连接符生成字符串\n * push / pop: 末尾推入和弹出,改变原数组, 返回推入/弹出项\n * unshift / shift: 头部推入和弹出,改变原数组,返回操作项\n * sort(fn) / reverse: 排序与反转,改变原数组\n * concat: 连接数组,不影响原数组, 浅拷贝\n * slice(start, end): 返回截断后的新数组,不改变原数组\n * splice(start, number, value...): 返回删除元素组成的数组,value 为插入项,改变原数组\n * indexof / lastindexof(value, fromindex): 查找数组项,返回对应的下标\n * reduce / reduceright(fn(prev, cur), defaultprev): 两两执行,prev 为上次化简函数的 return 值,cur 为当前值(从第二项开始)\n * 数组乱序：\n\n\n\n\nvar arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\narr.sort(function() {\n\n  return math.random() - 0.5;\n\n});\n\n\n\n * 数组拆解: flat: [1,[2,3]] --\x3e [1, 2, 3]\n\n\n\n\narr.prototype.flat = function() {\n\n  this.tostring()\n\n    .split(",")\n\n    .map((item) => +item);\n\n};\n\n\n\n# 从输入 url 到展示\n答案 * dns 解析\n   \n   \n * tcp 三次握手\n   \n   \n * 发送请求,分析 url,设置请求报文(头,主体)\n   \n   \n * 服务器返回请求的文件 (html)\n   \n   \n * 浏览器渲染\n   \n   \n * html parser --\x3e dom tree\n   \n    * 标记化算法,进行元素状态的标记\n    * dom 树构建\n   \n   \n * css parser --\x3e style tree\n   \n    * 解析 css 代码,生成样式树\n   \n   \n * attachment --\x3e render tree\n   \n    * 结合 dom 树 与 style 树,生成渲染树\n   \n   \n * layout: 布局\n   \n   \n * gpu painting: 像素绘制页面\n   \n   \n\n# promise\n答案promise 是异步编程的一种解决方案,比传统的解决方案——回调函数和事件——更合理和更强大.\n\npromise 对象有以下两个特点.\n\n * （1）对象的状态不受外界影响.promise 对象代表一个异步操作,有三种状态：pending（进行中）、fulfilled（已成功）和 rejected（已失败）.只有异步操作的结果,可以决定当前是哪一种状态,任何其他操作都无法改变这个状态.这也是 promise 这个名字的由来,它的英语意思就是“承诺”,表示其他手段无法改变.\n * （2）一旦状态改变,就不会再变,任何时候都可以得到这个结果.promise 对象的状态改变,只有两种可能：从 pending 变为 fulfilled 和从 pending 变为 rejected.只要这两种情况发生,状态就凝固了,不会再变了,会一直保持这个结果,这时就称为 resolved（已定型）.如果改变已经发生了,你再对 promise 对象添加回调函数,也会立即得到这个结果.这与事件（event）完全不同,事件的特点是,如果你错过了它,再去监听,是得不到结果的.\n * 简单例子\n\n\n\nfunction timeout(ms) {\n\n  return new promise((resolve, reject) => {\n\n    settimeout(resolve, ms, "done");\n\n  });\n\n}\n\n\ntimeout(100).then((value) => {\n\n  console.log(value);\n\n});\n\n\n\n# for of 和 for (let i = 0; i < ...) 哪种写法性能更高？为什么？\n答案for > for-of > for-in\n\nfor-in循环除了遍历数组元素以外,还会遍历自定义属性。\n\nfor-of循环不会循环对象的key，只会循环出数组的value，因此for-of不能循环遍历普通对象。\n\nfor-of和for-in的key是string类型，有转换过程，开销比较大，但是for循环的 i 是number类型，开销较小。\n\n不过for-of语法在内存占用上也有一定的优势。\n\n# 函数柯里化\n答案柯里化是函数式编程的一个重要技巧,将使用多个参数的一个函数转换成一系列使用一个参数的函数的技术\n\n函数式编程另一个重要的函数 compose,能够将函数进行组合,而组合的函数只接受一个参数,所以如果有接受多个函数的需求并且需要用到 compose 进行函数组合,就需要使用柯里化对准备组合的函数进行部分求值,让它始终只接受一个参数\n\n\n\nfunction curry(fn) {\n\n  if (fn.length  {\n\n    if (fn.length === args.length) {\n\n      return fn(...args);\n\n    } else {\n\n      return (...args) => {\n\n        return generator(...args, ...args2);\n\n      };\n\n    }\n\n  };\n\n  return generator;\n\n}\n\n\nlet add = (a, b, c, d) => a + b + c + d;\n\nconst curriedadd = curry(add);\n\nadd(5, 6, 7, 8); //26\n\n\n\n# jsonp 原理\n答案（1）首先是利用 script 标签的 src 属性来实现跨域\n\n（2）通过将前端方法作为参数传递到服务器端,然后由服务器端注入参数之后再返回,实现服务器端向客户端通信\n\n（3）由于使用 script 标签的 src 属性,因此只支持 get 方法\n\n# javascript 设计模式\n答案创建型:\n\n1.抽象工厂模式（abstract factory）\n\n2.构建者模式（builder）\n\n3.工厂方法模式（factory method）\n\n4.原型模式（prototype）\n\n5.单例模式（singleton）\n\n结构型：\n\n1.适配器模式（adapter）\n\n2.桥接模式（bridge）\n\n3.组合模式（compositor）\n\n4.装饰者模式（decorator）\n\n5.外观模式（facade）\n\n6.享元模式（flyweight）\n\n7.代理模式（proxy）\n\n行为：\n\n1.职责链模式（chain of responsibility）\n\n2.命令模式（command）\n\n3.解释器模式（interpreter）\n\n4.迭代器模式（iterator）\n\n5.中介者模式（mediator）\n\n6.备忘录模式（memento）\n\n7.观察者模式（observer）\n\n8.状态模式（state）\n\n9.策略模式（strategy）\n\n10.模板方法模式（template method）\n\n11.访问者模式（visitor）\n\n# js 判断数组的方法\n答案- 通过object.prototype.tostring.call()做判断 - `obj.__proto__` === array.prototype; - array.isarrray() - obj instanceof array - array.prototype.isprototypeof(obj)',charsets:{cjk:!0}},{title:"React",frontmatter:{},regularPath:"/interview/react.html",relativePath:"interview/react.md",key:"v-5ba11db3",path:"/interview/react.html",headers:[{level:2,title:"什么是声明式编程",slug:"什么是声明式编程",normalizedTitle:"什么是声明式编程",charIndex:10},{level:2,title:"声明式编程 vs 命令式编程",slug:"声明式编程-vs-命令式编程",normalizedTitle:"声明式编程 vs 命令式编程",charIndex:124},{level:2,title:"什么是函数式编程",slug:"什么是函数式编程",normalizedTitle:"什么是函数式编程",charIndex:630},{level:3,title:"不可变性(Immutability)",slug:"不可变性-immutability",normalizedTitle:"不可变性(immutability)",charIndex:738},{level:3,title:"纯函数",slug:"纯函数",normalizedTitle:"纯函数",charIndex:760},{level:3,title:"数据转换",slug:"数据转换",normalizedTitle:"数据转换",charIndex:783},{level:3,title:"高阶函数",slug:"高阶函数",normalizedTitle:"高阶函数",charIndex:813},{level:3,title:"递归",slug:"递归",normalizedTitle:"递归",charIndex:846},{level:3,title:"组合",slug:"组合",normalizedTitle:"组合",charIndex:852},{level:2,title:"什么是 React",slug:"什么是-react",normalizedTitle:"什么是 react",charIndex:5214},{level:2,title:"React 与 Angular 有何不同？",slug:"react-与-angular-有何不同",normalizedTitle:"react 与 angular 有何不同？",charIndex:5361},{level:2,title:"什么是Virtual DOM及其工作原理",slug:"什么是virtual-dom及其工作原理",normalizedTitle:"什么是virtual dom及其工作原理",charIndex:5570},{level:3,title:"什么是Virtual DOM",slug:"什么是virtual-dom",normalizedTitle:"什么是virtual dom",charIndex:5570},{level:3,title:"虚拟DOM是如何工作的",slug:"虚拟dom是如何工作的",normalizedTitle:"虚拟dom是如何工作的",charIndex:6569},{level:2,title:"什么是 JSX",slug:"什么是-jsx",normalizedTitle:"什么是 jsx",charIndex:6811},{level:2,title:"组件和不同类型",slug:"组件和不同类型",normalizedTitle:"组件和不同类型",charIndex:7265},{level:3,title:"函数/无状态/展示组件",slug:"函数-无状态-展示组件",normalizedTitle:"函数/无状态/展示组件",charIndex:7404},{level:3,title:"类/有状态组件",slug:"类-有状态组件",normalizedTitle:"类/有状态组件",charIndex:7753},{level:3,title:"受控组件",slug:"受控组件",normalizedTitle:"受控组件",charIndex:8299},{level:3,title:"非受控组件",slug:"非受控组件",normalizedTitle:"非受控组件",charIndex:9948},{level:3,title:"容器组件",slug:"容器组件",normalizedTitle:"容器组件",charIndex:11497},{level:2,title:"Props 和 State",slug:"props-和-state",normalizedTitle:"props 和 state",charIndex:11638},{level:3,title:"什么是PropTypes",slug:"什么是proptypes",normalizedTitle:"什么是proptypes",charIndex:12307},{level:2,title:"如何更新状态以及如何不更新",slug:"如何更新状态以及如何不更新",normalizedTitle:"如何更新状态以及如何不更新",charIndex:13438},{level:2,title:"组件生命周期方法",slug:"组件生命周期方法",normalizedTitle:"组件生命周期方法",charIndex:13891},{level:2,title:"超越继承的组合",slug:"超越继承的组合",normalizedTitle:"超越继承的组合",charIndex:14742},{level:2,title:"如何在React中应用样式",slug:"如何在react中应用样式",normalizedTitle:"如何在react中应用样式",charIndex:15226},{level:3,title:"外部样式表",slug:"外部样式表",normalizedTitle:"外部样式表",charIndex:15263},{level:3,title:"内联样式",slug:"内联样式",normalizedTitle:"内联样式",charIndex:15793},{level:3,title:"定义样式对象并使用它",slug:"定义样式对象并使用它",normalizedTitle:"定义样式对象并使用它",charIndex:16178},{level:2,title:"什么是Redux及其工作原理",slug:"什么是redux及其工作原理",normalizedTitle:"什么是redux及其工作原理",charIndex:16647},{level:3,title:"它是如何工作的",slug:"它是如何工作的",normalizedTitle:"它是如何工作的",charIndex:6665},{level:3,title:"Redux 循环细节",slug:"redux-循环细节",normalizedTitle:"redux 循环细节",charIndex:17013},{level:3,title:"组件如何与 redux 进行连接",slug:"组件如何与-redux-进行连接",normalizedTitle:"组件如何与 redux 进行连接",charIndex:17766},{level:2,title:"什么是 React Router Dom 及其工作原理",slug:"什么是-react-router-dom-及其工作原理",normalizedTitle:"什么是 react router dom 及其工作原理",charIndex:18810},{level:2,title:"什么是错误边界",slug:"什么是错误边界",normalizedTitle:"什么是错误边界",charIndex:20600},{level:2,title:"什么是 Fragments",slug:"什么是-fragments",normalizedTitle:"什么是 fragments",charIndex:22199},{level:2,title:"什么是传送门(Portals)",slug:"什么是传送门-portals",normalizedTitle:"什么是传送门(portals)",charIndex:22811},{level:2,title:"什么是上下文",slug:"什么是上下文",normalizedTitle:"什么是上下文",charIndex:23795},{level:2,title:"什么是 Hooks",slug:"什么是-hooks",normalizedTitle:"什么是 hooks",charIndex:23877},{level:2,title:"如何提高性能",slug:"如何提高性能",normalizedTitle:"如何提高性能",charIndex:25485},{level:2,title:"如何在重新加载页面时保留数据",slug:"如何在重新加载页面时保留数据",normalizedTitle:"如何在重新加载页面时保留数据",charIndex:25802},{level:2,title:"如何在React进行API调用",slug:"如何在react进行api调用",normalizedTitle:"如何在react进行api调用",charIndex:26070}],lastUpdated:"6/11/2019, 8:34:46 AM",headersStr:"什么是声明式编程 声明式编程 vs 命令式编程 什么是函数式编程 不可变性(Immutability) 纯函数 数据转换 高阶函数 递归 组合 什么是 React React 与 Angular 有何不同？ 什么是Virtual DOM及其工作原理 什么是Virtual DOM 虚拟DOM是如何工作的 什么是 JSX 组件和不同类型 函数/无状态/展示组件 类/有状态组件 受控组件 非受控组件 容器组件 Props 和 State 什么是PropTypes 如何更新状态以及如何不更新 组件生命周期方法 超越继承的组合 如何在React中应用样式 外部样式表 内联样式 定义样式对象并使用它 什么是Redux及其工作原理 它是如何工作的 Redux 循环细节 组件如何与 redux 进行连接 什么是 React Router Dom 及其工作原理 什么是错误边界 什么是 Fragments 什么是传送门(Portals) 什么是上下文 什么是 Hooks 如何提高性能 如何在重新加载页面时保留数据 如何在React进行API调用",content:"# React\n# 什么是声明式编程\n声明式编程是一种编程范式,它关注的是你要做什么,而不是如何做.它表达逻辑而不显式地定义步骤.这意味着我们需要根据逻辑的计算来声明要显示的组件.它没有描述控制流步骤.声明式编程的例子有HTML、SQL等.\n\n# 声明式编程 vs 命令式编程\n声明式编程的编写方式描述了应该做什么,而命令式编程描述了如何做.在声明式编程中,让编译器决定如何做事情.声明性程序很容易推理,因为代码本身描述了它在做什么.\n\n下面是一个例子,数组中的每个元素都乘以 2,我们使用声明式map函数,让编译器来完成其余的工作,而使用命令式,需要编写所有的流程步骤.\n\nconst numbers = [1,2,3,4,5];\n\n// 声明式\nconst doubleWithDec = numbers.map(number => number * 2);\n\nconsole.log(doubleWithDec)\n\n// 命令式\nconst doubleWithImp = [];\nfor(let i=0; i<numbers.length; i++) {\n    const numberdouble = numbers[i] * 2;\n    doubleWithImp.push(numberdouble)\n}\n\nconsole.log(doubleWithImp)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 什么是函数式编程\n函数式编程是声明式编程的一部分.javascript中的函数是第一类公民,这意味着函数是数据,你可以像保存变量一样在应用程序中保存、检索和传递这些函数.\n\n函数式编程有些核心的概念,如下：\n\n * 不可变性(Immutability)\n * 纯函数(Pure Functions)\n * 数据转换(Data Transformations)\n * 高阶函数 (Higher-Order Functions)\n * 递归\n * 组合\n\n# 不可变性(Immutability)\n不可变性意味着不可改变. 在函数式编程中,你无法更改数据,也不能更改. 如果要改变或更改数据,则必须复制数据副本来更改.\n\n例如,这是一个student对象和changeName函数,如果要更改学生的名称,则需要先复制 student 对象,然后返回新对象.\n\n在javascript中,函数参数是对实际数据的引用,你不应该使用 student.firstName =“testing11”,这会改变实际的student 对象,应该使用Object.assign复制对象并返回新对象.\n\nlet student = {\n    firstName: \"testing\",\n    lastName: \"testing\",\n    marks: 500\n}\n\nfunction changeName(student) {\n    // student.firstName = \"testing11\" //should not do it\n    let copiedStudent = Object.assign({}, student);\n    copiedStudent.firstName = \"testing11\";\n    return copiedStudent;\n}\n\nconsole.log(changeName(student));\n\nconsole.log(student);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 纯函数\n纯函数是始终接受一个或多个参数并计算参数并返回数据或函数的函数. 它没有副作用,例如设置全局状态,更改应用程序状态,它总是将参数视为不可变数据.\n\n我想使用 appendAddress 的函数向student对象添加一个地址. 如果使用非纯函数,它没有参数,直接更改 student 对象来更改全局状态.\n\n使用纯函数,它接受参数,基于参数计算,返回一个新对象而不修改参数.\n\nlet student = {\n    firstName: \"testing\",\n    lastName: \"testing\",\n    marks: 500\n}\n\n// 非纯函数\nfunction appendAddress() {\n    student.address = {streetNumber:\"0000\", streetName: \"first\", city:\"somecity\"};\n}\n\nconsole.log(appendAddress());\n\n// 纯函数\nfunction appendAddress(student) {\n    let copystudent = Object.assign({}, student);\n    copystudent.address = {streetNumber:\"0000\", streetName: \"first\", city:\"somecity\"};\n    return copystudent;\n}\n\nconsole.log(appendAddress(student));\n\nconsole.log(student);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 数据转换\n我们讲了很多关于不可变性的内容,如果数据是不可变的,我们如何改变数据.如上所述,我们总是生成原始数据的转换副本,而不是直接更改原始数据.\n\n再介绍一些 javascript内置函数,当然还有很多其他的函数,这里有一些例子.所有这些函数都不改变现有的数据,而是返回新的数组或对象.\n\nlet cities = [\"irving\", \"lowell\", \"houston\"];\n\n// we can get the comma separated list\nconsole.log(cities.join(','))\n// irving,lowell,houston\n\n// if we want to get cities start with i\nconst citiesI = cities.filter(city => city[0] === \"i\");\nconsole.log(citiesI)\n// [ 'irving' ]\n\n// if we want to capitalize all the cities\nconst citiesC = cities.map(city => city.toUpperCase());\nconsole.log(citiesC)\n// [ 'IRVING', 'LOWELL', 'HOUSTON' ]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 高阶函数\n高阶函数是将函数作为参数或返回函数的函数,或者有时它们都有. 这些高阶函数可以操纵其他函数.\n\nArray.map,Array.filter和Array.reduce是高阶函数,因为它们将函数作为参数.\n\nconst numbers = [10,20,40,50,60,70,80]\n\nconst out1 = numbers.map(num => num * 100);\nconsole.log(out1);\n// [ 1000, 2000, 4000, 5000, 6000, 7000, 8000 ]\n\nconst out2 = numbers.filter(num => num > 50);\nconsole.log(out2);\n// [ 60, 70, 80 ]\n\nconst out3 = numbers.reduce((out,num) => out + num);\nconsole.log(out3);\n// 330\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n下面是另一个名为isPersonOld的高阶函数示例,该函数接受另外两个函数,分别是 message和isYoung.\n\nconst isYoung = age => age < 25;\n\nconst message = msg => \"He is \"+ msg;\n\nfunction isPersonOld(age, isYoung, message) {\n    const returnMessage = isYoung(age)?message(\"young\"):message(\"old\");\n    return returnMessage;\n}\n\n// passing functions as an arguments\nconsole.log(isPersonOld(13,isYoung,message))\n// He is young\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 递归\n递归是一种函数在满足一定条件之前调用自身的技术.只要可能,最好使用递归而不是循环.你必须注意这一点,浏览器不能处理太多递归和抛出错误.\n\n下面是一个演示递归的例子,在这个递归中,打印一个类似于楼梯的名称.我们也可以使用for循环,但只要可能,我们更喜欢递归.\n\nfunction printMyName(name, count) {\n    if(count <= name.length) {\n        console.log(name.substring(0,count));\n        printMyName(name, ++count);\n    }\n}\n\nconsole.log(printMyName(\"Bhargav\", 1));\n\n/*\nB\nBh\nBha\nBhar\nBharg\nBharga\nBhargav\n*/\n\n// withotu recursion\nvar name = \"Bhargav\"\nvar output = \"\";\nfor(let i=0; i<name.length; i++) {\n    output = output + name[i];\n    console.log(output);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 组合\n在React中,我们将功能划分为小型可重用的纯函数,我们必须将所有这些可重用的函数放在一起,最终使其成为产品. 将所有较小的函数组合成更大的函数,最终,得到一个应用程序,这称为组合.\n\n实现组合有许多不同方法. 我们从Javascript中了解到的一种常见方法是链接. 链接是一种使用点表示法调用前一个函数的返回值的函数的方法.\n\n这是一个例子. 我们有一个name,如果firstName和lastName大于5个单词的大写字母,刚返回,并且打印名称的名称和长度.\n\nconst name = \"Bhargav Bachina\";\n\nconst output = name.split(\" \")\n    .filter(name => name.length > 5)\n    .map(val => {\n    val = val.toUpperCase();\n    console.log(\"Name:::::\"+val);\n    console.log(\"Count::::\"+val.length);\n    return val;\n});\n\nconsole.log(output)\n/*\nName:::::BHARGAV\nCount::::7\nName:::::BACHINA\nCount::::7\n[ 'BHARGAV', 'BACHINA' ]\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n在React中,我们使用了不同于链接的方法,因为如果有30个这样的函数,就很难进行链接.这里的目的是将所有更简单的函数组合起来生成一个更高阶的函数.\n\nconst name = compose(\n    splitmyName,\n    countEachName,\n    comvertUpperCase,\n    returnName\n)\n\nconsole.log(name);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 什么是 React\nReact是一个简单的javascript UI库,用于构建高效、快速的用户界面.它是一个轻量级库,因此很受欢迎.它遵循组件设计模式、声明式编程范式和函数式编程概念,以使前端应用程序更高效.它使用虚拟DOM来有效地操作DOM.它遵循从高阶组件到低阶组件的单向数据流.\n\n# React 与 Angular 有何不同？\nAngular是一个成熟的MVC框架,带有很多特定的特性,比如服务、指令、模板、模块、解析器等等.React是一个非常轻量级的库,它只关注MVC的视图部分.\n\nAngular遵循两个方向的数据流,而React遵循从上到下的单向数据流.React在开发特性时给了开发人员很大的自由,例如,调用API的方式、路由等等.我们不需要包括路由器库,除非我们需要它在我们的项目.\n\n# 什么是Virtual DOM及其工作原理\nReact 使用 Virtual DOM 来更新真正的 DOM,从而提高效率和速度. 我们来详细讨论这些.\n\n# 什么是Virtual DOM\n浏览器遵循HTML指令来构造文档对象模型(DOM).当浏览器加载HTML并呈现用户界面时,HTML文档中的所有元素都变成DOM元素.\n\nDOM是从根元素开始的元素层次结构.例如,看看下面的HTML.\n\n<div>\n    <div>\n        <h1>This is heading</h1>\n        <p>this is paragraph</p>\n        <div>\n            <p>This is just a paragraon</p>\n        </div>\n    </div>\n    <div>\n        <h1>This is heading</h1>\n        <p>this is paragraph</p>\n        <div>\n            <p>This is just a paragraon</p>\n        </div>\n    </div>\n    <div>\n        <h1>This is heading</h1>\n        <p>this is paragraph</p>\n        <div>\n            <p>This is just a paragraon</p>\n        </div>\n    </div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n当涉及到SPA应用程序时,首次加载index.html,并在index.html本身中加载更新后的数据或另一个html.当用户浏览站点时,我们使用新内容更新相同的index.html.每当DOM发生更改时,浏览器都需要重新计算CSS、进行布局并重新绘制web页面.\n\nReact 使用 Virtual DOM 有效地重建 DOM.对于我们来说,这使得DOM操作的一项非常复杂和耗时的任务变得更加容易.React从开发人员那里抽象出所有这些,以便在Virtual DOM的帮助下构建高效的UI.\n\n# 虚拟DOM是如何工作的\n虚拟DOM只不过是真实 DOM 的 javascript对象表示. 与更新真实 DOM 相比,更新 javascript 对象更容易,更快捷. 考虑到这一点,让我们看看它是如何工作的.\n\nReact将整个DOM副本保存为虚拟DOM每当有更新时,它都会维护两个虚拟DOM,以比较之前的状态和当前状态,并确定哪些对象已被更改. 例如,段落文本更改为更改.现在,它通过比较两个虚拟DOM 差异,并将这些变化更新到实际DOM一旦真正的DOM更新,它也会更新UI\n\n# 什么是 JSX\nJSX是javascript的语法扩展.它就像一个拥有javascript全部功能的模板语言.它生成React元素,这些元素将在DOM中呈现.React建议在组件使用JSX.在JSX中,我们结合了javascript和HTML,并生成了可以在DOM中呈现的react元素.\n\n下面是JSX的一个例子.我们可以看到如何将javascript和HTML结合起来.如果HTML中包含任何动态变量,我们应该使用表达式{}.\n\nimport React from 'react';\n\nexport const Header = () => {\n\n    const heading = 'TODO App'\n\n    return(\n        <div style={{backgroundColor:'orange'}}>\n            <h1>{heading}</h1>\n        </div>\n    )\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 组件和不同类型\nReact 中一切都是组件.我们通常将应用程序的整个逻辑分解为小的单个部分.我们将每个单独的部分称为组件.通常,组件是一个javascript函数,它接受输入,处理它并返回在UI中呈现的React元素.\n\n在React中有不同类型的组件.让我们详细看看.\n\n# 函数/无状态/展示组件\n函数或无状态组件是一个纯函数,它可接受接受参数,并返回react元素.这些都是没有任何副作用的纯函数.这些组件没有状态或生命周期方法,这里有一个例子.\n\nimport React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nexport const Header = () => {\n    return(\n        <Jumbotron style={{backgroundColor:'orange'}}>\n            <h1>TODO App</h1>\n        </Jumbotron>\n    )\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 类/有状态组件\n类或有状态组件具有状态和生命周期方可能通过setState()方法更改组件的状态.类组件是通过扩展React创建的.它在构造函数中初始化,也可能有子组件,这里有一个例子.\n\nimport React from 'react';\nimport '../App.css';\nimport { ToDoForm } from './todoform';\nimport { ToDolist } from './todolist';\n\nexport class Dashboard extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"dashboard\"> \n          <ToDoForm />\n          <ToDolist />\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 受控组件\n受控组件是在 React 中处理输入表单的一种技术.表单元素通常维护它们自己的状态,而react则在组件的状态属性中维护状态.我们可以将两者结合起来控制输入表单.这称为受控组件.因此,在受控组件表单中,数据由React组件处理.\n\n这里有一个例子.当用户在 todo 项中输入名称时,调用一个javascript函数handleChange捕捉每个输入的数据并将其放入状态,这样就在 handleSubmit中的使用数据.\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport class ToDoForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n          <div className=\"todoform\">\n            <Form>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                    <Form.Label column sm={2}>\n                    <span className=\"item\">Item</span>\n                    </Form.Label>\n                    <Col sm={5}>\n                        <Form.Control type=\"text\" placeholder=\"Todo Item\" />\n                    </Col>\n                    <Col sm={5}>\n                        <Button variant=\"primary\" type=\"submit\">Add</Button>\n                    </Col>\n                </Form.Group>\n            </Form>\n         </div>\n      );\n    }\n  }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n# 非受控组件\n大多数情况下,建议使用受控组件.有一种称为非受控组件的方法可以通过使用Ref来处理表单数据.在非受控组件中,Ref用于直接从DOM访问表单值,而不是事件处理程序.\n\n我们使用Ref构建了相同的表单,而不是使用React状态. 我们使用React.createRef() 定义Ref并传递该输入表单并直接从handleSubmit方法中的DOM访问表单值.\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport class ToDoForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n      this.input = React.createRef();\n  \n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleSubmit(event) {\n      alert('A name was submitted: ' + this.input.current.value);\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n          <div className=\"todoform\">\n            <Form>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                    <Form.Label column sm={2}>\n                    <span className=\"item\">Item</span>\n                    </Form.Label>\n                    <Col sm={5}>\n                        <Form.Control type=\"text\" placeholder=\"Todo Item\" ref={this.input}/>\n                    </Col>\n                    <Col sm={5}>\n                        <Button variant=\"primary\" onClick={this.handleSubmit} type=\"submit\">Add</Button>\n                    </Col>\n                </Form.Group>\n            </Form>\n         </div>\n      );\n    }\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# 容器组件\n容器组件是处理获取数据、订阅 redux 存储等的组件.它们包含展示组件和其他容器组件,但是里面从来没有html. 高阶组件.\n\n高阶组件是将组件作为参数并生成另一个组件的组件. Redux connect是高阶组件的示例. 这是一种用于生成可重用组件的强大技术.\n\n# Props 和 State\nProps 是只读属性,传递给组件以呈现UI和状态,我们可以随时间更改组件的输出.\n\n下面是一个类组件的示例,它在构造函数中定义了props和state,每当使用this.setState() 修改状态时,将再次调用 render( ) 函数来更改UI中组件的输出.\n\nimport React from 'react';\nimport '../App.css';\n\nexport class Dashboard extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n        name: \"some name\"\n    }\n  }\n\n  render() {\n\n    // reading state\n    const name = this.state.name;\n\n    //reading props\n    const address = this.props.address;\n\n    return (\n      <div className=\"dashboard\"> \n          {name}\n          {address}\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# 什么是PropTypes\n随着时间的推移,应用程序会变得越来越大,因此类型检查非常重要.PropTypes为组件提供类型检查,并为其他开发人员提供很好的文档.如果react项目不使用 Typescript,建议为组件添加 PropTypes.\n\n如果组件没有收到任何 props,我们还可以为每个组件定义要显示的默认 props.这里有一个例子.UserDisplay有三个 prop:name、address和age,我们正在为它们定义默认的props 和 prop类型.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const UserDisplay = ({name, address, age}) => {\n\n    UserDisplay.defaultProps = {\n        name: 'myname',\n        age: 100,\n        address: \"0000 onestreet\"\n    };\n\n    return (\n        <>\n            <div>\n                <div class=\"label\">Name:</div>\n                <div>{name}</div>\n            </div>\n            <div>\n                <div class=\"label\">Address:</div>\n                <div>{address}</div>\n            </div>\n            <div>\n                <div class=\"label\">Age:</div>\n                <div>{age}</div>\n            </div>\n        </>\n    )\n}\n\nUserDisplay.propTypes = {\n    name: PropTypes.string.isRequired,\n    address: PropTypes.objectOf(PropTypes.string),\n    age: PropTypes.number.isRequired\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# 如何更新状态以及如何不更新\n你不应该直接修改状态.可以在构造函数中定义状态值.直接使用状态不会触发重新渲染.React 使用this.setState()时合并状态.\n\n//  错误方式\nthis.state.name = \"some name\"\n//  正确方式\nthis.setState({name:\"some name\"})\n\n\n1\n2\n3\n4\n使用this.setState()的第二种形式总是更安全的,因为更新的props和状态是异步的.这里,我们根据这些 props 更新状态.\n\n// 错误方式\nthis.setState({\n    timesVisited: this.state.timesVisited + this.props.count\n})\n// 正确方式\nthis.setState((state, props) => {\n    timesVisited: state.timesVisited + props.count\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 组件生命周期方法\n组件在进入和离开DOM时要经历一系列生命周期方法,下面是这些生命周期方法.\n\ncomponentWillMount()\n\n在渲染前调用,在客户端也在服务端,它只发生一次.\n\ncomponentDidMount()\n\n在第一次渲染后调用,只在客户端.之后组件已经生成了对应的DOM结构,可以通过this.getDOMNode()来进行访问. 如果你想和其他JavaScript框架一起使用,可以在这个方法中调用setTimeout, setInterval或者发送AJAX请求等操作(防止异部操作阻塞UI).\n\ncomponentWillReceiveProps()\n\n在组件接收到一个新的 prop (更新后)时被调用.这个方法在初始化render时不会被调用.\n\nshouldComponentUpdate()\n\n返回一个布尔值.在组件接收到新的props或者state时被调用.在初始化时或者使用forceUpdate时不被调用. 可以在你确认不需要更新组件时使用.\n\ncomponentWillUpdate()\n\n在组件接收到新的props或者state但还没有render时被调用.在初始化时不会被调用.\n\ncomponentDidUpdate()\n\n在组件完成更新后立即调用.在初始化时不会被调用.\n\ncomponentWillUnMount()\n\n组件从 DOM 中移除的时候立刻被调用.\n\ngetDerivedStateFromError()\n\n这个生命周期方法在ErrorBoundary类中使用.实际上,如果使用这个生命周期方法,任何类都会变成ErrorBoundary.这用于在组件树中出现错误时呈现回退UI,而不是在屏幕上显示一些奇怪的错误.\n\ncomponentDidCatch()\n\n这个生命周期方法在ErrorBoundary类中使用.实际上,如果使用这个生命周期方法,任何类都会变成ErrorBoundary.这用于在组件树中出现错误时记录错误.\n\n# 超越继承的组合\n在React中,我们总是使用组合而不是继承.我们已经在函数式编程部分讨论了什么是组合.这是一种结合简单的可重用函数来生成高阶组件的技术.下面是一个组合的例子,我们在 dashboard 组件中使用两个小组件todoForm和todoList.\n\nimport React from 'react';\nimport '../App.css';\nimport { ToDoForm } from './todoform';\nimport { ToDolist } from './todolist';\n\nexport class Dashboard extends React.Component {\n\n  render() {\n    return (\n      <div className=\"dashboard\"> \n          <ToDoForm />\n          <ToDolist />\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 如何在React中应用样式\n将样式应用于React组件有三种方法.\n\n# 外部样式表\n在此方法中,你可以将外部样式表导入到组件使用类中. 但是你应该使用className而不是class来为React元素应用样式, 这里有一个例子.\n\nimport React from 'react';\nimport './App.css';\nimport { Header } from './header/header';\nimport { Footer } from './footer/footer';\nimport { Dashboard } from './dashboard/dashboard';\nimport { UserDisplay } from './userdisplay';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Dashboard />\n      <UserDisplay />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 内联样式\n在这个方法中,我们可以直接将 props 传递给HTML元素,属性为style.这里有一个例子.这里需要注意的重要一点是,我们将javascript对象传递给style,这就是为什么我们使用 backgroundColor 而不是CSS方法backbackground -color\n\nimport React from 'react';\n\nexport const Header = () => {\n\n    const heading = 'TODO App'\n\n    return(\n        <div style={{backgroundColor:'orange'}}>\n            <h1>{heading}</h1>\n        </div>\n    )\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 定义样式对象并使用它\n因为我们将javascript对象传递给style属性,所以我们可以在组件中定义一个style对象并使用它.下面是一个示例,你也可以将此对象作为 props 传递到组件树中.\n\nimport React from 'react';\n\nconst footerStyle = {\n    width: '100%',\n    backgroundColor: 'green',\n    padding: '50px',\n    font: '30px',\n    color: 'white',\n    fontWeight: 'bold'\n}\n\nexport const Footer = () => {\n    return(\n        <div style={footerStyle}>\n            All Rights Reserved 2019\n        </div>\n    )\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 什么是Redux及其工作原理\nRedux 是 React的一个状态管理库,它基于flux.Redux简化了React中的单向数据流.Redux将状态管理完全从React中抽象出来.\n\n# 它是如何工作的\n在React中,组件连接到 redux ,如果要访问 redux,需要派出一个包含 id和负载(payload) 的 action.action 中的 payload 是可选的,action 将其转发给 Reducer. 当reducer收到action时,通过 swithc...case 语法比较 action 中type. 匹配时,更新对应的内容返回新的 state. 当Redux状态更改时,连接到Redux的组件将接收新的状态作为props.当组件接收到这些props时,它将进入更新阶段并重新渲染 UI.\n\n\n\n# Redux 循环细节\n让我们详细看看整个redux 循环细节.Action: Action 只是一个简单的json对象,type 和有payload作为键.type 是必须要有的,payload是可选的.下面是一个 action 的例子.\n\n// action\n\n{ \n  type:\"SEND_EMAIL\", \n  payload: data\n};\n\n\n1\n2\n3\n4\n5\n6\nAction Creators：这些是创建Actions的函数,因此我们在派发action时不必在组件中手动编写每个 action. 以下是 action creator 的示例.\n\n// action creator\n\nexport function sendEamil(data) {\n    return { type:\"SEND_EMAIL\", payload: data};\n}\n\n\n1\n2\n3\n4\n5\nReducers：Reducers 是纯函数,它将 action和当前 state 作为参数,计算必要的逻辑并返回一个新的state. 这些 Reducers 没有任何副作用. 它不会改变 state 而是总是返回 state.\n\nexport default function emailReducer(state = [], action){\n \n  switch(action.type) {\n      case \"SEND_EMAIL\":  return Object.assign({}, state, {\n       email: action.payload\n      });\n      default: return state;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 组件如何与 redux 进行连接\nmapStateToProps：此函数将state映射到 props 上,因此只要state发生变化,新 state 会重新映射到 props. 这是订阅store的方式. mapDispatchToProps：此函数用于将 action creators 绑定到你的props.以便我们可以在第12行中使用This. props.actions.sendemail()来派发一个动作. connect和bindActionCreators来自 redux. 前者用于连接 store ,如第22行,后者用于将 action creators 绑定到你的 props ,如第20行.\n\n// import connect\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// import action creators\nimport * as userActions from '../../../actions/userActions';\n\nexport class User extends React.Component {\n  \n    handleSubmit() {\n        // dispatch an action\n        this.props.actions.sendEmail(this.state.email);\n    }\n  \n}\n\n// you are mapping you state props\nconst mapStateToProps = (state, ownProps) => ({user: state.user})\n// you are binding your action creators to your props\nconst mapDispatchToProps = (dispatch) => ({actions: bindActionCreators(userActions, dispatch)})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# 什么是 React Router Dom 及其工作原理\nreact-router-dom是应用程序中路由的库. React库中没有路由功能,需要单独安装react-router-dom.\n\nreact-router-dom 提供两个路由器BrowserRouter和HashRoauter.前者基于url的pathname段,后者基于hash段.\n\n 前者：http://127.0.0.1:3000/article/num1\n\n 后者：http://127.0.0.1:3000/#/article/num1（不一定是这样,但#是少不了的）\n\n\n1\n2\n3\nreact-router-dom 组件\n\n * BrowserRouter 和 HashRouter 是路由器.\n * Route 用于路由匹配.\n * Link 组件用于在应用程序中创建链接. 它将在HTML中渲染为锚标记.\n * NavLink是突出显示当前活动链接的特殊链接.\n * Switch 不是必需的,但在组合路由时很有用.\n * Redirect 用于强制路由重定向 下面是组件中的Link、NavLink和Redirect 的例子\n\n// normal link\n<Link to=\"/gotoA\">Home</Link>\n\n// link which highlights currentlu active route with the given class name\n<NavLink to=\"/gotoB\" activeClassName=\"active\">\n  React\n</NavLink>\n\n// you can redirect to this url\n<Redirect to=\"/gotoC\" />\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n以下是 react router 组件的示例. 如果你查看下面的示例,我们将匹配路径并使用Switch和Route呈现相应的组件.\n\nimport React from 'react'\n// import react router DOM elements\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport ComponentA from '../common/compa'\nimport ComponentB from '../common/compb'\nimport ComponentC from '../common/compc'\nimport ComponentD from '../common/compd'\nimport ComponentE from '../common/compe'\n\n\nconst Layout = ({ match }) => {\n    return(\n        <div className=\"\">\n            <Switch>\n                <Route exact path={`${match.path}/gotoA`} component={ComponentA} />\n                <Route path={`${match.path}/gotoB`} component={ComponentB} />\n                <Route path={`${match.path}/gotoC`} component={ComponentC} />\n                <Route path={`${match.path}/gotoD`} component={ComponentD} />\n                <Route path={`${match.path}/gotoE`} component={ComponentE} />\n            </Switch>\n        </div>\n    )}\n\nexport default Layout\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 什么是错误边界\n在 React 中,我们通常有一个组件树.如果任何一个组件发生错误,它将破坏整个组件树.没有办法捕捉这些错误,我们可以用错误边界优雅地处理这些错误. 错误边界有两个作用\n\n * 如果发生错误,显示回退UI\n * 记录错误\n\n下面是ErrorBoundary类的一个例子.如果类实现了 getDerivedStateFromError或componentDidCatch 这两个生命周期方法的任何一下,,那么这个类就会成为ErrorBoundary.前者返回{hasError: true}来呈现回退UI,后者用于记录错误.\n\nimport React from 'react'\n\nexport class ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true };\n    }\n  \n    componentDidCatch(error, info) {\n      // You can also log the error to an error reporting service\n      console.log('Error::::', error);\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return <h1>OOPS!. WE ARE LOOKING INTO IT.</h1>;\n      }\n  \n      return this.props.children; \n    }\n  }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n以下是我们如何在其中一个组件中使用ErrorBoundary.使用ErrorBoundary类包裹 ToDoForm和ToDoList. 如果这些组件中发生任何错误,我们会记录错误并显示回退UI.\n\nimport React from 'react';\nimport '../App.css';\nimport { ToDoForm } from './todoform';\nimport { ToDolist } from './todolist';\nimport { ErrorBoundary } from '../errorboundary';\n\nexport class Dashboard extends React.Component {\n\n  render() {\n    return (\n      <div className=\"dashboard\"> \n        <ErrorBoundary>\n          <ToDoForm />\n          <ToDolist />\n        </ErrorBoundary>\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 什么是 Fragments\n在React中,我们需要有一个父元素,同时从组件返回React元素.有时在DOM中添加额外的节点会很烦人.使用 Fragments,我们不需要在DOM中添加额外的节点.我们只需要用 React.Fragment 或才简写 <> 来包裹内容就行了.如下 所示：\n\n // Without Fragments   \nreturn (\n    <div>\n       <CompoentA />\n       <CompoentB />\n       <CompoentC />\n    </div>\n)\n\n// With Fragments   \n  return (\n    <React.Fragment>\n       <CompoentA />\n       <CompoentB />\n       <CompoentC />\n    </React.Fragment>\n  )\n\n  // shorthand notation Fragments   \n  return (\n    <>\n       <CompoentA />\n       <CompoentB />\n       <CompoentC />\n    </>\n  )\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 什么是传送门(Portals)\n默认情况下,所有子组件都在UI上呈现,具体取决于组件层次结构.Portal 提供了一种将子节点渲染到存在于父组件以外的 DOM 节点的优秀的方案.\n\n这里有一个例子.默认情况下,父组件在DOM层次结构中有子组件.\n\n我们可以将 children 组件移出parent 组件并将其附加 id 为 someid 的 Dom 节点下. 首先,获取 id 为 someid,我们在constructor中创建一个元素div,将child附加到componentDidMount中的someRoot.最后,我们在ReactDOM.createPortal（this.props.childen）,domnode的帮助下将子节点传递给该特定DOM节点.\n\n首先,先获取 id 为someid DOM元素,接着在构造函数中创建一个元素div,在 componentDidMount方法中将 someRoot 放到 div 中. 最后,通过 ReactDOM.createPortal(this.props.childen), domnode)将 children 传递到对应的节点下.\n\nconst someRoot = document.getElementById('someid');\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    someRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    someRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.el,\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n# 什么是上下文\n有时我们必须将props 传递给组件树,即使所有中间组件都不需要这些props.上下文是一种传递props 的方法,而不用在每一层传递组件树.\n\n# 什么是 Hooks\nHooks 是React版本16.8中的新功能.请记住,我们不能在函数组件中使用state ,因为它们不是类组件.Hooks 让我们在函数组件中可以使用state 和其他功能.\n\n目前没有重大变化,我们不必放弃类组件.\n\nHook 不会影响你对 React 概念的理解. 恰恰相反,Hook 为已知的 React 概念提供了更直接的 API：props, state,context,refs 以及生命周期.稍后我们将看到,Hook 还提供了一种更强大的方式来组合他们.\n\n我们可以使用一些钩子,例如useState,useEffect,useContext,useReducer等.\n\n下面是 Hooks 的基本规则\n\n * Hooks 应该在外层使用,不应该在循环,条件或嵌套函数中使用\n * Hooks 应该只在函数组件中使用.\n\n让我们看一个例子来理解 hooks. 这是一个函数组件,它采用props并在UI上显示这些props. 在useState钩子的帮助下,我们将这个函数组件转换为有状态组件.首先,我们在第5行定义状态,这相当于\n\nconstructor(props) {\n super(props);\n this.state = {\n     name:'myname', age:10, address:'0000 one street'\n }\n}\n\n\n1\n2\n3\n4\n5\n6\nuseState返回两个项,一个是user,另一个是setUser函数. user 是一个可以在没有 this关键字的情况下直接使用的对象,setUser是一个可以用来设置用户点击第21行按钮的状态的函数,该函数等效于以下内容.\n\nthis.setState({name:'name changed'})\n\n\n1\nimport React, { useState } from \"react\";\n\nexport const UserDisplay = ({ name, address, age }) => {\n    const [user, setUser] = useState({\n        name: \"myname\",\n        age: 10,\n        address: \"0000 onestreet\"\n    });\n\n    return (\n        <>\n            <div>\n                <div class=\"label\">Name:</div>\n                <div>{user.name}</div>\n            </div>\n            <div>\n                <div class=\"label\">Address:</div>\n                <div>{user.address}</div>\n            </div>\n            <div>\n                <div class=\"label\">Age:</div>\n                <div>{user.age}</div>\n            </div>\n            <button onClick={() => setUser({ name: \"name changed\" })}>\n                Click me\n            </button>\n        </>\n    );\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# 如何提高性能\n我们可以通过多种方式提高应用性能,以下这些比较重要：\n\n * 适当地使用shouldComponentUpdate生命周期方法. 它避免了子组件的不必要的渲染. 如果树中有100个组件,则不重新渲染整个组件树来提高应用程序性能.\n * 使用create-react-app来构建项目,这会创建整个项目结构,并进行大量优化.\n * 不可变性是提高性能的关键.不要对数据进行修改,而是始终在现有集合的基础上创建新的集合,以保持尽可能少的复制,从而提高性能.\n * 在显示列表或表格时始终使用 Keys,这会让 React 的更新速度更快.\n * 代码分离是将代码插入到单独的文件中,只加载模块或部分所需的文件的技术.\n\n# 如何在重新加载页面时保留数据\n单页应用程序首先在DOM中加载index.html,然后在用户浏览页面时加载内容,或者从同一index.html中的后端API获取任何数据.\n\n如果通过点击浏览器中的重新加载按钮重新加载页面index.html,整个React应用程序将重新加载,我们将丢失应用程序的状态.如何保留应用状态？\n\n每当重新加载应用程序时,我们使用浏览器localstorage来保存应用程序的状态.我们将整个存储数据保存在localstorage中,每当有页面刷新或重新加载时,我们从localstorage加载状态.\n\n# 如何在React进行API调用\n我们使用redux-thunk在React中调用API.因为reduce是纯函数,所以没有副作用,比如调用API.\n\n因此,我们必须使用redux-thunk从 action creators 那里进行 API 调用.Action creator 派发一个action,将来自API的数据放入action 的 payload 中.Reducers 接收我们在上面的redux循环中讨论的数据,其余的过程也是相同的.redux-thunk是一个中间件.一旦它被引入到项目中,每次派发一个action时,都会通过thunk传递.如果它是一个函数,它只是等待函数处理并返回响应.如果它不是一个函数,它只是正常处理.\n\n这里有一个例子.sendEmailAPI是从组件中调用的函数,它接受一个数据并返回一个函数,其中dispatch作为参数.我们使用redux-thunk调用API apiservice,并等待收到响应.一旦接收到响应,我们就使用payload 派发一个action.\n\nimport apiservice from '../services/apiservice';\n\nexport function sendEmail(data) {\n    return { type:\"SEND_EMAIL\", payload: data };\n}\n\nexport function sendEmailAPI(email) {\n    return function(dispatch) {\n        return apiservice.callAPI(email).then(data => {\n            dispatch(sendEmail(data));\n        });\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13",normalizedContent:"# react\n# 什么是声明式编程\n声明式编程是一种编程范式,它关注的是你要做什么,而不是如何做.它表达逻辑而不显式地定义步骤.这意味着我们需要根据逻辑的计算来声明要显示的组件.它没有描述控制流步骤.声明式编程的例子有html、sql等.\n\n# 声明式编程 vs 命令式编程\n声明式编程的编写方式描述了应该做什么,而命令式编程描述了如何做.在声明式编程中,让编译器决定如何做事情.声明性程序很容易推理,因为代码本身描述了它在做什么.\n\n下面是一个例子,数组中的每个元素都乘以 2,我们使用声明式map函数,让编译器来完成其余的工作,而使用命令式,需要编写所有的流程步骤.\n\nconst numbers = [1,2,3,4,5];\n\n// 声明式\nconst doublewithdec = numbers.map(number => number * 2);\n\nconsole.log(doublewithdec)\n\n// 命令式\nconst doublewithimp = [];\nfor(let i=0; i<numbers.length; i++) {\n    const numberdouble = numbers[i] * 2;\n    doublewithimp.push(numberdouble)\n}\n\nconsole.log(doublewithimp)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 什么是函数式编程\n函数式编程是声明式编程的一部分.javascript中的函数是第一类公民,这意味着函数是数据,你可以像保存变量一样在应用程序中保存、检索和传递这些函数.\n\n函数式编程有些核心的概念,如下：\n\n * 不可变性(immutability)\n * 纯函数(pure functions)\n * 数据转换(data transformations)\n * 高阶函数 (higher-order functions)\n * 递归\n * 组合\n\n# 不可变性(immutability)\n不可变性意味着不可改变. 在函数式编程中,你无法更改数据,也不能更改. 如果要改变或更改数据,则必须复制数据副本来更改.\n\n例如,这是一个student对象和changename函数,如果要更改学生的名称,则需要先复制 student 对象,然后返回新对象.\n\n在javascript中,函数参数是对实际数据的引用,你不应该使用 student.firstname =“testing11”,这会改变实际的student 对象,应该使用object.assign复制对象并返回新对象.\n\nlet student = {\n    firstname: \"testing\",\n    lastname: \"testing\",\n    marks: 500\n}\n\nfunction changename(student) {\n    // student.firstname = \"testing11\" //should not do it\n    let copiedstudent = object.assign({}, student);\n    copiedstudent.firstname = \"testing11\";\n    return copiedstudent;\n}\n\nconsole.log(changename(student));\n\nconsole.log(student);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 纯函数\n纯函数是始终接受一个或多个参数并计算参数并返回数据或函数的函数. 它没有副作用,例如设置全局状态,更改应用程序状态,它总是将参数视为不可变数据.\n\n我想使用 appendaddress 的函数向student对象添加一个地址. 如果使用非纯函数,它没有参数,直接更改 student 对象来更改全局状态.\n\n使用纯函数,它接受参数,基于参数计算,返回一个新对象而不修改参数.\n\nlet student = {\n    firstname: \"testing\",\n    lastname: \"testing\",\n    marks: 500\n}\n\n// 非纯函数\nfunction appendaddress() {\n    student.address = {streetnumber:\"0000\", streetname: \"first\", city:\"somecity\"};\n}\n\nconsole.log(appendaddress());\n\n// 纯函数\nfunction appendaddress(student) {\n    let copystudent = object.assign({}, student);\n    copystudent.address = {streetnumber:\"0000\", streetname: \"first\", city:\"somecity\"};\n    return copystudent;\n}\n\nconsole.log(appendaddress(student));\n\nconsole.log(student);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 数据转换\n我们讲了很多关于不可变性的内容,如果数据是不可变的,我们如何改变数据.如上所述,我们总是生成原始数据的转换副本,而不是直接更改原始数据.\n\n再介绍一些 javascript内置函数,当然还有很多其他的函数,这里有一些例子.所有这些函数都不改变现有的数据,而是返回新的数组或对象.\n\nlet cities = [\"irving\", \"lowell\", \"houston\"];\n\n// we can get the comma separated list\nconsole.log(cities.join(','))\n// irving,lowell,houston\n\n// if we want to get cities start with i\nconst citiesi = cities.filter(city => city[0] === \"i\");\nconsole.log(citiesi)\n// [ 'irving' ]\n\n// if we want to capitalize all the cities\nconst citiesc = cities.map(city => city.touppercase());\nconsole.log(citiesc)\n// [ 'irving', 'lowell', 'houston' ]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 高阶函数\n高阶函数是将函数作为参数或返回函数的函数,或者有时它们都有. 这些高阶函数可以操纵其他函数.\n\narray.map,array.filter和array.reduce是高阶函数,因为它们将函数作为参数.\n\nconst numbers = [10,20,40,50,60,70,80]\n\nconst out1 = numbers.map(num => num * 100);\nconsole.log(out1);\n// [ 1000, 2000, 4000, 5000, 6000, 7000, 8000 ]\n\nconst out2 = numbers.filter(num => num > 50);\nconsole.log(out2);\n// [ 60, 70, 80 ]\n\nconst out3 = numbers.reduce((out,num) => out + num);\nconsole.log(out3);\n// 330\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n下面是另一个名为ispersonold的高阶函数示例,该函数接受另外两个函数,分别是 message和isyoung.\n\nconst isyoung = age => age < 25;\n\nconst message = msg => \"he is \"+ msg;\n\nfunction ispersonold(age, isyoung, message) {\n    const returnmessage = isyoung(age)?message(\"young\"):message(\"old\");\n    return returnmessage;\n}\n\n// passing functions as an arguments\nconsole.log(ispersonold(13,isyoung,message))\n// he is young\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 递归\n递归是一种函数在满足一定条件之前调用自身的技术.只要可能,最好使用递归而不是循环.你必须注意这一点,浏览器不能处理太多递归和抛出错误.\n\n下面是一个演示递归的例子,在这个递归中,打印一个类似于楼梯的名称.我们也可以使用for循环,但只要可能,我们更喜欢递归.\n\nfunction printmyname(name, count) {\n    if(count <= name.length) {\n        console.log(name.substring(0,count));\n        printmyname(name, ++count);\n    }\n}\n\nconsole.log(printmyname(\"bhargav\", 1));\n\n/*\nb\nbh\nbha\nbhar\nbharg\nbharga\nbhargav\n*/\n\n// withotu recursion\nvar name = \"bhargav\"\nvar output = \"\";\nfor(let i=0; i<name.length; i++) {\n    output = output + name[i];\n    console.log(output);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 组合\n在react中,我们将功能划分为小型可重用的纯函数,我们必须将所有这些可重用的函数放在一起,最终使其成为产品. 将所有较小的函数组合成更大的函数,最终,得到一个应用程序,这称为组合.\n\n实现组合有许多不同方法. 我们从javascript中了解到的一种常见方法是链接. 链接是一种使用点表示法调用前一个函数的返回值的函数的方法.\n\n这是一个例子. 我们有一个name,如果firstname和lastname大于5个单词的大写字母,刚返回,并且打印名称的名称和长度.\n\nconst name = \"bhargav bachina\";\n\nconst output = name.split(\" \")\n    .filter(name => name.length > 5)\n    .map(val => {\n    val = val.touppercase();\n    console.log(\"name:::::\"+val);\n    console.log(\"count::::\"+val.length);\n    return val;\n});\n\nconsole.log(output)\n/*\nname:::::bhargav\ncount::::7\nname:::::bachina\ncount::::7\n[ 'bhargav', 'bachina' ]\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n在react中,我们使用了不同于链接的方法,因为如果有30个这样的函数,就很难进行链接.这里的目的是将所有更简单的函数组合起来生成一个更高阶的函数.\n\nconst name = compose(\n    splitmyname,\n    counteachname,\n    comvertuppercase,\n    returnname\n)\n\nconsole.log(name);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 什么是 react\nreact是一个简单的javascript ui库,用于构建高效、快速的用户界面.它是一个轻量级库,因此很受欢迎.它遵循组件设计模式、声明式编程范式和函数式编程概念,以使前端应用程序更高效.它使用虚拟dom来有效地操作dom.它遵循从高阶组件到低阶组件的单向数据流.\n\n# react 与 angular 有何不同？\nangular是一个成熟的mvc框架,带有很多特定的特性,比如服务、指令、模板、模块、解析器等等.react是一个非常轻量级的库,它只关注mvc的视图部分.\n\nangular遵循两个方向的数据流,而react遵循从上到下的单向数据流.react在开发特性时给了开发人员很大的自由,例如,调用api的方式、路由等等.我们不需要包括路由器库,除非我们需要它在我们的项目.\n\n# 什么是virtual dom及其工作原理\nreact 使用 virtual dom 来更新真正的 dom,从而提高效率和速度. 我们来详细讨论这些.\n\n# 什么是virtual dom\n浏览器遵循html指令来构造文档对象模型(dom).当浏览器加载html并呈现用户界面时,html文档中的所有元素都变成dom元素.\n\ndom是从根元素开始的元素层次结构.例如,看看下面的html.\n\n<div>\n    <div>\n        <h1>this is heading</h1>\n        <p>this is paragraph</p>\n        <div>\n            <p>this is just a paragraon</p>\n        </div>\n    </div>\n    <div>\n        <h1>this is heading</h1>\n        <p>this is paragraph</p>\n        <div>\n            <p>this is just a paragraon</p>\n        </div>\n    </div>\n    <div>\n        <h1>this is heading</h1>\n        <p>this is paragraph</p>\n        <div>\n            <p>this is just a paragraon</p>\n        </div>\n    </div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n当涉及到spa应用程序时,首次加载index.html,并在index.html本身中加载更新后的数据或另一个html.当用户浏览站点时,我们使用新内容更新相同的index.html.每当dom发生更改时,浏览器都需要重新计算css、进行布局并重新绘制web页面.\n\nreact 使用 virtual dom 有效地重建 dom.对于我们来说,这使得dom操作的一项非常复杂和耗时的任务变得更加容易.react从开发人员那里抽象出所有这些,以便在virtual dom的帮助下构建高效的ui.\n\n# 虚拟dom是如何工作的\n虚拟dom只不过是真实 dom 的 javascript对象表示. 与更新真实 dom 相比,更新 javascript 对象更容易,更快捷. 考虑到这一点,让我们看看它是如何工作的.\n\nreact将整个dom副本保存为虚拟dom每当有更新时,它都会维护两个虚拟dom,以比较之前的状态和当前状态,并确定哪些对象已被更改. 例如,段落文本更改为更改.现在,它通过比较两个虚拟dom 差异,并将这些变化更新到实际dom一旦真正的dom更新,它也会更新ui\n\n# 什么是 jsx\njsx是javascript的语法扩展.它就像一个拥有javascript全部功能的模板语言.它生成react元素,这些元素将在dom中呈现.react建议在组件使用jsx.在jsx中,我们结合了javascript和html,并生成了可以在dom中呈现的react元素.\n\n下面是jsx的一个例子.我们可以看到如何将javascript和html结合起来.如果html中包含任何动态变量,我们应该使用表达式{}.\n\nimport react from 'react';\n\nexport const header = () => {\n\n    const heading = 'todo app'\n\n    return(\n        <div style={{backgroundcolor:'orange'}}>\n            <h1>{heading}</h1>\n        </div>\n    )\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 组件和不同类型\nreact 中一切都是组件.我们通常将应用程序的整个逻辑分解为小的单个部分.我们将每个单独的部分称为组件.通常,组件是一个javascript函数,它接受输入,处理它并返回在ui中呈现的react元素.\n\n在react中有不同类型的组件.让我们详细看看.\n\n# 函数/无状态/展示组件\n函数或无状态组件是一个纯函数,它可接受接受参数,并返回react元素.这些都是没有任何副作用的纯函数.这些组件没有状态或生命周期方法,这里有一个例子.\n\nimport react from 'react';\nimport jumbotron from 'react-bootstrap/jumbotron';\n\nexport const header = () => {\n    return(\n        <jumbotron style={{backgroundcolor:'orange'}}>\n            <h1>todo app</h1>\n        </jumbotron>\n    )\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 类/有状态组件\n类或有状态组件具有状态和生命周期方可能通过setstate()方法更改组件的状态.类组件是通过扩展react创建的.它在构造函数中初始化,也可能有子组件,这里有一个例子.\n\nimport react from 'react';\nimport '../app.css';\nimport { todoform } from './todoform';\nimport { todolist } from './todolist';\n\nexport class dashboard extends react.component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n\n    }\n  }\n  \n  render() {\n    return (\n      <div classname=\"dashboard\"> \n          <todoform />\n          <todolist />\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 受控组件\n受控组件是在 react 中处理输入表单的一种技术.表单元素通常维护它们自己的状态,而react则在组件的状态属性中维护状态.我们可以将两者结合起来控制输入表单.这称为受控组件.因此,在受控组件表单中,数据由react组件处理.\n\n这里有一个例子.当用户在 todo 项中输入名称时,调用一个javascript函数handlechange捕捉每个输入的数据并将其放入状态,这样就在 handlesubmit中的使用数据.\n\nimport react from 'react';\nimport form from 'react-bootstrap/form';\nimport button from 'react-bootstrap/button';\nimport row from 'react-bootstrap/row';\nimport col from 'react-bootstrap/col';\n\nexport class todoform extends react.component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      this.handlechange = this.handlechange.bind(this);\n      this.handlesubmit = this.handlesubmit.bind(this);\n    }\n  \n    handlechange(event) {\n      this.setstate({value: event.target.value});\n    }\n  \n    handlesubmit(event) {\n      alert('a name was submitted: ' + this.state.value);\n      event.preventdefault();\n    }\n  \n    render() {\n      return (\n          <div classname=\"todoform\">\n            <form>\n                <form.group as={row} controlid=\"formhorizontalemail\">\n                    <form.label column sm={2}>\n                    <span classname=\"item\">item</span>\n                    </form.label>\n                    <col sm={5}>\n                        <form.control type=\"text\" placeholder=\"todo item\" />\n                    </col>\n                    <col sm={5}>\n                        <button variant=\"primary\" type=\"submit\">add</button>\n                    </col>\n                </form.group>\n            </form>\n         </div>\n      );\n    }\n  }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n# 非受控组件\n大多数情况下,建议使用受控组件.有一种称为非受控组件的方法可以通过使用ref来处理表单数据.在非受控组件中,ref用于直接从dom访问表单值,而不是事件处理程序.\n\n我们使用ref构建了相同的表单,而不是使用react状态. 我们使用react.createref() 定义ref并传递该输入表单并直接从handlesubmit方法中的dom访问表单值.\n\nimport react from 'react';\nimport form from 'react-bootstrap/form';\nimport button from 'react-bootstrap/button';\nimport row from 'react-bootstrap/row';\nimport col from 'react-bootstrap/col';\n\nexport class todoform extends react.component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n      this.input = react.createref();\n  \n      this.handlesubmit = this.handlesubmit.bind(this);\n    }\n  \n    handlesubmit(event) {\n      alert('a name was submitted: ' + this.input.current.value);\n      event.preventdefault();\n    }\n  \n    render() {\n      return (\n          <div classname=\"todoform\">\n            <form>\n                <form.group as={row} controlid=\"formhorizontalemail\">\n                    <form.label column sm={2}>\n                    <span classname=\"item\">item</span>\n                    </form.label>\n                    <col sm={5}>\n                        <form.control type=\"text\" placeholder=\"todo item\" ref={this.input}/>\n                    </col>\n                    <col sm={5}>\n                        <button variant=\"primary\" onclick={this.handlesubmit} type=\"submit\">add</button>\n                    </col>\n                </form.group>\n            </form>\n         </div>\n      );\n    }\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# 容器组件\n容器组件是处理获取数据、订阅 redux 存储等的组件.它们包含展示组件和其他容器组件,但是里面从来没有html. 高阶组件.\n\n高阶组件是将组件作为参数并生成另一个组件的组件. redux connect是高阶组件的示例. 这是一种用于生成可重用组件的强大技术.\n\n# props 和 state\nprops 是只读属性,传递给组件以呈现ui和状态,我们可以随时间更改组件的输出.\n\n下面是一个类组件的示例,它在构造函数中定义了props和state,每当使用this.setstate() 修改状态时,将再次调用 render( ) 函数来更改ui中组件的输出.\n\nimport react from 'react';\nimport '../app.css';\n\nexport class dashboard extends react.component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n        name: \"some name\"\n    }\n  }\n\n  render() {\n\n    // reading state\n    const name = this.state.name;\n\n    //reading props\n    const address = this.props.address;\n\n    return (\n      <div classname=\"dashboard\"> \n          {name}\n          {address}\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# 什么是proptypes\n随着时间的推移,应用程序会变得越来越大,因此类型检查非常重要.proptypes为组件提供类型检查,并为其他开发人员提供很好的文档.如果react项目不使用 typescript,建议为组件添加 proptypes.\n\n如果组件没有收到任何 props,我们还可以为每个组件定义要显示的默认 props.这里有一个例子.userdisplay有三个 prop:name、address和age,我们正在为它们定义默认的props 和 prop类型.\n\nimport react from 'react';\nimport proptypes from 'prop-types';\n\nexport const userdisplay = ({name, address, age}) => {\n\n    userdisplay.defaultprops = {\n        name: 'myname',\n        age: 100,\n        address: \"0000 onestreet\"\n    };\n\n    return (\n        <>\n            <div>\n                <div class=\"label\">name:</div>\n                <div>{name}</div>\n            </div>\n            <div>\n                <div class=\"label\">address:</div>\n                <div>{address}</div>\n            </div>\n            <div>\n                <div class=\"label\">age:</div>\n                <div>{age}</div>\n            </div>\n        </>\n    )\n}\n\nuserdisplay.proptypes = {\n    name: proptypes.string.isrequired,\n    address: proptypes.objectof(proptypes.string),\n    age: proptypes.number.isrequired\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# 如何更新状态以及如何不更新\n你不应该直接修改状态.可以在构造函数中定义状态值.直接使用状态不会触发重新渲染.react 使用this.setstate()时合并状态.\n\n//  错误方式\nthis.state.name = \"some name\"\n//  正确方式\nthis.setstate({name:\"some name\"})\n\n\n1\n2\n3\n4\n使用this.setstate()的第二种形式总是更安全的,因为更新的props和状态是异步的.这里,我们根据这些 props 更新状态.\n\n// 错误方式\nthis.setstate({\n    timesvisited: this.state.timesvisited + this.props.count\n})\n// 正确方式\nthis.setstate((state, props) => {\n    timesvisited: state.timesvisited + props.count\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 组件生命周期方法\n组件在进入和离开dom时要经历一系列生命周期方法,下面是这些生命周期方法.\n\ncomponentwillmount()\n\n在渲染前调用,在客户端也在服务端,它只发生一次.\n\ncomponentdidmount()\n\n在第一次渲染后调用,只在客户端.之后组件已经生成了对应的dom结构,可以通过this.getdomnode()来进行访问. 如果你想和其他javascript框架一起使用,可以在这个方法中调用settimeout, setinterval或者发送ajax请求等操作(防止异部操作阻塞ui).\n\ncomponentwillreceiveprops()\n\n在组件接收到一个新的 prop (更新后)时被调用.这个方法在初始化render时不会被调用.\n\nshouldcomponentupdate()\n\n返回一个布尔值.在组件接收到新的props或者state时被调用.在初始化时或者使用forceupdate时不被调用. 可以在你确认不需要更新组件时使用.\n\ncomponentwillupdate()\n\n在组件接收到新的props或者state但还没有render时被调用.在初始化时不会被调用.\n\ncomponentdidupdate()\n\n在组件完成更新后立即调用.在初始化时不会被调用.\n\ncomponentwillunmount()\n\n组件从 dom 中移除的时候立刻被调用.\n\ngetderivedstatefromerror()\n\n这个生命周期方法在errorboundary类中使用.实际上,如果使用这个生命周期方法,任何类都会变成errorboundary.这用于在组件树中出现错误时呈现回退ui,而不是在屏幕上显示一些奇怪的错误.\n\ncomponentdidcatch()\n\n这个生命周期方法在errorboundary类中使用.实际上,如果使用这个生命周期方法,任何类都会变成errorboundary.这用于在组件树中出现错误时记录错误.\n\n# 超越继承的组合\n在react中,我们总是使用组合而不是继承.我们已经在函数式编程部分讨论了什么是组合.这是一种结合简单的可重用函数来生成高阶组件的技术.下面是一个组合的例子,我们在 dashboard 组件中使用两个小组件todoform和todolist.\n\nimport react from 'react';\nimport '../app.css';\nimport { todoform } from './todoform';\nimport { todolist } from './todolist';\n\nexport class dashboard extends react.component {\n\n  render() {\n    return (\n      <div classname=\"dashboard\"> \n          <todoform />\n          <todolist />\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 如何在react中应用样式\n将样式应用于react组件有三种方法.\n\n# 外部样式表\n在此方法中,你可以将外部样式表导入到组件使用类中. 但是你应该使用classname而不是class来为react元素应用样式, 这里有一个例子.\n\nimport react from 'react';\nimport './app.css';\nimport { header } from './header/header';\nimport { footer } from './footer/footer';\nimport { dashboard } from './dashboard/dashboard';\nimport { userdisplay } from './userdisplay';\n\nfunction app() {\n  return (\n    <div classname=\"app\">\n      <header />\n      <dashboard />\n      <userdisplay />\n      <footer />\n    </div>\n  );\n}\n\nexport default app;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 内联样式\n在这个方法中,我们可以直接将 props 传递给html元素,属性为style.这里有一个例子.这里需要注意的重要一点是,我们将javascript对象传递给style,这就是为什么我们使用 backgroundcolor 而不是css方法backbackground -color\n\nimport react from 'react';\n\nexport const header = () => {\n\n    const heading = 'todo app'\n\n    return(\n        <div style={{backgroundcolor:'orange'}}>\n            <h1>{heading}</h1>\n        </div>\n    )\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 定义样式对象并使用它\n因为我们将javascript对象传递给style属性,所以我们可以在组件中定义一个style对象并使用它.下面是一个示例,你也可以将此对象作为 props 传递到组件树中.\n\nimport react from 'react';\n\nconst footerstyle = {\n    width: '100%',\n    backgroundcolor: 'green',\n    padding: '50px',\n    font: '30px',\n    color: 'white',\n    fontweight: 'bold'\n}\n\nexport const footer = () => {\n    return(\n        <div style={footerstyle}>\n            all rights reserved 2019\n        </div>\n    )\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 什么是redux及其工作原理\nredux 是 react的一个状态管理库,它基于flux.redux简化了react中的单向数据流.redux将状态管理完全从react中抽象出来.\n\n# 它是如何工作的\n在react中,组件连接到 redux ,如果要访问 redux,需要派出一个包含 id和负载(payload) 的 action.action 中的 payload 是可选的,action 将其转发给 reducer. 当reducer收到action时,通过 swithc...case 语法比较 action 中type. 匹配时,更新对应的内容返回新的 state. 当redux状态更改时,连接到redux的组件将接收新的状态作为props.当组件接收到这些props时,它将进入更新阶段并重新渲染 ui.\n\n\n\n# redux 循环细节\n让我们详细看看整个redux 循环细节.action: action 只是一个简单的json对象,type 和有payload作为键.type 是必须要有的,payload是可选的.下面是一个 action 的例子.\n\n// action\n\n{ \n  type:\"send_email\", \n  payload: data\n};\n\n\n1\n2\n3\n4\n5\n6\naction creators：这些是创建actions的函数,因此我们在派发action时不必在组件中手动编写每个 action. 以下是 action creator 的示例.\n\n// action creator\n\nexport function sendeamil(data) {\n    return { type:\"send_email\", payload: data};\n}\n\n\n1\n2\n3\n4\n5\nreducers：reducers 是纯函数,它将 action和当前 state 作为参数,计算必要的逻辑并返回一个新的state. 这些 reducers 没有任何副作用. 它不会改变 state 而是总是返回 state.\n\nexport default function emailreducer(state = [], action){\n \n  switch(action.type) {\n      case \"send_email\":  return object.assign({}, state, {\n       email: action.payload\n      });\n      default: return state;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 组件如何与 redux 进行连接\nmapstatetoprops：此函数将state映射到 props 上,因此只要state发生变化,新 state 会重新映射到 props. 这是订阅store的方式. mapdispatchtoprops：此函数用于将 action creators 绑定到你的props.以便我们可以在第12行中使用this. props.actions.sendemail()来派发一个动作. connect和bindactioncreators来自 redux. 前者用于连接 store ,如第22行,后者用于将 action creators 绑定到你的 props ,如第20行.\n\n// import connect\nimport { connect } from 'react-redux'\nimport { bindactioncreators } from 'redux'\n\n// import action creators\nimport * as useractions from '../../../actions/useractions';\n\nexport class user extends react.component {\n  \n    handlesubmit() {\n        // dispatch an action\n        this.props.actions.sendemail(this.state.email);\n    }\n  \n}\n\n// you are mapping you state props\nconst mapstatetoprops = (state, ownprops) => ({user: state.user})\n// you are binding your action creators to your props\nconst mapdispatchtoprops = (dispatch) => ({actions: bindactioncreators(useractions, dispatch)})\n\nexport default connect(mapstatetoprops, mapdispatchtoprops)(user);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# 什么是 react router dom 及其工作原理\nreact-router-dom是应用程序中路由的库. react库中没有路由功能,需要单独安装react-router-dom.\n\nreact-router-dom 提供两个路由器browserrouter和hashroauter.前者基于url的pathname段,后者基于hash段.\n\n 前者：http://127.0.0.1:3000/article/num1\n\n 后者：http://127.0.0.1:3000/#/article/num1（不一定是这样,但#是少不了的）\n\n\n1\n2\n3\nreact-router-dom 组件\n\n * browserrouter 和 hashrouter 是路由器.\n * route 用于路由匹配.\n * link 组件用于在应用程序中创建链接. 它将在html中渲染为锚标记.\n * navlink是突出显示当前活动链接的特殊链接.\n * switch 不是必需的,但在组合路由时很有用.\n * redirect 用于强制路由重定向 下面是组件中的link、navlink和redirect 的例子\n\n// normal link\n<link to=\"/gotoa\">home</link>\n\n// link which highlights currentlu active route with the given class name\n<navlink to=\"/gotob\" activeclassname=\"active\">\n  react\n</navlink>\n\n// you can redirect to this url\n<redirect to=\"/gotoc\" />\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n以下是 react router 组件的示例. 如果你查看下面的示例,我们将匹配路径并使用switch和route呈现相应的组件.\n\nimport react from 'react'\n// import react router dom elements\nimport { switch, route, redirect } from 'react-router-dom'\nimport componenta from '../common/compa'\nimport componentb from '../common/compb'\nimport componentc from '../common/compc'\nimport componentd from '../common/compd'\nimport componente from '../common/compe'\n\n\nconst layout = ({ match }) => {\n    return(\n        <div classname=\"\">\n            <switch>\n                <route exact path={`${match.path}/gotoa`} component={componenta} />\n                <route path={`${match.path}/gotob`} component={componentb} />\n                <route path={`${match.path}/gotoc`} component={componentc} />\n                <route path={`${match.path}/gotod`} component={componentd} />\n                <route path={`${match.path}/gotoe`} component={componente} />\n            </switch>\n        </div>\n    )}\n\nexport default layout\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 什么是错误边界\n在 react 中,我们通常有一个组件树.如果任何一个组件发生错误,它将破坏整个组件树.没有办法捕捉这些错误,我们可以用错误边界优雅地处理这些错误. 错误边界有两个作用\n\n * 如果发生错误,显示回退ui\n * 记录错误\n\n下面是errorboundary类的一个例子.如果类实现了 getderivedstatefromerror或componentdidcatch 这两个生命周期方法的任何一下,,那么这个类就会成为errorboundary.前者返回{haserror: true}来呈现回退ui,后者用于记录错误.\n\nimport react from 'react'\n\nexport class errorboundary extends react.component {\n    constructor(props) {\n      super(props);\n      this.state = { haserror: false };\n    }\n  \n    static getderivedstatefromerror(error) {\n      // update state so the next render will show the fallback ui.\n      return { haserror: true };\n    }\n  \n    componentdidcatch(error, info) {\n      // you can also log the error to an error reporting service\n      console.log('error::::', error);\n    }\n  \n    render() {\n      if (this.state.haserror) {\n        // you can render any custom fallback ui\n        return <h1>oops!. we are looking into it.</h1>;\n      }\n  \n      return this.props.children; \n    }\n  }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n以下是我们如何在其中一个组件中使用errorboundary.使用errorboundary类包裹 todoform和todolist. 如果这些组件中发生任何错误,我们会记录错误并显示回退ui.\n\nimport react from 'react';\nimport '../app.css';\nimport { todoform } from './todoform';\nimport { todolist } from './todolist';\nimport { errorboundary } from '../errorboundary';\n\nexport class dashboard extends react.component {\n\n  render() {\n    return (\n      <div classname=\"dashboard\"> \n        <errorboundary>\n          <todoform />\n          <todolist />\n        </errorboundary>\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 什么是 fragments\n在react中,我们需要有一个父元素,同时从组件返回react元素.有时在dom中添加额外的节点会很烦人.使用 fragments,我们不需要在dom中添加额外的节点.我们只需要用 react.fragment 或才简写 <> 来包裹内容就行了.如下 所示：\n\n // without fragments   \nreturn (\n    <div>\n       <compoenta />\n       <compoentb />\n       <compoentc />\n    </div>\n)\n\n// with fragments   \n  return (\n    <react.fragment>\n       <compoenta />\n       <compoentb />\n       <compoentc />\n    </react.fragment>\n  )\n\n  // shorthand notation fragments   \n  return (\n    <>\n       <compoenta />\n       <compoentb />\n       <compoentc />\n    </>\n  )\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 什么是传送门(portals)\n默认情况下,所有子组件都在ui上呈现,具体取决于组件层次结构.portal 提供了一种将子节点渲染到存在于父组件以外的 dom 节点的优秀的方案.\n\n这里有一个例子.默认情况下,父组件在dom层次结构中有子组件.\n\n我们可以将 children 组件移出parent 组件并将其附加 id 为 someid 的 dom 节点下. 首先,获取 id 为 someid,我们在constructor中创建一个元素div,将child附加到componentdidmount中的someroot.最后,我们在reactdom.createportal（this.props.childen）,domnode的帮助下将子节点传递给该特定dom节点.\n\n首先,先获取 id 为someid dom元素,接着在构造函数中创建一个元素div,在 componentdidmount方法中将 someroot 放到 div 中. 最后,通过 reactdom.createportal(this.props.childen), domnode)将 children 传递到对应的节点下.\n\nconst someroot = document.getelementbyid('someid');\n\nclass modal extends react.component {\n  constructor(props) {\n    super(props);\n    this.el = document.createelement('div');\n  }\n\n  componentdidmount() {\n    someroot.appendchild(this.el);\n  }\n\n  componentwillunmount() {\n    someroot.removechild(this.el);\n  }\n\n  render() {\n    return reactdom.createportal(\n      this.props.children,\n      this.el,\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n# 什么是上下文\n有时我们必须将props 传递给组件树,即使所有中间组件都不需要这些props.上下文是一种传递props 的方法,而不用在每一层传递组件树.\n\n# 什么是 hooks\nhooks 是react版本16.8中的新功能.请记住,我们不能在函数组件中使用state ,因为它们不是类组件.hooks 让我们在函数组件中可以使用state 和其他功能.\n\n目前没有重大变化,我们不必放弃类组件.\n\nhook 不会影响你对 react 概念的理解. 恰恰相反,hook 为已知的 react 概念提供了更直接的 api：props, state,context,refs 以及生命周期.稍后我们将看到,hook 还提供了一种更强大的方式来组合他们.\n\n我们可以使用一些钩子,例如usestate,useeffect,usecontext,usereducer等.\n\n下面是 hooks 的基本规则\n\n * hooks 应该在外层使用,不应该在循环,条件或嵌套函数中使用\n * hooks 应该只在函数组件中使用.\n\n让我们看一个例子来理解 hooks. 这是一个函数组件,它采用props并在ui上显示这些props. 在usestate钩子的帮助下,我们将这个函数组件转换为有状态组件.首先,我们在第5行定义状态,这相当于\n\nconstructor(props) {\n super(props);\n this.state = {\n     name:'myname', age:10, address:'0000 one street'\n }\n}\n\n\n1\n2\n3\n4\n5\n6\nusestate返回两个项,一个是user,另一个是setuser函数. user 是一个可以在没有 this关键字的情况下直接使用的对象,setuser是一个可以用来设置用户点击第21行按钮的状态的函数,该函数等效于以下内容.\n\nthis.setstate({name:'name changed'})\n\n\n1\nimport react, { usestate } from \"react\";\n\nexport const userdisplay = ({ name, address, age }) => {\n    const [user, setuser] = usestate({\n        name: \"myname\",\n        age: 10,\n        address: \"0000 onestreet\"\n    });\n\n    return (\n        <>\n            <div>\n                <div class=\"label\">name:</div>\n                <div>{user.name}</div>\n            </div>\n            <div>\n                <div class=\"label\">address:</div>\n                <div>{user.address}</div>\n            </div>\n            <div>\n                <div class=\"label\">age:</div>\n                <div>{user.age}</div>\n            </div>\n            <button onclick={() => setuser({ name: \"name changed\" })}>\n                click me\n            </button>\n        </>\n    );\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# 如何提高性能\n我们可以通过多种方式提高应用性能,以下这些比较重要：\n\n * 适当地使用shouldcomponentupdate生命周期方法. 它避免了子组件的不必要的渲染. 如果树中有100个组件,则不重新渲染整个组件树来提高应用程序性能.\n * 使用create-react-app来构建项目,这会创建整个项目结构,并进行大量优化.\n * 不可变性是提高性能的关键.不要对数据进行修改,而是始终在现有集合的基础上创建新的集合,以保持尽可能少的复制,从而提高性能.\n * 在显示列表或表格时始终使用 keys,这会让 react 的更新速度更快.\n * 代码分离是将代码插入到单独的文件中,只加载模块或部分所需的文件的技术.\n\n# 如何在重新加载页面时保留数据\n单页应用程序首先在dom中加载index.html,然后在用户浏览页面时加载内容,或者从同一index.html中的后端api获取任何数据.\n\n如果通过点击浏览器中的重新加载按钮重新加载页面index.html,整个react应用程序将重新加载,我们将丢失应用程序的状态.如何保留应用状态？\n\n每当重新加载应用程序时,我们使用浏览器localstorage来保存应用程序的状态.我们将整个存储数据保存在localstorage中,每当有页面刷新或重新加载时,我们从localstorage加载状态.\n\n# 如何在react进行api调用\n我们使用redux-thunk在react中调用api.因为reduce是纯函数,所以没有副作用,比如调用api.\n\n因此,我们必须使用redux-thunk从 action creators 那里进行 api 调用.action creator 派发一个action,将来自api的数据放入action 的 payload 中.reducers 接收我们在上面的redux循环中讨论的数据,其余的过程也是相同的.redux-thunk是一个中间件.一旦它被引入到项目中,每次派发一个action时,都会通过thunk传递.如果它是一个函数,它只是等待函数处理并返回响应.如果它不是一个函数,它只是正常处理.\n\n这里有一个例子.sendemailapi是从组件中调用的函数,它接受一个数据并返回一个函数,其中dispatch作为参数.我们使用redux-thunk调用api apiservice,并等待收到响应.一旦接收到响应,我们就使用payload 派发一个action.\n\nimport apiservice from '../services/apiservice';\n\nexport function sendemail(data) {\n    return { type:\"send_email\", payload: data };\n}\n\nexport function sendemailapi(email) {\n    return function(dispatch) {\n        return apiservice.callapi(email).then(data => {\n            dispatch(sendemail(data));\n        });\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13",charsets:{cjk:!0}},{title:"基本数据类型",frontmatter:{},regularPath:"/interview/type.html",relativePath:"interview/type.md",key:"v-73d937af",path:"/interview/type.html",lastUpdated:"6/24/2019, 2:49:10 PM",headersStr:null,content:"# 基本数据类型\n按值访问,可操作保存在变量中的实际的值.基本类型值指的是简单的数据段.\n\nundefined、null、string、number、boolean、symbol（es6）\n\n\n1\n引用类型： 当复制保存着对象的某个变量时,操作的是对象的引用,但在为对象添加属性时,操作的是实际的对象.引用类型值指那些可能为多个值构成的对象.\n\nObject、Array、RegExp、Date、Function、特殊的基本包装类型(String、Number、Boolean)以及单体内置对象(Global、Math).\n\n\n1\n对于基本数据类型和引用数据类型的区别 引用类型值可添加属性和方法,而基本类型值则不可以.\n\n//为引用类型值添加属性\nvar p = new Object();\np.age=11;\nalert(p.age);//11\n\n//为基本类型值添加属性\nvar name = 'a';\nname.age = 11;\nalert(name.age); //undefined\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n在复制变量值时,基本类型会在变量对象上创建一个新值,再复制给新变量.此后,两个变量的任何操作都不会影响到对方.而引用类型在创建一个对象类型时,计算机会在内存中开辟一个空间来存放值,我们要找到这个空间,需要知道这个空间的地址,变量存放的就是这个地址,复制变量时其实就是将地址复制了一份给新变量,两个变量的值都指向存储在堆中的一个对象,也就是说,其实他们引用了同一个对象,改变其中一个变量就会影响到另一个变量.\n\n//基本类型值\nvar a = 'a';\nvar b = a;\na = 'b';\nalert(b); //a\n\n\n引用类型值,以数组为例：\n//引用类型值,以数组为例\n\n//1.对其中一个变量直接赋值不会影响到另一个变量（并未操作引用的对象）\nvar a = [1,2,3];\nvar b = a;\na = [1,2,3,4];\nalert(a);//1,2,3,4\nalert(b); //1,2,3\n\n//2.使用push(操作了引用的对象)\nvar a = [1,2,3];\nvar b = a;\na.push(4);\nalert(a);//1,2,3,4\nalert(b); //1,2,3,4\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n传递参数：按值传递,将函数外部的值复制给函数内部的参数（一个局部变量）,当对局部变量进行操作时,局部变量的变化会反应在函数外部,但是这并不会影响函数外部的值.\n\nfunction add(a){\n    a += 10;\n    return a;\n}\n\nvar num = 10;\nvar result = add(num);\nalert(num); //10\nalert(result); //20\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n对象时可能会不好理解：\n\nfunction setName(obj){\n    obj.name = 'a';\n}\nvar p = new Object();\nsetName(p);\nalert(p.name); //a\n\n\n1\n2\n3\n4\n5\n6\n明明参数是按值传递的,为什么创建的p实例也能获取到在setName（）中添加的name属性呢？ 因为obj和p引用的是同一个对象,即便按值传递,obj也会按引用来访问同一个对象.看一下下面的例子就能清楚了.\n\nfunction setName(obj){\n    obj.name = 'a';\n    obj = new Object();\n    obj.name = 'b';\n    return obj;\n}\nvar p = new Object();\nvar p2 = setName(p);\nalert(p.name); // a\nalert(p2.name); // b\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n在函数内部重写obj对象,此时obj对象引用的是一个局部对象,外部的p还是原始的引用,因此不会改变. 检测类型： typeof:确定变量是字符串、数值、布尔值还是undefined的最佳工具.\n\nvar num = 1;\nvar a = 'a';\nvar b;\nvar flag = true;\nvar o = null;\nvar fn = function(){};\nvar rg = /hello/;\nalert(typeof num); //number\nalert(typeof a); //string\nalert(typeof b); //undefined\nalert(typeof flag); //boolean\nalert(typeof o); //object\nalert(typeof fn); //function\nalert(typeof rg); //object(sarari5、chrome7前返回function)\n\ninstanceof ：判断是否是某个对象类型.\nvar a = [1,2,3];\nalert(a instanceof Object); //true\nalert(a instanceof Array); //true\nalert(a instanceof RegExp); //false\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21",normalizedContent:"# 基本数据类型\n按值访问,可操作保存在变量中的实际的值.基本类型值指的是简单的数据段.\n\nundefined、null、string、number、boolean、symbol（es6）\n\n\n1\n引用类型： 当复制保存着对象的某个变量时,操作的是对象的引用,但在为对象添加属性时,操作的是实际的对象.引用类型值指那些可能为多个值构成的对象.\n\nobject、array、regexp、date、function、特殊的基本包装类型(string、number、boolean)以及单体内置对象(global、math).\n\n\n1\n对于基本数据类型和引用数据类型的区别 引用类型值可添加属性和方法,而基本类型值则不可以.\n\n//为引用类型值添加属性\nvar p = new object();\np.age=11;\nalert(p.age);//11\n\n//为基本类型值添加属性\nvar name = 'a';\nname.age = 11;\nalert(name.age); //undefined\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n在复制变量值时,基本类型会在变量对象上创建一个新值,再复制给新变量.此后,两个变量的任何操作都不会影响到对方.而引用类型在创建一个对象类型时,计算机会在内存中开辟一个空间来存放值,我们要找到这个空间,需要知道这个空间的地址,变量存放的就是这个地址,复制变量时其实就是将地址复制了一份给新变量,两个变量的值都指向存储在堆中的一个对象,也就是说,其实他们引用了同一个对象,改变其中一个变量就会影响到另一个变量.\n\n//基本类型值\nvar a = 'a';\nvar b = a;\na = 'b';\nalert(b); //a\n\n\n引用类型值,以数组为例：\n//引用类型值,以数组为例\n\n//1.对其中一个变量直接赋值不会影响到另一个变量（并未操作引用的对象）\nvar a = [1,2,3];\nvar b = a;\na = [1,2,3,4];\nalert(a);//1,2,3,4\nalert(b); //1,2,3\n\n//2.使用push(操作了引用的对象)\nvar a = [1,2,3];\nvar b = a;\na.push(4);\nalert(a);//1,2,3,4\nalert(b); //1,2,3,4\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n传递参数：按值传递,将函数外部的值复制给函数内部的参数（一个局部变量）,当对局部变量进行操作时,局部变量的变化会反应在函数外部,但是这并不会影响函数外部的值.\n\nfunction add(a){\n    a += 10;\n    return a;\n}\n\nvar num = 10;\nvar result = add(num);\nalert(num); //10\nalert(result); //20\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n对象时可能会不好理解：\n\nfunction setname(obj){\n    obj.name = 'a';\n}\nvar p = new object();\nsetname(p);\nalert(p.name); //a\n\n\n1\n2\n3\n4\n5\n6\n明明参数是按值传递的,为什么创建的p实例也能获取到在setname（）中添加的name属性呢？ 因为obj和p引用的是同一个对象,即便按值传递,obj也会按引用来访问同一个对象.看一下下面的例子就能清楚了.\n\nfunction setname(obj){\n    obj.name = 'a';\n    obj = new object();\n    obj.name = 'b';\n    return obj;\n}\nvar p = new object();\nvar p2 = setname(p);\nalert(p.name); // a\nalert(p2.name); // b\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n在函数内部重写obj对象,此时obj对象引用的是一个局部对象,外部的p还是原始的引用,因此不会改变. 检测类型： typeof:确定变量是字符串、数值、布尔值还是undefined的最佳工具.\n\nvar num = 1;\nvar a = 'a';\nvar b;\nvar flag = true;\nvar o = null;\nvar fn = function(){};\nvar rg = /hello/;\nalert(typeof num); //number\nalert(typeof a); //string\nalert(typeof b); //undefined\nalert(typeof flag); //boolean\nalert(typeof o); //object\nalert(typeof fn); //function\nalert(typeof rg); //object(sarari5、chrome7前返回function)\n\ninstanceof ：判断是否是某个对象类型.\nvar a = [1,2,3];\nalert(a instanceof object); //true\nalert(a instanceof array); //true\nalert(a instanceof regexp); //false\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21",charsets:{cjk:!0}},{title:"Typescript",frontmatter:{},regularPath:"/interview/typescript.html",relativePath:"interview/typescript.md",key:"v-4332c34e",path:"/interview/typescript.html",headers:[{level:2,title:"Typescript 优势",slug:"typescript-优势",normalizedTitle:"typescript 优势",charIndex:15}],lastUpdated:"3/3/2021, 9:34:15 AM",headersStr:"Typescript 优势",content:"# Typescript\n# Typescript 优势\n 1. 静态输入\n\n静态类型化是一种功能,可以在开发人员编写脚本时检测错误.查找并修复错误是当今开发团队的迫切需求.有了这项功能,就会允许开发人员编写更健壮的代码并对其进行维护,以便使得代码质量更好、更清晰.\n\n 2. 大型的开发项目\n\n有时为了改进开发项目,需要对代码库进行小的增量更改.这些小小的变化可能会产生严重的、意想不到的后果,因此有必要撤销这些变化.使用 TypeScript 工具来进行重构更变的容易、快捷.\n\n 3. 更好的协作\n\n当发开大型项目时,会有许多开发人员,此时乱码和错误的机也会增加.类型安全是一种在编码期间检测错误的功能,而不是在编译项目时检测错误.这为开发团队创建了一个更高效的编码和调试过程.\n\n 4. 更强的生产力\n\n干净的 ECMAScript 6 代码,自动完成和动态输入等因素有助于提高开发人员的工作效率.这些功能也有助于编译器创建优化的代码.",normalizedContent:"# typescript\n# typescript 优势\n 1. 静态输入\n\n静态类型化是一种功能,可以在开发人员编写脚本时检测错误.查找并修复错误是当今开发团队的迫切需求.有了这项功能,就会允许开发人员编写更健壮的代码并对其进行维护,以便使得代码质量更好、更清晰.\n\n 2. 大型的开发项目\n\n有时为了改进开发项目,需要对代码库进行小的增量更改.这些小小的变化可能会产生严重的、意想不到的后果,因此有必要撤销这些变化.使用 typescript 工具来进行重构更变的容易、快捷.\n\n 3. 更好的协作\n\n当发开大型项目时,会有许多开发人员,此时乱码和错误的机也会增加.类型安全是一种在编码期间检测错误的功能,而不是在编译项目时检测错误.这为开发团队创建了一个更高效的编码和调试过程.\n\n 4. 更强的生产力\n\n干净的 ecmascript 6 代码,自动完成和动态输入等因素有助于提高开发人员的工作效率.这些功能也有助于编译器创建优化的代码.",charsets:{cjk:!0}},{title:"Vue 基础",frontmatter:{},regularPath:"/interview/vue.html",relativePath:"interview/vue.md",key:"v-28914593",path:"/interview/vue.html",headers:[{level:2,title:"vue 常用指令",slug:"vue-常用指令",normalizedTitle:"vue 常用指令",charIndex:11},{level:2,title:"Vue 的 MVVM",slug:"vue-的-mvvm",normalizedTitle:"vue 的 mvvm",charIndex:201},{level:2,title:"v-for和v-if为什么不能一起用",slug:"v-for和v-if为什么不能一起用",normalizedTitle:"v-for和v-if为什么不能一起用",charIndex:410},{level:2,title:"Vue 组件之间通讯",slug:"vue-组件之间通讯",normalizedTitle:"vue 组件之间通讯",charIndex:487},{level:2,title:"vue 生命周期的理解",slug:"vue-生命周期的理解",normalizedTitle:"vue 生命周期的理解",charIndex:792},{level:2,title:"vuex 几大属性",slug:"vuex-几大属性",normalizedTitle:"vuex 几大属性",charIndex:1237},{level:2,title:"state",slug:"state",normalizedTitle:"state",charIndex:1302},{level:2,title:"getter",slug:"getter",normalizedTitle:"getter",charIndex:1480},{level:2,title:"mutation",slug:"mutation",normalizedTitle:"mutation",charIndex:1729},{level:2,title:"action",slug:"action",normalizedTitle:"action",charIndex:1785},{level:2,title:"vue 优点",slug:"vue-优点",normalizedTitle:"vue 优点",charIndex:1896},{level:2,title:"写 React / Vue 项目时为什么要在组件中写 key,其作用是什么",slug:"写-react-vue-项目时为什么要在组件中写-key-其作用是什么",normalizedTitle:"写 react / vue 项目时为什么要在组件中写 key,其作用是什么",charIndex:2162},{level:2,title:"Vue 的路由实现",slug:"vue-的路由实现",normalizedTitle:"vue 的路由实现",charIndex:2249},{level:2,title:"Vue 为什么采用异步渲染",slug:"vue-为什么采用异步渲染",normalizedTitle:"vue 为什么采用异步渲染",charIndex:2294},{level:2,title:"什么是渐进式",slug:"什么是渐进式",normalizedTitle:"什么是渐进式",charIndex:2559},{level:2,title:"keep-live",slug:"keep-live",normalizedTitle:"keep-live",charIndex:2652},{level:2,title:"Computed watch 和 method",slug:"computed-watch-和-method",normalizedTitle:"computed watch 和 method",charIndex:2700},{level:2,title:"组件中的 data 为什么是函数",slug:"组件中的-data-为什么是函数",normalizedTitle:"组件中的 data 为什么是函数",charIndex:2928},{level:2,title:"插槽与作用域插槽的区别",slug:"插槽与作用域插槽的区别",normalizedTitle:"插槽与作用域插槽的区别",charIndex:3056},{level:2,title:"vue 响应式原理",slug:"vue-响应式原理",normalizedTitle:"vue 响应式原理",charIndex:3291},{level:3,title:"Object.defineProperty",slug:"object-defineproperty",normalizedTitle:"object.defineproperty",charIndex:3303},{level:3,title:"发布订阅模式",slug:"发布订阅模式",normalizedTitle:"发布订阅模式",charIndex:3808},{level:2,title:"nextTick",slug:"nexttick",normalizedTitle:"nexttick",charIndex:2387},{level:2,title:"Vue 组件渲染顺序",slug:"vue-组件渲染顺序",normalizedTitle:"vue 组件渲染顺序",charIndex:4764},{level:2,title:"数据响应(数据劫持)",slug:"数据响应-数据劫持",normalizedTitle:"数据响应(数据劫持)",charIndex:4842},{level:2,title:"Vue 如何从真实 dom 到虚拟 dom",slug:"vue-如何从真实-dom-到虚拟-dom",normalizedTitle:"vue 如何从真实 dom 到虚拟 dom",charIndex:7001},{level:2,title:"用 VNode 来描述一个 dom 结构",slug:"用-vnode-来描述一个-dom-结构",normalizedTitle:"用 vnode 来描述一个 dom 结构",charIndex:7117},{level:2,title:"virtual dom 原理实现",slug:"virtual-dom-原理实现",normalizedTitle:"virtual dom 原理实现",charIndex:7288},{level:2,title:"Proxy 相比于 defineProperty 的优势",slug:"proxy-相比于-defineproperty-的优势",normalizedTitle:"proxy 相比于 defineproperty 的优势",charIndex:10398},{level:2,title:"vue-router 有哪几种导航守卫?",slug:"vue-router-有哪几种导航守卫",normalizedTitle:"vue-router 有哪几种导航守卫?",charIndex:10458},{level:2,title:"Vue 为什么用 function 实现类,而不是 ES6 的 class",slug:"vue-为什么用-function-实现类-而不是-es6-的-class",normalizedTitle:"vue 为什么用 function 实现类,而不是 es6 的 class",charIndex:10514},{level:2,title:"vue3 的优点",slug:"vue3-的优点",normalizedTitle:"vue3 的优点",charIndex:10856}],lastUpdated:"2/22/2021, 3:30:54 AM",headersStr:"vue 常用指令 Vue 的 MVVM v-for和v-if为什么不能一起用 Vue 组件之间通讯 vue 生命周期的理解 vuex 几大属性 state getter mutation action vue 优点 写 React / Vue 项目时为什么要在组件中写 key,其作用是什么 Vue 的路由实现 Vue 为什么采用异步渲染 什么是渐进式 keep-live Computed watch 和 method 组件中的 data 为什么是函数 插槽与作用域插槽的区别 vue 响应式原理 Object.defineProperty 发布订阅模式 nextTick Vue 组件渲染顺序 数据响应(数据劫持) Vue 如何从真实 dom 到虚拟 dom 用 VNode 来描述一个 dom 结构 virtual dom 原理实现 Proxy 相比于 defineProperty 的优势 vue-router 有哪几种导航守卫? Vue 为什么用 function 实现类,而不是 ES6 的 class vue3 的优点",content:'# Vue 基础\n# vue 常用指令\nspan\n\nv-if v-show v-bind(:) v-for v-model  v-text v-html v-on(@)\n\n\n\n# MVC\n\n\n答案1. View 传送指令到 Controller\n\n\n2. Controller 完成业务逻辑后,要求 Model 改变状态\n\n\n3. Model 将新的数据发送到 View,用户得到反馈\n\n   \n\n# Vue 的 MVVM\n答案MVVM 全称是 Model-View-ViewModel,Vue 是以数据驱动的,一旦 dom 创建,数据更新 dom 也就跟着更新\n\n1、M 就是 Model 模型层,存的一个数据对象.\n\n2、V 就是 View 视图层,所有的 html 节点在这一层.\n\n3、VM 就是 ViewModel,它通过 data 属性连接 Model 模型层,通过 el 属性连接 View 视图层\n\n# v-for和v-if为什么不能一起用\n答案 * v-for 会比v-if 的优先级更高，连用的话会把v-if 的每个元素都添加一下，造成性能问题。\n\n# Vue 组件之间通讯\n答案 * 父子间通信:父亲提供数据通过属性props传给儿子；儿子通过$on 绑父亲的事件，再通过$emit 触发自己的事件（发布订阅）\n * 利用父子关系$parent 、$children ，\n\n获取父子组件实例的方法。\n\n * 父组件提供数据，子组件注入。provide 、inject ，插件用得多。\n * ref 获取组件实例，调用组件的属性、方法\n * 跨组件通信Event Bus （Vue.prototype.bus=newVue）其实基于 bus = new Vue）其实基于 bus=newVue）其实基于 on 与$emit\n * vuex 状态管理实现通信\n\n# vue 生命周期的理解\n答案创建前/后,载入前/后,更新前/后,销毁前/后\n\n它的生命周期中有多个事件钩子,让我们在控制整个 Vue 实例的过程时更容易形成好的逻辑.\n\n * beforeCreated() 在实例创建之间执行,数据未加载状态\n   \n   \n * created() 在实例创建、数据加载后,能初始化数据,dom 渲染之前执行\n   \n   \n * beforeMount() 虚拟 dom 已创建完成,在数据渲染前最后一次更改数据\n   \n   \n * mounted() 页面、数据渲染完成,真实 dom 挂载完成\n   \n   \n * beforeUpadate() 重新渲染之前触发\n   \n   \n * updated() 数据已经更改完成,dom 也重新 render 完成,更改数据会陷入死循环\n   \n   \n * beforeDestory() 和 destoryed() 前者是销毁前执行（实例仍然完全可用）,后者则是销毁后执行\n   \n   \n\n# vuex 几大属性\n答案有五种,分别是 State、 Getter、Mutation 、Action、 Module\n  \n\n# state\n答案1、Vuex 就是一个仓库,仓库里面放了很多对象.其中 state 就是数据源存放地,对应于与一般 Vue 对象里面的 data\n\n2、state 里面存放的数据是响应式的,Vue 组件从 store 中读取数据,若是 store 中的数据发生改变,依赖这个数据的组件也会发生更新\n\n3、它通过 mapState 把全局的 state 和 getters 映射到当前组件的 computed 计算属性中\n\n# getter\n答案1、Vuex 就是一个仓库,仓库里面放了很多对象.其中 state 就是数据源存放地,对应于与一般 Vue 对象里面的 data\n\n2、state 里面存放的数据是响应式的,Vue 组件从 store 中读取数据,若是 store 中的数据发生改变,依赖这个数据的组件也会发生更新\n\n3、它通过 mapState 把全局的 state 和 getters 映射到当前组件的 computed 计算属性中\n\n# mutation\n答案mutations 定义的方法动态修改 Vuex 的 store 中的状态或数据.\n\n# action\n答案action 类似于 mutation,不同在于：\n\n * action 提交的是 mutation,而不是直接变更状态.\n   \n   \n * action 可以包含任意异步操作\n   \n   \n\n# vue 优点\n答案低耦合.视图（View）可以独立于 Model 变化和修改,一个 ViewModel 可以绑定到不同的"View"上,当 View 变化的时候 Model 可以不变,当 Model 变化的时候 View 也可以不变.\n\n可重用性.你可以把一些视图逻辑放在一个 ViewModel 里面,让很多 view 重用这段视图逻辑.\n\n独立开发.开发人员可以专注于业务逻辑和数据的开发（ViewModel）,设计人员可以专注于页面设计,使用 Expression Blend 可以很容易设计界面并生成 xml 代码.\n\n# 写 React / Vue 项目时为什么要在组件中写 key,其作用是什么\n答案key 的作用是为了在 diff 算法执行时更快的找到对应的节点,提高 diff 速度\n\n# Vue 的路由实现\n答案hash 模式 和 history 模式\n\n# Vue 深入\n# Vue 为什么采用异步渲染\n答案Vue 是组件级更新，如果不采用异步更新，那么每次更新数据都会对当前组件进行重新渲染，所以为了性能，Vue 会在本轮数据更新后，在异步更新视图。核心思想 nextTick 。\n\ndep.notify（） 通知 watcher 进行更新，subs[i].update 依次调用 watcher 的 update ，queueWatcher 将 watcher 去重放入队列， nextTick（flushSchedulerQueue ）在下一 tick 中刷新 watcher 队列（异步）。\n\n# 什么是渐进式\n答案简单的来说就是把框架分层,还有一种理解,如果你有一个现成的服务端应用,也就是非单页应用,可以将 Vuejs 作为该应用的一部分嵌入其中,带来更多的丰富的交互体验\n\n# keep-live\n答案把切换出去的组件保留在缓存中,可以保留组件的状态或者避免重新渲染\n\n# Computed watch 和 method\n答案computed：默认computed也是一个watcher具备缓存，只有当依赖的数据变化时才会计算, 当数据没有变化时, 它会读取缓存数据。如果一个数据依赖于其他数据，使用 computed watch：每次都需要执行函数。 watch 更适用于数据变化时的异步操作。如果需要在某个数据变化时做一些事情，使用watch。 method：只要把方法用到模板上了,每次一变化就会重新渲染视图，性能开销大# 组件中的 data 为什么是函数\n答案避免组件中的数据互相影响。同一个组件被复用多次会创建多个实例，如果 data 是一个对象的话，这些实例用的是同一个构造函数。为了保证组件的数据独立，要求每个组件都必须通过 data 函数返回一个对象作为组件的状态。# 插槽与作用域插槽的区别\n> 插槽\n\n\n答案- 创建组件虚拟节点时，会将组件儿子的虚拟节点保存起来。当初始化组件时，通过插槽属性将儿子进行分类 {a:[vnode],b[vnode]} - 渲染组件时会拿对应的 slot 属性的节点进行替换操作。（插槽的作用域为父组件）> 作用域插槽\n\n\n答案- 作用域插槽在解析的时候不会作为组件的孩子节点。会解析成函数，当子组件渲染时，会调用此函数进行渲染。 - 普通插槽渲染的作用域是父组件，作用域插槽的渲染作用域是当前子组件。# vue 响应式原理\n# Object.defineProperty\n答案首先我们想到的是 Object.defineProperty,这是 es5 新增的一个 api,它可以允许我们为对象的属性来设定 getter 和 setter,从而我们可以劫持用户对对象属性的取值和赋值.比如以下代码:\n\nconst obj = {};\n\n\nlet val = "cjg";\n\nObject.defineProperty(obj, "name", {\n\nget() {\n\nconsole.log("劫持了你的取值操作啦");\n\nreturn val;\n\n},\n\nset(newVal) {\n\nconsole.log("劫持了你的赋值操作啦");\n\nval = newVal;\n\n},\n\n});\n\n\nconsole.log(obj.name);\n\nobj.name = "cwc";\n\nconsole.log(obj.name);\n\n\n\n我们通过 Object.defineProperty 劫持了 obj[name]的取值和赋值操作,因此我们就可以在这里做一些手脚啦,比如说,我们可以在 obj[name]被赋值的时候触发更新页面操作.\n\n# 发布订阅模式\n答案发布订阅模式是设计模式中比较常见的一种,其中有两个角色：发布者和订阅者.多个订阅者可以向同一发布者订阅一个事件,当事件发生的时候,发布者通知所有订阅该事件的订阅者.我们来看一个例子了解下.\n\nclass Dep {\n\n  constructor() {\n\n    this.subs = [];\n\n  }\n\n  // 增加订阅者\n\n  addSub(sub) {\n\n    if (this.subs.indexOf(sub) < 0) {\n  \n      this.subs.push(sub);\n  \n    }\n\n  }\n\n  // 通知订阅者\n\n  notify() {\n\n    this.subs.forEach((sub) => {\n  \n      sub.update();\n  \n    });\n\n  }\n\n}\n\n\nconst dep = new Dep();\n\n\nconst sub = {\n\nupdate() {\n\nconsole.log("sub1 update");\n\n},\n\n};\n\n\nconst sub1 = {\n\nupdate() {\n\nconsole.log("sub2 update");\n\n},\n\n};\n\n\ndep.addSub(sub);\n\ndep.addSub(sub1);\n\ndep.notify(); //\n\n\n\n * vue.js 首先通过 Object.defineProperty 来对要监听的数据进行 getter 和 setter 劫持,当数据的属性被赋值/取值的时候,vue.js 就可以察觉到并做相应的处理.\n * 通过订阅发布模式,我们可以为对象的每个属性都创建一个发布者,当有其他订阅者依赖于这个属性的时候,则将订阅者加入到发布者的队列中.利用 Object.defineProperty 的数据劫持,在属性的 setter 调用的时候,该属性的发布者通知所有订阅者更新内容.\n\n# nextTick\n答案异步方法，异步渲染最后一步，与 JS事件循环联系紧密。主要使用了宏任务微任务（setTimeout、promise那些），定义了一个异步方法，多次调用 nextTick会将方法存入队列，通过异步方法清空当前队列。\n\n# Vue 组件渲染顺序\n答案渲染顺序：先父后子，完成顺序：先子后父更新顺序：父更新导致子更新，子更新完成后父\n\n销毁顺序：先父后子，完成顺序：先子后父\n\n# 数据响应(数据劫持)\n答案看完生命周期后,里面的 watcher 等内容其实是数据响应中的一部分.数据响应的实现由两部分构成: 观察者( watcher ) 和 依赖收集器( Dep ),其核心是 defineProperty 这个方法,它可以 重写属性的 get 与 set 方法,从而完成监听数据的改变.\n\n * Observe (观察者)观察 props 与 state\n   \n    * 遍历 props 与 state,对每个属性创建独立的监听器( watcher )\n   \n   \n\n * 使用 defineProperty 重写每个属性的 get/set(defineReactive）\n   \n    * get: 收集依赖\n      \n       * Dep.depend()\n         \n          * watcher.addDep()\n         \n         \n      \n      \n    * set: 派发更新\n      \n       * Dep.notify()\n       * watcher.update()\n       * queenWatcher()\n       * nextTick\n       * flushScheduleQueue\n       * watcher.run()\n       * updateComponent()\n      \n      \n   \n   \n\nlet data = { a: 1 };\n\n// 数据响应性\n\nobserve(data);\n\n\n// 初始化观察者\n\nnew Watcher(data, "name", updateComponent);\n\ndata.a = 2;\n\n\n// 简单表示用于数据更新后的操作\n\nfunction updateComponent() {\n\n  vm._update(); // patchs\n\n}\n\n\n// 监视对象\n\nfunction observe(obj) {\n\n  // 遍历对象,使用 get/set 重新定义对象的每个属性值\n\n  Object.keys(obj).map((key) => {\n\n    defineReactive(obj, key, obj[key]);\n\n  });\n\n}\n\n\nfunction defineReactive(obj, k, v) {\n\n  // 递归子属性\n\n  if (type(v) == "object") observe(v);\n\n\n  // 新建依赖收集器\n\n  let dep = new Dep();\n\n  // 定义get/set\n\n  Object.defineProperty(obj, k, {\n\n    enumerable: true,\n  \n    configurable: true,\n  \n    get: function reactiveGetter() {\n  \n      // 当有获取该属性时,证明依赖于该对象,因此被添加进收集器中\n  \n      if (Dep.target) {\n  \n        dep.addSub(Dep.target);\n  \n      }\n  \n      return v;\n  \n    },\n  \n    // 重新设置值时,触发收集器的通知机制\n  \n    set: function reactiveSetter(nV) {\n  \n      v = nV;\n  \n      dep.nofify();\n  \n    },\n\n  });\n\n}\n\n\n// 依赖收集器\n\nclass Dep {\n\n  constructor() {\n\n    this.subs = [];\n\n  }\n\n  addSub(sub) {\n\n    this.subs.push(sub);\n\n  }\n\n  notify() {\n\n    this.subs.map((sub) => {\n  \n      sub.update();\n  \n    });\n\n  }\n\n}\n\n\nDep.target = null;\n\n\n// 观察者\n\nclass Watcher {\n\n  constructor(obj, key, cb) {\n\n    Dep.target = this;\n  \n    this.cb = cb;\n  \n    this.obj = obj;\n  \n    this.key = key;\n  \n    this.value = obj[key];\n  \n    Dep.target = null;\n\n  }\n\n  addDep(Dep) {\n\n    Dep.addSub(this);\n\n  }\n\n  update() {\n\n    this.value = this.obj[this.key];\n  \n    this.cb(this.value);\n\n  }\n\n  before() {\n\n    callHook("beforeUpdate");\n\n  }\n\n}\n\n  \n\n# Vue 如何从真实 dom 到虚拟 dom\n答案涉及到Vue中的模板编译原理，主要过程：将模板转换成 ast 树， ast 用对象来描述真实的 JS语法（将真实 DOM转换成虚拟 DOM）\n\n优化树\n\n将 ast 树生成代码\n\n# 用 VNode 来描述一个 dom 结构\n答案涉及到Vue中的模板编译原理，主要过程： 虚拟节点就是用一个对象来描述一个真实的DOM元素。首先将` template` （真实DOM）先转成` ast` ，` ast` 树通过` codegen` 生成` render` 函数，` render` 函数里的` _c` 方法将它转为虚拟dom# virtual dom 原理实现\n答案 * 创建 dom 树\n   \n   \n * 树的 diff,同层对比,输出 patchs(listDiff/diffChildren/diffProps)\n   \n    * 没有新的节点,返回\n      \n      \n    * 新的节点 tagName 与 key 不变, 对比 props,继续递归遍历子树\n      \n       * 对比属性(对比新旧属性列表):\n         \n          * 旧属性是否存在与新属性列表中\n          * 都存在的是否有变化\n          * 是否出现旧列表中没有的新属性\n         \n         \n       * tagName 和 key 值变化了,则直接替换成新节点\n         \n         \n      \n      \n   \n   \n * 渲染差异\n   \n    * 遍历 patchs, 把需要更改的节点取出来\n    * 局部更新 dom\n   \n   \n\n// diff算法的实现\n\nfunction diff(oldTree, newTree) {\n\n  // 差异收集\n\n  let pathchs = {};\n\n  dfs(oldTree, newTree, 0, pathchs);\n\n  return pathchs;\n\n}\n\n\nfunction dfs(oldNode, newNode, index, pathchs) {\n\nlet curPathchs = [];\n\nif (newNode) {\n\n// 当新旧节点的 tagName 和 key 值完全一致时\n\nif (oldNode.tagName === newNode.tagName && oldNode.key === newNode.key) {\n\n// 继续比对属性差异\n\nlet props = diffProps(oldNode.props, newNode.props);\n\ncurPathchs.push({ type: "changeProps", props });\n\n// 递归进入下一层级的比较\n\ndiffChildrens(oldNode.children, newNode.children, index, pathchs);\n\n} else {\n\n// 当 tagName 或者 key 修改了后,表示已经是全新节点,无需再比\n\ncurPathchs.push({ type: "replaceNode", node: newNode });\n\n}\n\n}\n\n\n// 构建出整颗差异树\n\nif (curPathchs.length) {\n\nif (pathchs[index]) {\n\npathchs[index] = pathchs[index].concat(curPathchs);\n\n} else {\n\npathchs[index] = curPathchs;\n\n}\n\n}\n\n}\n\n\n// 属性对比实现\n\nfunction diffProps(oldProps, newProps) {\n\nlet propsPathchs = [];\n\n// 遍历新旧属性列表\n\n// 查找删除项\n\n// 查找修改项\n\n// 查找新增项 mutation\n\nforin(olaProps, (k, v) => {\n\nif (!newProps.hasOwnProperty(k)) {\n\npropsPathchs.push({ type: "remove", prop: k });\n\n} else {\n\nif (v !== newProps[k]) {\n\npropsPathchs.push({ type: "change", prop: k, value: newProps[k] });\n\n}\n\n}\n\n});\n\nforin(newProps, (k, v) => {\n\nif (!oldProps.hasOwnProperty(k)) {\n\npropsPathchs.push({ type: "add", prop: k, value: v });\n\n}\n\n});\n\nreturn propsPathchs;\n\n}\n\n\n// 对比子级差异\n\nfunction diffChildrens(oldChild, newChild, index, pathchs) {\n\n// 标记子级的删除/新增/移动\n\nlet { change, list } = diffList(oldChild, newChild, index, pathchs);\n\nif (change.length) {\n\nif (pathchs[index]) {\n\npathchs[index] = pathchs[index].concat(change);\n\n} else {\n\npathchs[index] = change;\n\n}\n\n}\n\n\n// 根据 key 获取原本匹配的节点,进一步递归从头开始对比\n\noldChild.map((item, i) => {\n\nlet keyIndex = list.indexOf(item.key);\n\nif (keyIndex) {\n\nlet node = newChild[keyIndex];\n\n// 进一步递归对比\n\ndfs(item, node, index, pathchs);\n\n}\n\n});\n\n}\n\n\n// 列表对比,主要也是根据 key 值查找匹配项\n\n// 对比出新旧列表的新增/删除/移动\n\nfunction diffList(oldList, newList, index, pathchs) {\n\nlet change = [];\n\nlet list = [];\n\nconst newKeys = getKey(newList);\n\noldList.map((v) => {\n\nif (newKeys.indexOf(v.key) > -1) {\n\nlist.push(v.key);\n\n} else {\n\nlist.push(null);\n\n}\n\n});\n\n\n// 标记删除\n\nfor (let i = list.length - 1; i >= 0; i--) {\n\nif (!list[i]) {\n\nlist.splice(i, 1);\n\nchange.push({ type: "remove", index: i });\n\n}\n\n}\n\n\n// 标记新增和移动\n\nnewList.map((item, i) => {\n\nconst key = item.key;\n\nconst index = list.indexOf(key);\n\nif (index === -1 || key == null) {\n\n// 新增\n\nchange.push({ type: "add", node: item, index: i });\n\nlist.splice(i, 0, key);\n\n} else {\n\n// 移动\n\nif (index !== i) {\n\nchange.push({\n\ntype: "move",\n\nform: index,\n\nto: i,\n\n});\n\nmove(list, index, i);\n\n}\n\n}\n\n});\n\n\nreturn { change, list };\n\n}\n\n\n\n# Proxy 相比于 defineProperty 的优势\n答案 * 数组变化也能监听到\n * 不需要深度遍历监听\n\n# vue-router 有哪几种导航守卫?\n答案 * 全局守卫\n * 路由独享守卫\n * 路由组件内的守卫\n\n# Vue 为什么用 function 实现类,而不是 ES6 的 class\n答案很多的 mixin 的函数调用,把 Vue 当参数传入,它的功能个都是给 VUe 的 prototype 上扩展一些方法,Vue 按功能把这些扩展分散到多个模块中去实现,而不是一个模块实现所有,这种方式 Class 是很难实现的,这么做的好处是非常方便代码的维护和管理\n\n在 Vue3 中使用 Function-base API\n\n对比 Class API\n\n * 更灵活的逻辑复用能力\n   \n   \n * 更好的 TypeScript 类型推到支持\n   \n   \n * 更好的性能\n   \n   \n * Tree-shaking 友好\n   \n   \n * 代码更容易被压缩\n   \n   \n\n# vue3 的优点\n答案 * 更小\n\n> 移除了一些不常用的 API,引入了 tree-shaking\n\n\n * 更快\n\n> diff 算法优化\n\n\n> 静态提升\n\n\n> 事件监听缓存\n\n\n> SSR 优化\n\n\n * TypeScript 支持\n * API 设计一致性\n * 提升自身可维护性\n * 开放更多的底层功能',normalizedContent:'# vue 基础\n# vue 常用指令\nspan\n\nv-if v-show v-bind(:) v-for v-model  v-text v-html v-on(@)\n\n\n\n# mvc\n\n\n答案1. view 传送指令到 controller\n\n\n2. controller 完成业务逻辑后,要求 model 改变状态\n\n\n3. model 将新的数据发送到 view,用户得到反馈\n\n   \n\n# vue 的 mvvm\n答案mvvm 全称是 model-view-viewmodel,vue 是以数据驱动的,一旦 dom 创建,数据更新 dom 也就跟着更新\n\n1、m 就是 model 模型层,存的一个数据对象.\n\n2、v 就是 view 视图层,所有的 html 节点在这一层.\n\n3、vm 就是 viewmodel,它通过 data 属性连接 model 模型层,通过 el 属性连接 view 视图层\n\n# v-for和v-if为什么不能一起用\n答案 * v-for 会比v-if 的优先级更高，连用的话会把v-if 的每个元素都添加一下，造成性能问题。\n\n# vue 组件之间通讯\n答案 * 父子间通信:父亲提供数据通过属性props传给儿子；儿子通过$on 绑父亲的事件，再通过$emit 触发自己的事件（发布订阅）\n * 利用父子关系$parent 、$children ，\n\n获取父子组件实例的方法。\n\n * 父组件提供数据，子组件注入。provide 、inject ，插件用得多。\n * ref 获取组件实例，调用组件的属性、方法\n * 跨组件通信event bus （vue.prototype.bus=newvue）其实基于 bus = new vue）其实基于 bus=newvue）其实基于 on 与$emit\n * vuex 状态管理实现通信\n\n# vue 生命周期的理解\n答案创建前/后,载入前/后,更新前/后,销毁前/后\n\n它的生命周期中有多个事件钩子,让我们在控制整个 vue 实例的过程时更容易形成好的逻辑.\n\n * beforecreated() 在实例创建之间执行,数据未加载状态\n   \n   \n * created() 在实例创建、数据加载后,能初始化数据,dom 渲染之前执行\n   \n   \n * beforemount() 虚拟 dom 已创建完成,在数据渲染前最后一次更改数据\n   \n   \n * mounted() 页面、数据渲染完成,真实 dom 挂载完成\n   \n   \n * beforeupadate() 重新渲染之前触发\n   \n   \n * updated() 数据已经更改完成,dom 也重新 render 完成,更改数据会陷入死循环\n   \n   \n * beforedestory() 和 destoryed() 前者是销毁前执行（实例仍然完全可用）,后者则是销毁后执行\n   \n   \n\n# vuex 几大属性\n答案有五种,分别是 state、 getter、mutation 、action、 module\n  \n\n# state\n答案1、vuex 就是一个仓库,仓库里面放了很多对象.其中 state 就是数据源存放地,对应于与一般 vue 对象里面的 data\n\n2、state 里面存放的数据是响应式的,vue 组件从 store 中读取数据,若是 store 中的数据发生改变,依赖这个数据的组件也会发生更新\n\n3、它通过 mapstate 把全局的 state 和 getters 映射到当前组件的 computed 计算属性中\n\n# getter\n答案1、vuex 就是一个仓库,仓库里面放了很多对象.其中 state 就是数据源存放地,对应于与一般 vue 对象里面的 data\n\n2、state 里面存放的数据是响应式的,vue 组件从 store 中读取数据,若是 store 中的数据发生改变,依赖这个数据的组件也会发生更新\n\n3、它通过 mapstate 把全局的 state 和 getters 映射到当前组件的 computed 计算属性中\n\n# mutation\n答案mutations 定义的方法动态修改 vuex 的 store 中的状态或数据.\n\n# action\n答案action 类似于 mutation,不同在于：\n\n * action 提交的是 mutation,而不是直接变更状态.\n   \n   \n * action 可以包含任意异步操作\n   \n   \n\n# vue 优点\n答案低耦合.视图（view）可以独立于 model 变化和修改,一个 viewmodel 可以绑定到不同的"view"上,当 view 变化的时候 model 可以不变,当 model 变化的时候 view 也可以不变.\n\n可重用性.你可以把一些视图逻辑放在一个 viewmodel 里面,让很多 view 重用这段视图逻辑.\n\n独立开发.开发人员可以专注于业务逻辑和数据的开发（viewmodel）,设计人员可以专注于页面设计,使用 expression blend 可以很容易设计界面并生成 xml 代码.\n\n# 写 react / vue 项目时为什么要在组件中写 key,其作用是什么\n答案key 的作用是为了在 diff 算法执行时更快的找到对应的节点,提高 diff 速度\n\n# vue 的路由实现\n答案hash 模式 和 history 模式\n\n# vue 深入\n# vue 为什么采用异步渲染\n答案vue 是组件级更新，如果不采用异步更新，那么每次更新数据都会对当前组件进行重新渲染，所以为了性能，vue 会在本轮数据更新后，在异步更新视图。核心思想 nexttick 。\n\ndep.notify（） 通知 watcher 进行更新，subs[i].update 依次调用 watcher 的 update ，queuewatcher 将 watcher 去重放入队列， nexttick（flushschedulerqueue ）在下一 tick 中刷新 watcher 队列（异步）。\n\n# 什么是渐进式\n答案简单的来说就是把框架分层,还有一种理解,如果你有一个现成的服务端应用,也就是非单页应用,可以将 vuejs 作为该应用的一部分嵌入其中,带来更多的丰富的交互体验\n\n# keep-live\n答案把切换出去的组件保留在缓存中,可以保留组件的状态或者避免重新渲染\n\n# computed watch 和 method\n答案computed：默认computed也是一个watcher具备缓存，只有当依赖的数据变化时才会计算, 当数据没有变化时, 它会读取缓存数据。如果一个数据依赖于其他数据，使用 computed watch：每次都需要执行函数。 watch 更适用于数据变化时的异步操作。如果需要在某个数据变化时做一些事情，使用watch。 method：只要把方法用到模板上了,每次一变化就会重新渲染视图，性能开销大# 组件中的 data 为什么是函数\n答案避免组件中的数据互相影响。同一个组件被复用多次会创建多个实例，如果 data 是一个对象的话，这些实例用的是同一个构造函数。为了保证组件的数据独立，要求每个组件都必须通过 data 函数返回一个对象作为组件的状态。# 插槽与作用域插槽的区别\n> 插槽\n\n\n答案- 创建组件虚拟节点时，会将组件儿子的虚拟节点保存起来。当初始化组件时，通过插槽属性将儿子进行分类 {a:[vnode],b[vnode]} - 渲染组件时会拿对应的 slot 属性的节点进行替换操作。（插槽的作用域为父组件）> 作用域插槽\n\n\n答案- 作用域插槽在解析的时候不会作为组件的孩子节点。会解析成函数，当子组件渲染时，会调用此函数进行渲染。 - 普通插槽渲染的作用域是父组件，作用域插槽的渲染作用域是当前子组件。# vue 响应式原理\n# object.defineproperty\n答案首先我们想到的是 object.defineproperty,这是 es5 新增的一个 api,它可以允许我们为对象的属性来设定 getter 和 setter,从而我们可以劫持用户对对象属性的取值和赋值.比如以下代码:\n\nconst obj = {};\n\n\nlet val = "cjg";\n\nobject.defineproperty(obj, "name", {\n\nget() {\n\nconsole.log("劫持了你的取值操作啦");\n\nreturn val;\n\n},\n\nset(newval) {\n\nconsole.log("劫持了你的赋值操作啦");\n\nval = newval;\n\n},\n\n});\n\n\nconsole.log(obj.name);\n\nobj.name = "cwc";\n\nconsole.log(obj.name);\n\n\n\n我们通过 object.defineproperty 劫持了 obj[name]的取值和赋值操作,因此我们就可以在这里做一些手脚啦,比如说,我们可以在 obj[name]被赋值的时候触发更新页面操作.\n\n# 发布订阅模式\n答案发布订阅模式是设计模式中比较常见的一种,其中有两个角色：发布者和订阅者.多个订阅者可以向同一发布者订阅一个事件,当事件发生的时候,发布者通知所有订阅该事件的订阅者.我们来看一个例子了解下.\n\nclass dep {\n\n  constructor() {\n\n    this.subs = [];\n\n  }\n\n  // 增加订阅者\n\n  addsub(sub) {\n\n    if (this.subs.indexof(sub) < 0) {\n  \n      this.subs.push(sub);\n  \n    }\n\n  }\n\n  // 通知订阅者\n\n  notify() {\n\n    this.subs.foreach((sub) => {\n  \n      sub.update();\n  \n    });\n\n  }\n\n}\n\n\nconst dep = new dep();\n\n\nconst sub = {\n\nupdate() {\n\nconsole.log("sub1 update");\n\n},\n\n};\n\n\nconst sub1 = {\n\nupdate() {\n\nconsole.log("sub2 update");\n\n},\n\n};\n\n\ndep.addsub(sub);\n\ndep.addsub(sub1);\n\ndep.notify(); //\n\n\n\n * vue.js 首先通过 object.defineproperty 来对要监听的数据进行 getter 和 setter 劫持,当数据的属性被赋值/取值的时候,vue.js 就可以察觉到并做相应的处理.\n * 通过订阅发布模式,我们可以为对象的每个属性都创建一个发布者,当有其他订阅者依赖于这个属性的时候,则将订阅者加入到发布者的队列中.利用 object.defineproperty 的数据劫持,在属性的 setter 调用的时候,该属性的发布者通知所有订阅者更新内容.\n\n# nexttick\n答案异步方法，异步渲染最后一步，与 js事件循环联系紧密。主要使用了宏任务微任务（settimeout、promise那些），定义了一个异步方法，多次调用 nexttick会将方法存入队列，通过异步方法清空当前队列。\n\n# vue 组件渲染顺序\n答案渲染顺序：先父后子，完成顺序：先子后父更新顺序：父更新导致子更新，子更新完成后父\n\n销毁顺序：先父后子，完成顺序：先子后父\n\n# 数据响应(数据劫持)\n答案看完生命周期后,里面的 watcher 等内容其实是数据响应中的一部分.数据响应的实现由两部分构成: 观察者( watcher ) 和 依赖收集器( dep ),其核心是 defineproperty 这个方法,它可以 重写属性的 get 与 set 方法,从而完成监听数据的改变.\n\n * observe (观察者)观察 props 与 state\n   \n    * 遍历 props 与 state,对每个属性创建独立的监听器( watcher )\n   \n   \n\n * 使用 defineproperty 重写每个属性的 get/set(definereactive）\n   \n    * get: 收集依赖\n      \n       * dep.depend()\n         \n          * watcher.adddep()\n         \n         \n      \n      \n    * set: 派发更新\n      \n       * dep.notify()\n       * watcher.update()\n       * queenwatcher()\n       * nexttick\n       * flushschedulequeue\n       * watcher.run()\n       * updatecomponent()\n      \n      \n   \n   \n\nlet data = { a: 1 };\n\n// 数据响应性\n\nobserve(data);\n\n\n// 初始化观察者\n\nnew watcher(data, "name", updatecomponent);\n\ndata.a = 2;\n\n\n// 简单表示用于数据更新后的操作\n\nfunction updatecomponent() {\n\n  vm._update(); // patchs\n\n}\n\n\n// 监视对象\n\nfunction observe(obj) {\n\n  // 遍历对象,使用 get/set 重新定义对象的每个属性值\n\n  object.keys(obj).map((key) => {\n\n    definereactive(obj, key, obj[key]);\n\n  });\n\n}\n\n\nfunction definereactive(obj, k, v) {\n\n  // 递归子属性\n\n  if (type(v) == "object") observe(v);\n\n\n  // 新建依赖收集器\n\n  let dep = new dep();\n\n  // 定义get/set\n\n  object.defineproperty(obj, k, {\n\n    enumerable: true,\n  \n    configurable: true,\n  \n    get: function reactivegetter() {\n  \n      // 当有获取该属性时,证明依赖于该对象,因此被添加进收集器中\n  \n      if (dep.target) {\n  \n        dep.addsub(dep.target);\n  \n      }\n  \n      return v;\n  \n    },\n  \n    // 重新设置值时,触发收集器的通知机制\n  \n    set: function reactivesetter(nv) {\n  \n      v = nv;\n  \n      dep.nofify();\n  \n    },\n\n  });\n\n}\n\n\n// 依赖收集器\n\nclass dep {\n\n  constructor() {\n\n    this.subs = [];\n\n  }\n\n  addsub(sub) {\n\n    this.subs.push(sub);\n\n  }\n\n  notify() {\n\n    this.subs.map((sub) => {\n  \n      sub.update();\n  \n    });\n\n  }\n\n}\n\n\ndep.target = null;\n\n\n// 观察者\n\nclass watcher {\n\n  constructor(obj, key, cb) {\n\n    dep.target = this;\n  \n    this.cb = cb;\n  \n    this.obj = obj;\n  \n    this.key = key;\n  \n    this.value = obj[key];\n  \n    dep.target = null;\n\n  }\n\n  adddep(dep) {\n\n    dep.addsub(this);\n\n  }\n\n  update() {\n\n    this.value = this.obj[this.key];\n  \n    this.cb(this.value);\n\n  }\n\n  before() {\n\n    callhook("beforeupdate");\n\n  }\n\n}\n\n  \n\n# vue 如何从真实 dom 到虚拟 dom\n答案涉及到vue中的模板编译原理，主要过程：将模板转换成 ast 树， ast 用对象来描述真实的 js语法（将真实 dom转换成虚拟 dom）\n\n优化树\n\n将 ast 树生成代码\n\n# 用 vnode 来描述一个 dom 结构\n答案涉及到vue中的模板编译原理，主要过程： 虚拟节点就是用一个对象来描述一个真实的dom元素。首先将` template` （真实dom）先转成` ast` ，` ast` 树通过` codegen` 生成` render` 函数，` render` 函数里的` _c` 方法将它转为虚拟dom# virtual dom 原理实现\n答案 * 创建 dom 树\n   \n   \n * 树的 diff,同层对比,输出 patchs(listdiff/diffchildren/diffprops)\n   \n    * 没有新的节点,返回\n      \n      \n    * 新的节点 tagname 与 key 不变, 对比 props,继续递归遍历子树\n      \n       * 对比属性(对比新旧属性列表):\n         \n          * 旧属性是否存在与新属性列表中\n          * 都存在的是否有变化\n          * 是否出现旧列表中没有的新属性\n         \n         \n       * tagname 和 key 值变化了,则直接替换成新节点\n         \n         \n      \n      \n   \n   \n * 渲染差异\n   \n    * 遍历 patchs, 把需要更改的节点取出来\n    * 局部更新 dom\n   \n   \n\n// diff算法的实现\n\nfunction diff(oldtree, newtree) {\n\n  // 差异收集\n\n  let pathchs = {};\n\n  dfs(oldtree, newtree, 0, pathchs);\n\n  return pathchs;\n\n}\n\n\nfunction dfs(oldnode, newnode, index, pathchs) {\n\nlet curpathchs = [];\n\nif (newnode) {\n\n// 当新旧节点的 tagname 和 key 值完全一致时\n\nif (oldnode.tagname === newnode.tagname && oldnode.key === newnode.key) {\n\n// 继续比对属性差异\n\nlet props = diffprops(oldnode.props, newnode.props);\n\ncurpathchs.push({ type: "changeprops", props });\n\n// 递归进入下一层级的比较\n\ndiffchildrens(oldnode.children, newnode.children, index, pathchs);\n\n} else {\n\n// 当 tagname 或者 key 修改了后,表示已经是全新节点,无需再比\n\ncurpathchs.push({ type: "replacenode", node: newnode });\n\n}\n\n}\n\n\n// 构建出整颗差异树\n\nif (curpathchs.length) {\n\nif (pathchs[index]) {\n\npathchs[index] = pathchs[index].concat(curpathchs);\n\n} else {\n\npathchs[index] = curpathchs;\n\n}\n\n}\n\n}\n\n\n// 属性对比实现\n\nfunction diffprops(oldprops, newprops) {\n\nlet propspathchs = [];\n\n// 遍历新旧属性列表\n\n// 查找删除项\n\n// 查找修改项\n\n// 查找新增项 mutation\n\nforin(olaprops, (k, v) => {\n\nif (!newprops.hasownproperty(k)) {\n\npropspathchs.push({ type: "remove", prop: k });\n\n} else {\n\nif (v !== newprops[k]) {\n\npropspathchs.push({ type: "change", prop: k, value: newprops[k] });\n\n}\n\n}\n\n});\n\nforin(newprops, (k, v) => {\n\nif (!oldprops.hasownproperty(k)) {\n\npropspathchs.push({ type: "add", prop: k, value: v });\n\n}\n\n});\n\nreturn propspathchs;\n\n}\n\n\n// 对比子级差异\n\nfunction diffchildrens(oldchild, newchild, index, pathchs) {\n\n// 标记子级的删除/新增/移动\n\nlet { change, list } = difflist(oldchild, newchild, index, pathchs);\n\nif (change.length) {\n\nif (pathchs[index]) {\n\npathchs[index] = pathchs[index].concat(change);\n\n} else {\n\npathchs[index] = change;\n\n}\n\n}\n\n\n// 根据 key 获取原本匹配的节点,进一步递归从头开始对比\n\noldchild.map((item, i) => {\n\nlet keyindex = list.indexof(item.key);\n\nif (keyindex) {\n\nlet node = newchild[keyindex];\n\n// 进一步递归对比\n\ndfs(item, node, index, pathchs);\n\n}\n\n});\n\n}\n\n\n// 列表对比,主要也是根据 key 值查找匹配项\n\n// 对比出新旧列表的新增/删除/移动\n\nfunction difflist(oldlist, newlist, index, pathchs) {\n\nlet change = [];\n\nlet list = [];\n\nconst newkeys = getkey(newlist);\n\noldlist.map((v) => {\n\nif (newkeys.indexof(v.key) > -1) {\n\nlist.push(v.key);\n\n} else {\n\nlist.push(null);\n\n}\n\n});\n\n\n// 标记删除\n\nfor (let i = list.length - 1; i >= 0; i--) {\n\nif (!list[i]) {\n\nlist.splice(i, 1);\n\nchange.push({ type: "remove", index: i });\n\n}\n\n}\n\n\n// 标记新增和移动\n\nnewlist.map((item, i) => {\n\nconst key = item.key;\n\nconst index = list.indexof(key);\n\nif (index === -1 || key == null) {\n\n// 新增\n\nchange.push({ type: "add", node: item, index: i });\n\nlist.splice(i, 0, key);\n\n} else {\n\n// 移动\n\nif (index !== i) {\n\nchange.push({\n\ntype: "move",\n\nform: index,\n\nto: i,\n\n});\n\nmove(list, index, i);\n\n}\n\n}\n\n});\n\n\nreturn { change, list };\n\n}\n\n\n\n# proxy 相比于 defineproperty 的优势\n答案 * 数组变化也能监听到\n * 不需要深度遍历监听\n\n# vue-router 有哪几种导航守卫?\n答案 * 全局守卫\n * 路由独享守卫\n * 路由组件内的守卫\n\n# vue 为什么用 function 实现类,而不是 es6 的 class\n答案很多的 mixin 的函数调用,把 vue 当参数传入,它的功能个都是给 vue 的 prototype 上扩展一些方法,vue 按功能把这些扩展分散到多个模块中去实现,而不是一个模块实现所有,这种方式 class 是很难实现的,这么做的好处是非常方便代码的维护和管理\n\n在 vue3 中使用 function-base api\n\n对比 class api\n\n * 更灵活的逻辑复用能力\n   \n   \n * 更好的 typescript 类型推到支持\n   \n   \n * 更好的性能\n   \n   \n * tree-shaking 友好\n   \n   \n * 代码更容易被压缩\n   \n   \n\n# vue3 的优点\n答案 * 更小\n\n> 移除了一些不常用的 api,引入了 tree-shaking\n\n\n * 更快\n\n> diff 算法优化\n\n\n> 静态提升\n\n\n> 事件监听缓存\n\n\n> ssr 优化\n\n\n * typescript 支持\n * api 设计一致性\n * 提升自身可维护性\n * 开放更多的底层功能',charsets:{cjk:!0}},{title:"JS基础",frontmatter:{},regularPath:"/javascript/",relativePath:"javascript/README.md",key:"v-a8ce1950",path:"/javascript/",lastUpdated:"6/23/2019, 2:51:56 PM",headersStr:null,content:"# JS基础\nTIP\n\nJavaScript web 开发人员必须学习的 3 门语言中的一门：\n\n * HTML 定义了网页的内容\n * CSS 描述了网页的布局\n * JavaScript 网页的行为\n\nJavaScript( JS ) 是一种具有函数优先的轻量级解释型或即时编译型的编程语言.虽然它是作为开发Web 页面的脚本语言而出名的，但是它也被用到了很多非浏览器环境中，例如Node.js``、 Apache CouchDB 和 Adobe Acrobat.JavaScript 是一种基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格.",normalizedContent:"# js基础\ntip\n\njavascript web 开发人员必须学习的 3 门语言中的一门：\n\n * html 定义了网页的内容\n * css 描述了网页的布局\n * javascript 网页的行为\n\njavascript( js ) 是一种具有函数优先的轻量级解释型或即时编译型的编程语言.虽然它是作为开发web 页面的脚本语言而出名的，但是它也被用到了很多非浏览器环境中，例如node.js``、 apache couchdb 和 adobe acrobat.javascript 是一种基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格.",charsets:{cjk:!0}},{title:"Canvas",frontmatter:{},regularPath:"/javascript/canvas.html",relativePath:"javascript/canvas.md",key:"v-19a0ef53",path:"/javascript/canvas.html",headers:[{level:2,title:"基础形状",slug:"基础形状",normalizedTitle:"基础形状",charIndex:11},{level:2,title:"颜色样式",slug:"颜色样式",normalizedTitle:"颜色样式",charIndex:2167}],lastUpdated:"7/12/2019, 2:31:16 AM",headersStr:"基础形状 颜色样式",content:'# Canvas\n# 基础形状\n\n\nTIP\n\n// 1\n\n * 绘制一个填充的矩形\n * fillRect( x ,y ,width, height)\n * x:起点 x 轴坐标\n * y:起点 y 轴坐标\n * width:矩形长\n * height:矩形宽\n\nvar canvas1 = document.getElementById("canvas1");\nvar ctx1 = canvas1.getContext("2d");\n\nctx1.fillRect(10, 10, 100, 30);\n\n\n1\n2\n3\n4\nTIP\n\n// 2\n\n * 绘制一个矩形的边框\n * strokeRect( x ,y ,width, height)\n * x:起点 x 轴坐标\n * y:起点 y 轴坐标\n * width:矩形长\n * height:矩形宽\n\nvar canvas2 = document.getElementById("canvas2");\nvar ctx2 = canvas2.getContext("2d");\ndrawGrid("#ccc", 10, 10, ctx2);\nctx2.strokeRect(20, 20, 90, 100);\n\n\n1\n2\n3\n4\nTIP\n\n// 3\n\n * 清除指定矩形区域，让清除部分完全透明\n * clearRect( x ,y ,width, height)\n * 前提需要 fillReact 和背景色\n\nvar canvas3 = document.getElementById("canvas3");\nvar ctx3 = canvas3.getContext("2d");\n\nctx3.fillStyle = "red";\nctx3.fillRect(0, 0, 300, 150);\nctx3.clearRect(10, 10, 100, 50);\n\n\n1\n2\n3\n4\n5\n6\nTIP\n\n// 4.绘制图形步骤\n\n * (1)需要创建路径起始点。\n * (2)使用画图命令去画出路径。\n * (3)把路径封闭。\n * (4)一旦路径生成，就能通过描边或填充路径区域来渲染图形> \n   \n * beginPath():新建一条路径，生成之后，图形绘制命令被指向到路径上生成路径\n * closePath():闭合路径之后图形绘制命令又重新指向到上下文中\n * stroke():通过线条来绘制图形轮廓\n * fill():通过填充路径的内容区域生成实心的图形\n\nvar ctx4 = document.getElementById("canvas4").getContext("2d");\ndrawGrid("orange", 10, 10, ctx4);\nctx4.beginPath();\nctx4.moveTo(10, 10);\nctx4.lineTo(10, 50);\nctx4.lineTo(70, 100);\nctx4.stroke();\nctx4.closePath();\n\nvar ctx5 = document.getElementById("canvas5").getContext("2d");\ndrawGrid("orange", 10, 10, ctx5);\nctx5.beginPath();\nctx5.moveTo(10, 10);\nctx5.lineTo(10, 90);\nctx5.lineTo(70, 90);\nctx5.fill();\nctx5.closePath();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\nTIP\n\n// 5.绘制弧形\n\n * arc(x, y, radius, startAngle, endAngle, anticlockwise)\n * x,y:圆心坐标\n * radius:半径\n * startAngle,endAngle:开始结束弧度\n * anticlockwise:Boolean 值,true 逆时针方向,false 顺时针方向\n * 角度与弧度的 js 表达式:radians=(Math.PI/180)*degrees\n\nvar ctx6 = document.getElementById("canvas6").getContext("2d");\ndrawGrid("orange", 10, 10, ctx6);\nctx6.beginPath();\nctx6.arc(100, 100, 50, 0, Math.PI * 2, true);\nctx6.fill();\nctx6.stroke();\n\n\n1\n2\n3\n4\n5\n6\nTIP\n\n// 6.贝塞尔（bezier）以及二次贝塞尔\n\n * quadraticCurveTo(cp1x, cp1y, x, y):绘制二次贝塞尔曲线，x,y 为结束点，cp1x,cp1y 为控制点\n * bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y):绘制三次贝塞尔曲线，x,y 为结束点，cp1x,cp1y 为控制点一，cp2x,cp2y 为控制点二\n\n# 颜色样式\n\n\nTIP\n\n// 1.色彩样式\n\n * fillStyle = color:设置图形的填充颜色\n * strokeStyle = color:设置图形轮廓的颜色\n\nvar ctx1 = document.getElementById("canvas1").getContext("2d");\nfor (var i = 1; i < 6; i++) {\n  for (var j = 1; j < 6; j++) {\n    ctx1.fillStyle =\n      "rgb(" +\n      Math.floor(255 - 42.5 * i) +\n      "," +\n      Math.floor(255 - 42.5 * j) +\n      ",0)";\n    ctx1.fillRect(j * 25, i * 25, 25, 25);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\nTIP\n\n// 2.线型样式 // lineWidth = value:设置线条宽度\n\n * lineCap:设置线条末端样式\n * 参数:\n * butt 线段末端以方形结束。\n * round 线段末端以圆形结束。\n * square 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域\n\nvar ctx2 = document.getElementById("canvas2").getContext("2d");\ndrawGrid("orange", 10, 10, ctx2);\n\nctx2.strokeStyle = "red";\nfor (var i = 0; i < 10; i++) {\n  ctx2.lineWidth = 1 + i;\n  ctx2.beginPath();\n  ctx2.lineCap = "round";\n  ctx2.moveTo(10 + i * 14, 25);\n  ctx2.lineTo(10 + i * 14, 140);\n  ctx2.stroke();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\nTIP\n\n * lineJoin = type:设定线条与线条间接合处的样式\n * round\n * bevel\n * miter(默认)\n * miterLimit = value:限制当两条线相交时交接处最大长度；所谓交接处长度（斜接长度）是指线条交接处内角顶点到外角顶点的长度\n\n> \n * getLineDash():设置当前虚线样式\n * setLineDash(segments):设置当前虚线样式\n * lineDashOffset():设置虚线样式的起始偏移量\n\nctx2.beginPath();\nctx2.moveTo(150, 10);\nctx2.lineTo(170, 100);\nctx2.lineTo(180, 60);\nctx2.lineJoin = "miter";\nctx2.lineWidth = 10;\nctx2.miterLimit = 10;\nctx2.strokeStyle = "black";\nctx2.stroke();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nTIP\n\n// 3.渐变 Gradients\n\n * createLinearGradient(x1, y1, x2, y2):线性渐变\n * 参数:\n * 渐变的起点 (x1,y1) 与终点 (x2,y2)\n * createRadialGradient(x1, y1, r1, x2, y2, r2):径向渐变\n * 参数:\n * 前三个定义一个以 (x1,y1) 为原点，半径为 r1 的圆，后三个参数则定义另一个以 (x2,y2) 为原点，半径为 r2 的圆\n * gradient.addColorStop(position, color)\n\n> //径向\n\n\nvar ctx3 = document.getElementById("canvas3").getContext("2d");\nvar linearGradient = ctx3.createLinearGradient(0, 0, 250, 250);\nlinearGradient.addColorStop(0, "yellow");\nlinearGradient.addColorStop(0.5, "red");\nlinearGradient.addColorStop(1, "green");\nctx3.fillStyle = linearGradient;\nctx3.fillRect(0, 0, 200, 200);\n\n\n1\n2\n3\n4\n5\n6\n7\n> // 同心\n\n\nvar ctx4 = document.getElementById("canvas4").getContext("2d");\nvar rr = ctx4.createRadialGradient(100, 100, 40, 100, 100, 100);\nrr.addColorStop(0, "red");\nrr.addColorStop(0.5, "yellow");\nrr.addColorStop(1, "blue");\nctx4.fillStyle = rr;\nctx4.fillRect(0, 0, 200, 200);\nctx4.fill();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n> // 不同心但是外圆包含内圆\n\n\nvar ctx5 = document.getElementById("canvas5").getContext("2d");\nvar rr2 = ctx5.createRadialGradient(150, 150, 20, 160, 160, 50);\nrr2.addColorStop(0, "red");\nrr2.addColorStop(0.5, "yellow");\nrr2.addColorStop(1, "blue");\nctx5.fillStyle = rr2;\nctx5.fillRect(0, 0, 200, 200);\nctx5.fill();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n> //不同心，外圆内圆分离\n\n\nvar ctx6 = document.getElementById("canvas6").getContext("2d");\nvar rr3 = ctx6.createRadialGradient(20, 20, 10, 100, 100, 50);\nrr3.addColorStop(0, "red");\nrr3.addColorStop(0.8, "yellow");\nrr3.addColorStop(1, "blue");\nctx6.fillStyle = rr3;\nctx6.fillRect(0, 0, 200, 200);\n\n\n1\n2\n3\n4\n5\n6\n7\nTIP\n\n// 4.图案样式 Patterns\n\n * createPattern(image, type)\n * Type:repeat，repeat-x，repeat-y 和 no-repeat\n\nvar ctx7 = document.getElementById("canvas7").getContext("2d");\nvar img = new Image();\nimg.src =\n  "https://7n.w3cschool.cn/attachments/image/20170619/mayuan_canvas_radial1.jpg";\nimg.onload = function() {\n  var ptn = ctx7.createPattern(img, "repeat");\n  ctx7.fillStyle = ptn;\n  ctx7.fillRect(0, 0, 200, 200);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nTIP\n\n// 5.阴影 Shadows - fill: 两个可能的值： "nonzero": 默认值. "evenodd":\n\nvar ctx8 = document.getElementById("canvas8").getContext("2d");\nvar img = new Image();\nimg.src =\n  "https://cdn.jsdelivr.net/gh/flutterchina/website@1.0/images/flutter-mark-square-100.png";\nimg.onload = function() {\n  ctx8.shadowOffsetX = 10;\n  ctx8.shadowOffsetY = 10;\n  ctx8.shadowBlur = 8;\n  ctx8.shadowColor = "#333";\n  ctx8.drawImage(img, 10, 10);\n};\n// Canvas 填充规则\nvar ctx9 = document.getElementById("canvas9").getContext("2d");\nctx9.beginPath();\nctx9.arc(100, 100, 50, 0, Math.PI * 2, true);\nctx9.arc(100, 100, 20, 0, Math.PI * 2, true);\nctx9.fill("evenodd");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17',normalizedContent:'# canvas\n# 基础形状\n\n\ntip\n\n// 1\n\n * 绘制一个填充的矩形\n * fillrect( x ,y ,width, height)\n * x:起点 x 轴坐标\n * y:起点 y 轴坐标\n * width:矩形长\n * height:矩形宽\n\nvar canvas1 = document.getelementbyid("canvas1");\nvar ctx1 = canvas1.getcontext("2d");\n\nctx1.fillrect(10, 10, 100, 30);\n\n\n1\n2\n3\n4\ntip\n\n// 2\n\n * 绘制一个矩形的边框\n * strokerect( x ,y ,width, height)\n * x:起点 x 轴坐标\n * y:起点 y 轴坐标\n * width:矩形长\n * height:矩形宽\n\nvar canvas2 = document.getelementbyid("canvas2");\nvar ctx2 = canvas2.getcontext("2d");\ndrawgrid("#ccc", 10, 10, ctx2);\nctx2.strokerect(20, 20, 90, 100);\n\n\n1\n2\n3\n4\ntip\n\n// 3\n\n * 清除指定矩形区域，让清除部分完全透明\n * clearrect( x ,y ,width, height)\n * 前提需要 fillreact 和背景色\n\nvar canvas3 = document.getelementbyid("canvas3");\nvar ctx3 = canvas3.getcontext("2d");\n\nctx3.fillstyle = "red";\nctx3.fillrect(0, 0, 300, 150);\nctx3.clearrect(10, 10, 100, 50);\n\n\n1\n2\n3\n4\n5\n6\ntip\n\n// 4.绘制图形步骤\n\n * (1)需要创建路径起始点。\n * (2)使用画图命令去画出路径。\n * (3)把路径封闭。\n * (4)一旦路径生成，就能通过描边或填充路径区域来渲染图形> \n   \n * beginpath():新建一条路径，生成之后，图形绘制命令被指向到路径上生成路径\n * closepath():闭合路径之后图形绘制命令又重新指向到上下文中\n * stroke():通过线条来绘制图形轮廓\n * fill():通过填充路径的内容区域生成实心的图形\n\nvar ctx4 = document.getelementbyid("canvas4").getcontext("2d");\ndrawgrid("orange", 10, 10, ctx4);\nctx4.beginpath();\nctx4.moveto(10, 10);\nctx4.lineto(10, 50);\nctx4.lineto(70, 100);\nctx4.stroke();\nctx4.closepath();\n\nvar ctx5 = document.getelementbyid("canvas5").getcontext("2d");\ndrawgrid("orange", 10, 10, ctx5);\nctx5.beginpath();\nctx5.moveto(10, 10);\nctx5.lineto(10, 90);\nctx5.lineto(70, 90);\nctx5.fill();\nctx5.closepath();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\ntip\n\n// 5.绘制弧形\n\n * arc(x, y, radius, startangle, endangle, anticlockwise)\n * x,y:圆心坐标\n * radius:半径\n * startangle,endangle:开始结束弧度\n * anticlockwise:boolean 值,true 逆时针方向,false 顺时针方向\n * 角度与弧度的 js 表达式:radians=(math.pi/180)*degrees\n\nvar ctx6 = document.getelementbyid("canvas6").getcontext("2d");\ndrawgrid("orange", 10, 10, ctx6);\nctx6.beginpath();\nctx6.arc(100, 100, 50, 0, math.pi * 2, true);\nctx6.fill();\nctx6.stroke();\n\n\n1\n2\n3\n4\n5\n6\ntip\n\n// 6.贝塞尔（bezier）以及二次贝塞尔\n\n * quadraticcurveto(cp1x, cp1y, x, y):绘制二次贝塞尔曲线，x,y 为结束点，cp1x,cp1y 为控制点\n * beziercurveto(cp1x, cp1y, cp2x, cp2y, x, y):绘制三次贝塞尔曲线，x,y 为结束点，cp1x,cp1y 为控制点一，cp2x,cp2y 为控制点二\n\n# 颜色样式\n\n\ntip\n\n// 1.色彩样式\n\n * fillstyle = color:设置图形的填充颜色\n * strokestyle = color:设置图形轮廓的颜色\n\nvar ctx1 = document.getelementbyid("canvas1").getcontext("2d");\nfor (var i = 1; i < 6; i++) {\n  for (var j = 1; j < 6; j++) {\n    ctx1.fillstyle =\n      "rgb(" +\n      math.floor(255 - 42.5 * i) +\n      "," +\n      math.floor(255 - 42.5 * j) +\n      ",0)";\n    ctx1.fillrect(j * 25, i * 25, 25, 25);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\ntip\n\n// 2.线型样式 // linewidth = value:设置线条宽度\n\n * linecap:设置线条末端样式\n * 参数:\n * butt 线段末端以方形结束。\n * round 线段末端以圆形结束。\n * square 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域\n\nvar ctx2 = document.getelementbyid("canvas2").getcontext("2d");\ndrawgrid("orange", 10, 10, ctx2);\n\nctx2.strokestyle = "red";\nfor (var i = 0; i < 10; i++) {\n  ctx2.linewidth = 1 + i;\n  ctx2.beginpath();\n  ctx2.linecap = "round";\n  ctx2.moveto(10 + i * 14, 25);\n  ctx2.lineto(10 + i * 14, 140);\n  ctx2.stroke();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\ntip\n\n * linejoin = type:设定线条与线条间接合处的样式\n * round\n * bevel\n * miter(默认)\n * miterlimit = value:限制当两条线相交时交接处最大长度；所谓交接处长度（斜接长度）是指线条交接处内角顶点到外角顶点的长度\n\n> \n * getlinedash():设置当前虚线样式\n * setlinedash(segments):设置当前虚线样式\n * linedashoffset():设置虚线样式的起始偏移量\n\nctx2.beginpath();\nctx2.moveto(150, 10);\nctx2.lineto(170, 100);\nctx2.lineto(180, 60);\nctx2.linejoin = "miter";\nctx2.linewidth = 10;\nctx2.miterlimit = 10;\nctx2.strokestyle = "black";\nctx2.stroke();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\ntip\n\n// 3.渐变 gradients\n\n * createlineargradient(x1, y1, x2, y2):线性渐变\n * 参数:\n * 渐变的起点 (x1,y1) 与终点 (x2,y2)\n * createradialgradient(x1, y1, r1, x2, y2, r2):径向渐变\n * 参数:\n * 前三个定义一个以 (x1,y1) 为原点，半径为 r1 的圆，后三个参数则定义另一个以 (x2,y2) 为原点，半径为 r2 的圆\n * gradient.addcolorstop(position, color)\n\n> //径向\n\n\nvar ctx3 = document.getelementbyid("canvas3").getcontext("2d");\nvar lineargradient = ctx3.createlineargradient(0, 0, 250, 250);\nlineargradient.addcolorstop(0, "yellow");\nlineargradient.addcolorstop(0.5, "red");\nlineargradient.addcolorstop(1, "green");\nctx3.fillstyle = lineargradient;\nctx3.fillrect(0, 0, 200, 200);\n\n\n1\n2\n3\n4\n5\n6\n7\n> // 同心\n\n\nvar ctx4 = document.getelementbyid("canvas4").getcontext("2d");\nvar rr = ctx4.createradialgradient(100, 100, 40, 100, 100, 100);\nrr.addcolorstop(0, "red");\nrr.addcolorstop(0.5, "yellow");\nrr.addcolorstop(1, "blue");\nctx4.fillstyle = rr;\nctx4.fillrect(0, 0, 200, 200);\nctx4.fill();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n> // 不同心但是外圆包含内圆\n\n\nvar ctx5 = document.getelementbyid("canvas5").getcontext("2d");\nvar rr2 = ctx5.createradialgradient(150, 150, 20, 160, 160, 50);\nrr2.addcolorstop(0, "red");\nrr2.addcolorstop(0.5, "yellow");\nrr2.addcolorstop(1, "blue");\nctx5.fillstyle = rr2;\nctx5.fillrect(0, 0, 200, 200);\nctx5.fill();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n> //不同心，外圆内圆分离\n\n\nvar ctx6 = document.getelementbyid("canvas6").getcontext("2d");\nvar rr3 = ctx6.createradialgradient(20, 20, 10, 100, 100, 50);\nrr3.addcolorstop(0, "red");\nrr3.addcolorstop(0.8, "yellow");\nrr3.addcolorstop(1, "blue");\nctx6.fillstyle = rr3;\nctx6.fillrect(0, 0, 200, 200);\n\n\n1\n2\n3\n4\n5\n6\n7\ntip\n\n// 4.图案样式 patterns\n\n * createpattern(image, type)\n * type:repeat，repeat-x，repeat-y 和 no-repeat\n\nvar ctx7 = document.getelementbyid("canvas7").getcontext("2d");\nvar img = new image();\nimg.src =\n  "https://7n.w3cschool.cn/attachments/image/20170619/mayuan_canvas_radial1.jpg";\nimg.onload = function() {\n  var ptn = ctx7.createpattern(img, "repeat");\n  ctx7.fillstyle = ptn;\n  ctx7.fillrect(0, 0, 200, 200);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\ntip\n\n// 5.阴影 shadows - fill: 两个可能的值： "nonzero": 默认值. "evenodd":\n\nvar ctx8 = document.getelementbyid("canvas8").getcontext("2d");\nvar img = new image();\nimg.src =\n  "https://cdn.jsdelivr.net/gh/flutterchina/website@1.0/images/flutter-mark-square-100.png";\nimg.onload = function() {\n  ctx8.shadowoffsetx = 10;\n  ctx8.shadowoffsety = 10;\n  ctx8.shadowblur = 8;\n  ctx8.shadowcolor = "#333";\n  ctx8.drawimage(img, 10, 10);\n};\n// canvas 填充规则\nvar ctx9 = document.getelementbyid("canvas9").getcontext("2d");\nctx9.beginpath();\nctx9.arc(100, 100, 50, 0, math.pi * 2, true);\nctx9.arc(100, 100, 20, 0, math.pi * 2, true);\nctx9.fill("evenodd");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17',charsets:{cjk:!0}},{title:"canvas-api",frontmatter:{},regularPath:"/javascript/canvas_api.html",relativePath:"javascript/canvas_api.md",key:"v-6b7c261a",path:"/javascript/canvas_api.html",headers:[{level:2,title:"颜色和样式",slug:"颜色和样式",normalizedTitle:"颜色和样式",charIndex:15},{level:2,title:"线条样式",slug:"线条样式",normalizedTitle:"线条样式",charIndex:525},{level:2,title:"矩形",slug:"矩形",normalizedTitle:"矩形",charIndex:718},{level:2,title:"路径",slug:"路径",normalizedTitle:"路径",charIndex:889},{level:2,title:"转换",slug:"转换",normalizedTitle:"转换",charIndex:1649},{level:2,title:"文本",slug:"文本",normalizedTitle:"文本",charIndex:2063},{level:2,title:"图像绘制",slug:"图像绘制",normalizedTitle:"图像绘制",charIndex:2362},{level:2,title:"像素操作",slug:"像素操作",normalizedTitle:"像素操作",charIndex:2434},{level:2,title:"合成",slug:"合成",normalizedTitle:"合成",charIndex:2964},{level:2,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:3126}],lastUpdated:"7/12/2019, 6:52:50 AM",headersStr:"颜色和样式 线条样式 矩形 路径 转换 文本 图像绘制 像素操作 合成 其他",content:"# canvas-api\n# 颜色和样式\n属性              描述                     \nfillStyle       设置或返回用于填充绘画的颜色、渐变或模式   \nstrokeStyle     设置或返回用于笔触的颜色、渐变或模式     \nshadowColor     设置或返回用于阴影的颜色           \nshadowBlur      设置或返回用于阴影的模糊级别         \nshadowOffsetX   设置或返回阴影距形状的水平距离        \nshadowOffsetY   设置或返回阴影距形状的垂直距离        \n\n方法                       描述                \ncreateLinearGradient()   创建线性渐变（用在画布内容上）   \ncreatePattern()          在指定的方向上重复指定的元素    \ncreateRadialGradient()   创建放射状/环形的渐变（用在    \naddColorStop()           规定渐变对象中的颜色和停止位置   \n\n# 线条样式\n属性           描述                     \nlineCap      设置或返回线条的结束端点样式         \nlineJoin     设置或返回两条线相交时，所创建的拐角类型   \nlineWidth    设置或返回当前的线条宽度           \nmiterLimit   设置或返回最大斜接长度            \n\n# 矩形\n方法             描述               \nrect()         创建矩形             \nfillRect()     绘制“被填充”的矩形       \nstrokeRect()   绘制矩形（无填充）        \nclearRect()    在给定的矩形内清除指定的像素   \n\n# 路径\n方法                   描述                                  \nfill()               填充当前绘图（路径）                          \nstroke()             绘制已定义的路径                            \nbeginPath()          起始一条路径，或重置当前路径                      \nmoveTo()             把路径移动到画布中的指定点，不创建线条                 \nclosePath()          创建从当前点回到起始点的路径                      \nlineTo()             添加一个新点，然后在画布中创建从该点到最后指定点的线条         \nclip()               从原始画布剪切任意形状和尺寸的区域                   \nquadraticCurveTo()   创建二次贝塞尔曲线                           \nbezierCurveTo()      创建三次方贝塞尔曲线                          \narc()                创建弧/曲线（用于创建圆形或部分圆）                  \narcTo()              创建两切线之间的弧/曲线                        \nisPointInPath()      如果指定的点位于当前路径中，则返回 true，否则返回 false   \n\n# 转换\n方法                                             描述                  \nscale()                                        缩放当前绘图至更大或更小        \nrotate()                                       旋转当前绘图              \ntranslate()                                    重新映射画布上的 (0,0) 位置   \ntransform()                                    替换绘图的当前转换矩阵         \nsetTransform() 将当前转换重置为单位矩阵。然后运行 transform()                       \n\n# 文本\n属性             描述                     \nfont           设置或返回文本内容的当前字体属性       \ntextAlign      设置或返回文本内容的当前对齐方式       \ntextBaseline   设置或返回在绘制文本时使用的当前文本基线   \n\n方法              描述               \nfillText()      在画布上绘制“被填充的”文本   \nstrokeText()    在画布上绘制文本（无填充）    \nmeasureText()   返回包含指定文本宽度的对象    \n\n# 图像绘制\n方法            描述               \ndrawImage()   向画布上绘制图像、画布或视频   \n\n# 像素操作\n属性                  描述                                   \nwidth               返回 ImageData 对象的宽度                   \nheight              返回 ImageData 对象的高度                   \ndata                返回一个对象，其包含指定的 ImageData 对象的图像数据      \n方法                  描述                                   \n:----:              :----:                               \ncreateImageData()   创建新的、空白的 ImageData 对象                \ngetImageData()      返回 ImageData 对象，该对象为画布上指定的矩形复制像素数据   \nputImageData()      把图像数据（从指定的 ImageData 对象）放回画布上        \n\n# 合成\n属性                         描述                      \nglobalAlpha                设置或返回绘图的当前 alpha 或透明值   \nglobalCompositeOperation   设置或返回新图像如何绘制到已有的图像上     \n\n# 其他\n方法              描述                \nsave()          保存当前环境的状态         \nrestore()       返回之前保存过的路径状态和属性   \ncreateEvent()   -                 \ngetContext()    -                 \ntoDataURL()     -",normalizedContent:"# canvas-api\n# 颜色和样式\n属性              描述                     \nfillstyle       设置或返回用于填充绘画的颜色、渐变或模式   \nstrokestyle     设置或返回用于笔触的颜色、渐变或模式     \nshadowcolor     设置或返回用于阴影的颜色           \nshadowblur      设置或返回用于阴影的模糊级别         \nshadowoffsetx   设置或返回阴影距形状的水平距离        \nshadowoffsety   设置或返回阴影距形状的垂直距离        \n\n方法                       描述                \ncreatelineargradient()   创建线性渐变（用在画布内容上）   \ncreatepattern()          在指定的方向上重复指定的元素    \ncreateradialgradient()   创建放射状/环形的渐变（用在    \naddcolorstop()           规定渐变对象中的颜色和停止位置   \n\n# 线条样式\n属性           描述                     \nlinecap      设置或返回线条的结束端点样式         \nlinejoin     设置或返回两条线相交时，所创建的拐角类型   \nlinewidth    设置或返回当前的线条宽度           \nmiterlimit   设置或返回最大斜接长度            \n\n# 矩形\n方法             描述               \nrect()         创建矩形             \nfillrect()     绘制“被填充”的矩形       \nstrokerect()   绘制矩形（无填充）        \nclearrect()    在给定的矩形内清除指定的像素   \n\n# 路径\n方法                   描述                                  \nfill()               填充当前绘图（路径）                          \nstroke()             绘制已定义的路径                            \nbeginpath()          起始一条路径，或重置当前路径                      \nmoveto()             把路径移动到画布中的指定点，不创建线条                 \nclosepath()          创建从当前点回到起始点的路径                      \nlineto()             添加一个新点，然后在画布中创建从该点到最后指定点的线条         \nclip()               从原始画布剪切任意形状和尺寸的区域                   \nquadraticcurveto()   创建二次贝塞尔曲线                           \nbeziercurveto()      创建三次方贝塞尔曲线                          \narc()                创建弧/曲线（用于创建圆形或部分圆）                  \narcto()              创建两切线之间的弧/曲线                        \nispointinpath()      如果指定的点位于当前路径中，则返回 true，否则返回 false   \n\n# 转换\n方法                                             描述                  \nscale()                                        缩放当前绘图至更大或更小        \nrotate()                                       旋转当前绘图              \ntranslate()                                    重新映射画布上的 (0,0) 位置   \ntransform()                                    替换绘图的当前转换矩阵         \nsettransform() 将当前转换重置为单位矩阵。然后运行 transform()                       \n\n# 文本\n属性             描述                     \nfont           设置或返回文本内容的当前字体属性       \ntextalign      设置或返回文本内容的当前对齐方式       \ntextbaseline   设置或返回在绘制文本时使用的当前文本基线   \n\n方法              描述               \nfilltext()      在画布上绘制“被填充的”文本   \nstroketext()    在画布上绘制文本（无填充）    \nmeasuretext()   返回包含指定文本宽度的对象    \n\n# 图像绘制\n方法            描述               \ndrawimage()   向画布上绘制图像、画布或视频   \n\n# 像素操作\n属性                  描述                                   \nwidth               返回 imagedata 对象的宽度                   \nheight              返回 imagedata 对象的高度                   \ndata                返回一个对象，其包含指定的 imagedata 对象的图像数据      \n方法                  描述                                   \n:----:              :----:                               \ncreateimagedata()   创建新的、空白的 imagedata 对象                \ngetimagedata()      返回 imagedata 对象，该对象为画布上指定的矩形复制像素数据   \nputimagedata()      把图像数据（从指定的 imagedata 对象）放回画布上        \n\n# 合成\n属性                         描述                      \nglobalalpha                设置或返回绘图的当前 alpha 或透明值   \nglobalcompositeoperation   设置或返回新图像如何绘制到已有的图像上     \n\n# 其他\n方法              描述                \nsave()          保存当前环境的状态         \nrestore()       返回之前保存过的路径状态和属性   \ncreateevent()   -                 \ngetcontext()    -                 \ntodataurl()     -",charsets:{cjk:!0}},{title:"闭包",frontmatter:{},regularPath:"/javascript/closure.html",relativePath:"javascript/closure.md",key:"v-cd3bf0e6",path:"/javascript/closure.html",headers:[{level:2,title:"变量作用域",slug:"变量作用域",normalizedTitle:"变量作用域",charIndex:7},{level:2,title:"变量的生存周期",slug:"变量的生存周期",normalizedTitle:"变量的生存周期",charIndex:613},{level:2,title:"闭包的作用",slug:"闭包的作用",normalizedTitle:"闭包的作用",charIndex:1121},{level:3,title:"封装变量",slug:"封装变量",normalizedTitle:"封装变量",charIndex:1129},{level:3,title:"延长局部变量的寿命",slug:"延长局部变量的寿命",normalizedTitle:"延长局部变量的寿命",charIndex:3056},{level:2,title:"闭包和面向对象设计",slug:"闭包和面向对象设计",normalizedTitle:"闭包和面向对象设计",charIndex:3078},{level:3,title:"闭包与内存管理",slug:"闭包与内存管理",normalizedTitle:"闭包与内存管理",charIndex:3847}],lastUpdated:"6/23/2019, 2:51:13 PM",headersStr:"变量作用域 变量的生存周期 闭包的作用 封装变量 延长局部变量的寿命 闭包和面向对象设计 闭包与内存管理",content:"# 闭包\n# 变量作用域\n变量的作用域，就是指变量的有效范围.我们最常谈到的是在函数中声明的变量作用域.\n\n当在函数中声明一个变量的时候，如果该变量前面没有带上关键字 var，这个变量就会成为 全局变量，这当然是一种容易造成命名冲突的做法.\n\n另外一种情况是用 var关键字在函数中声明变量，这时候的变量即是局部变量，只有在该函 数内部才能访问到这个变量，在函数外面是访问不到的.\n\nvar func = function(){ \n var a = 1; \n alert ( a ); // 输出: 1 \n};\nfunc(); \nalert ( a );  //Uncaught ReferenceError: a is not defined\n\n\n1\n2\n3\n4\n5\n6\n变量的搜索是从内到外而非从外到内的\n\nvar a = 1; \nvar func1 = function(){ \n var b = 2; \n var func2 = function(){ \n var c = 3; \n alert ( b ); // 输出：2 \n alert ( a ); // 输出：1 \n } \n func2(); \n alert ( c ); // 输出：Uncaught ReferenceError: c is not defined \n}; \nfunc1();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 变量的生存周期\n对于全局变量来说，全局变量的生存周期当然是永久的，除非我们主动销毁这个全局变量.\n\n对于函数内用var关键字声明的局部变量来说,当退出函数时,这些局部变量就会失去价值\n\nvar func = function(){ \n var a = 1; // 退出函数后局部变量 a 将被销毁\n alert ( a ); \n}; \nfunc();\n\n\n1\n2\n3\n4\n5\nWARNING\n\n注意\n\nvar func = function(){ \n var a = 1; \n return function(){ \n a++; \n alert ( a );\n } \n}; \nvar f = func();\nf() //2\nf() //3\nf() //4\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n这里面a并没有销毁,这是因为执行var f=func()的时候,f返回了一个匿名函数的引用,它可以访问到func()被调用的时候产生的环境,也就是a一直存在这个环境里,既然局部变量所在的环境还能被外界 访问，这个局部变量就有了不被销毁的理由.在这里产生了一个闭包结构，局部变量的生命看起 来被延续了.\n\n# 闭包的作用\n# 封装变量\n闭包可以帮助把一些不需要暴露在全局的变量封装成“私有变量”.假设有一个计算乘积的简单函数：\n\nvar func=function(){\n    var a = 1; \n    for ( var i = 0, l = arguments.length; i < l; i++ ){ \n            a = a * arguments[i]; \n    } \n    return a;\n}\nconsole.log(func(1,2,3))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n对于那些相同的参数,每次都进行计算是一种浪费,我们可以加入缓存机制提高这个函数的性能\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar cache={}\nvar func=function(){\n    debugger;\n    var args=Array.prototype.join.call(arguments,',')\n    if(cache[args]){\n        return cache[args];\n    }\n    var a = 1; \n    for ( var i = 0, l = arguments.length; i < l; i++ ){ \n            a = a * arguments[i]; \n    } \n    return cache[args]=a  //{1,2,3:6}\n}\nconsole.log(func(1,2,3))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n此时cache是个全局变量,而且仅仅在func函数呗调用的时候才被使用,与其这样不如放进函数\n\n\n\n\n\n\n  var func = (function () {\n        var cache = {}\n        return function () {\n            var args = Array.prototype.join.call(arguments, ',')\n            if (cache[args]) {\n                return cache[args];\n            }\n            var a = 1;\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                a = a * arguments[i];\n            }\n            return cache[args] = a //{1,2,3:6}\n        }\n    })()\n    console.log(func(1, 2, 3))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n如果一个大函数中有一些代码块能够独立出来,我们常常把这些函数封装在一些小函数里面,独立出来的函数有助于代码的复用\n\n\n\n\n\n\n\n\n\n\n\n\n\n var func = (function () {\n        var cache = {};\n        var calculate = function () { // 封闭 calculate 函数\n            var a = 1;\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                a = a * arguments[i];\n            }\n            return a;\n        };\n        return function () {\n            var args = Array.prototype.join.call(arguments, ',');\n            if (args in cache) {\n                return cache[args];\n            }\n            return cache[args] = calculate.apply(null, arguments);\n        }\n    })();\n    console.log(func(1, 2, 3))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 延长局部变量的寿命\n类似上面注意案例\n\n# 闭包和面向对象设计\nvar extent = function () {\n    var value = 0;\n    return {\n        call: function () {\n            value++;\n            console.log(value);\n        }\n    }\n};\nvar extent = extent();\nextent.call(); // 输出：1 \nextent.call(); // 输出：2 \nextent.call(); // 输出：3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n如果使用面向对象写法\n\n var extent = {\n    value: 0,\n    call: function () {\n        this.value++;\n        console.log(this.value);\n    }\n};\nextent.call(); // 输出：1 \nextent.call(); // 输出：2 \nextent.call(); // 输出：3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n或者\n\nvar Extent = function(){ \n    this.value = 0; \n}; \nExtent.prototype.call = function(){ \n    this.value++; \n    console.log( this.value ); \n}; \nvar extent = new Extent(); \nextent.call(); \nextent.call(); \nextent.call();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 闭包与内存管理\n局部变量本来应该在函数退出的时候被解除引用，但如果局部变量被封闭在闭包形成的环境 中，那么这个局部变量就能一直生存下去.从这个意义上看，闭包的确会使一些数据无法被及时 销毁.使用闭包的一部分原因是我们选择主动把一些变量封闭在闭包中，因为可能在以后还需要 使用这些变量，把这些变量放在闭包中和放在全局作用域，对内存方面的影响是一致的，这里并 不能说成是内存泄露.如果在将来需要回收这些变量，我们可以手动把这些变量设为 null.",normalizedContent:"# 闭包\n# 变量作用域\n变量的作用域，就是指变量的有效范围.我们最常谈到的是在函数中声明的变量作用域.\n\n当在函数中声明一个变量的时候，如果该变量前面没有带上关键字 var，这个变量就会成为 全局变量，这当然是一种容易造成命名冲突的做法.\n\n另外一种情况是用 var关键字在函数中声明变量，这时候的变量即是局部变量，只有在该函 数内部才能访问到这个变量，在函数外面是访问不到的.\n\nvar func = function(){ \n var a = 1; \n alert ( a ); // 输出: 1 \n};\nfunc(); \nalert ( a );  //uncaught referenceerror: a is not defined\n\n\n1\n2\n3\n4\n5\n6\n变量的搜索是从内到外而非从外到内的\n\nvar a = 1; \nvar func1 = function(){ \n var b = 2; \n var func2 = function(){ \n var c = 3; \n alert ( b ); // 输出：2 \n alert ( a ); // 输出：1 \n } \n func2(); \n alert ( c ); // 输出：uncaught referenceerror: c is not defined \n}; \nfunc1();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 变量的生存周期\n对于全局变量来说，全局变量的生存周期当然是永久的，除非我们主动销毁这个全局变量.\n\n对于函数内用var关键字声明的局部变量来说,当退出函数时,这些局部变量就会失去价值\n\nvar func = function(){ \n var a = 1; // 退出函数后局部变量 a 将被销毁\n alert ( a ); \n}; \nfunc();\n\n\n1\n2\n3\n4\n5\nwarning\n\n注意\n\nvar func = function(){ \n var a = 1; \n return function(){ \n a++; \n alert ( a );\n } \n}; \nvar f = func();\nf() //2\nf() //3\nf() //4\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n这里面a并没有销毁,这是因为执行var f=func()的时候,f返回了一个匿名函数的引用,它可以访问到func()被调用的时候产生的环境,也就是a一直存在这个环境里,既然局部变量所在的环境还能被外界 访问，这个局部变量就有了不被销毁的理由.在这里产生了一个闭包结构，局部变量的生命看起 来被延续了.\n\n# 闭包的作用\n# 封装变量\n闭包可以帮助把一些不需要暴露在全局的变量封装成“私有变量”.假设有一个计算乘积的简单函数：\n\nvar func=function(){\n    var a = 1; \n    for ( var i = 0, l = arguments.length; i < l; i++ ){ \n            a = a * arguments[i]; \n    } \n    return a;\n}\nconsole.log(func(1,2,3))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n对于那些相同的参数,每次都进行计算是一种浪费,我们可以加入缓存机制提高这个函数的性能\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar cache={}\nvar func=function(){\n    debugger;\n    var args=array.prototype.join.call(arguments,',')\n    if(cache[args]){\n        return cache[args];\n    }\n    var a = 1; \n    for ( var i = 0, l = arguments.length; i < l; i++ ){ \n            a = a * arguments[i]; \n    } \n    return cache[args]=a  //{1,2,3:6}\n}\nconsole.log(func(1,2,3))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n此时cache是个全局变量,而且仅仅在func函数呗调用的时候才被使用,与其这样不如放进函数\n\n\n\n\n\n\n  var func = (function () {\n        var cache = {}\n        return function () {\n            var args = array.prototype.join.call(arguments, ',')\n            if (cache[args]) {\n                return cache[args];\n            }\n            var a = 1;\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                a = a * arguments[i];\n            }\n            return cache[args] = a //{1,2,3:6}\n        }\n    })()\n    console.log(func(1, 2, 3))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n如果一个大函数中有一些代码块能够独立出来,我们常常把这些函数封装在一些小函数里面,独立出来的函数有助于代码的复用\n\n\n\n\n\n\n\n\n\n\n\n\n\n var func = (function () {\n        var cache = {};\n        var calculate = function () { // 封闭 calculate 函数\n            var a = 1;\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                a = a * arguments[i];\n            }\n            return a;\n        };\n        return function () {\n            var args = array.prototype.join.call(arguments, ',');\n            if (args in cache) {\n                return cache[args];\n            }\n            return cache[args] = calculate.apply(null, arguments);\n        }\n    })();\n    console.log(func(1, 2, 3))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 延长局部变量的寿命\n类似上面注意案例\n\n# 闭包和面向对象设计\nvar extent = function () {\n    var value = 0;\n    return {\n        call: function () {\n            value++;\n            console.log(value);\n        }\n    }\n};\nvar extent = extent();\nextent.call(); // 输出：1 \nextent.call(); // 输出：2 \nextent.call(); // 输出：3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n如果使用面向对象写法\n\n var extent = {\n    value: 0,\n    call: function () {\n        this.value++;\n        console.log(this.value);\n    }\n};\nextent.call(); // 输出：1 \nextent.call(); // 输出：2 \nextent.call(); // 输出：3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n或者\n\nvar extent = function(){ \n    this.value = 0; \n}; \nextent.prototype.call = function(){ \n    this.value++; \n    console.log( this.value ); \n}; \nvar extent = new extent(); \nextent.call(); \nextent.call(); \nextent.call();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 闭包与内存管理\n局部变量本来应该在函数退出的时候被解除引用，但如果局部变量被封闭在闭包形成的环境 中，那么这个局部变量就能一直生存下去.从这个意义上看，闭包的确会使一些数据无法被及时 销毁.使用闭包的一部分原因是我们选择主动把一些变量封闭在闭包中，因为可能在以后还需要 使用这些变量，把这些变量放在闭包中和放在全局作用域，对内存方面的影响是一致的，这里并 不能说成是内存泄露.如果在将来需要回收这些变量，我们可以手动把这些变量设为 null.",charsets:{cjk:!0}},{title:"设计模式",frontmatter:{},regularPath:"/javascript/design.html",relativePath:"javascript/design.md",key:"v-c03728da",path:"/javascript/design.html",lastUpdated:"6/14/2019, 9:19:10 AM",headersStr:null,content:"# 设计模式",normalizedContent:"# 设计模式",charsets:{cjk:!0}},{title:"面试之手写代码",frontmatter:{},regularPath:"/javascript/js1.html",relativePath:"javascript/js1.md",key:"v-3367bdf3",path:"/javascript/js1.html",headers:[{level:2,title:"数组去重",slug:"数组去重",normalizedTitle:"数组去重",charIndex:14},{level:3,title:"双层循环",slug:"双层循环",normalizedTitle:"双层循环",charIndex:21},{level:3,title:"利用indexOf",slug:"利用indexof",normalizedTitle:"利用indexof",charIndex:504},{level:3,title:"排序后去重",slug:"排序后去重",normalizedTitle:"排序后去重",charIndex:848},{level:3,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:1300},{level:3,title:"ES6方法",slug:"es6方法",normalizedTitle:"es6方法",charIndex:1819},{level:2,title:"类型判断",slug:"类型判断",normalizedTitle:"类型判断",charIndex:2239},{level:3,title:"通用API",slug:"通用api",normalizedTitle:"通用api",charIndex:2718},{level:3,title:"判断空对象",slug:"判断空对象",normalizedTitle:"判断空对象",charIndex:3628},{level:3,title:"判断Window对象",slug:"判断window对象",normalizedTitle:"判断window对象",charIndex:4280},{level:3,title:"判断数组",slug:"判断数组",normalizedTitle:"判断数组",charIndex:4424},{level:3,title:"判断类数组",slug:"判断类数组",normalizedTitle:"判断类数组",charIndex:4602},{level:3,title:"判断NAN",slug:"判断nan",normalizedTitle:"判断nan",charIndex:5340},{level:3,title:"判断DOM元素",slug:"判断dom元素",normalizedTitle:"判断dom元素",charIndex:5509},{level:3,title:"判断arguments对象",slug:"判断arguments对象",normalizedTitle:"判断arguments对象",charIndex:5643},{level:2,title:"深浅拷贝",slug:"深浅拷贝",normalizedTitle:"深浅拷贝",charIndex:5906},{level:3,title:"深拷贝",slug:"深拷贝",normalizedTitle:"深拷贝",charIndex:5913},{level:3,title:"浅拷贝",slug:"浅拷贝",normalizedTitle:"浅拷贝",charIndex:5907},{level:2,title:"扁平化",slug:"扁平化",normalizedTitle:"扁平化",charIndex:6629},{level:3,title:"递归",slug:"递归",normalizedTitle:"递归",charIndex:6635},{level:3,title:"toString()",slug:"tostring",normalizedTitle:"tostring()",charIndex:7049},{level:3,title:"reduce()",slug:"reduce",normalizedTitle:"reduce()",charIndex:7286},{level:3,title:"...",slug:"",normalizedTitle:"...",charIndex:2029},{level:2,title:"柯里化",slug:"柯里化",normalizedTitle:"柯里化",charIndex:7869},{level:3,title:"通用版",slug:"通用版",normalizedTitle:"通用版",charIndex:7875},{level:3,title:"ES6",slug:"es6",normalizedTitle:"es6",charIndex:1819},{level:2,title:"防抖和节流",slug:"防抖和节流",normalizedTitle:"防抖和节流",charIndex:8716},{level:3,title:"防抖",slug:"防抖",normalizedTitle:"防抖",charIndex:8716},{level:3,title:"节流",slug:"节流",normalizedTitle:"节流",charIndex:8719},{level:2,title:"模拟new",slug:"模拟new",normalizedTitle:"模拟new",charIndex:10452},{level:2,title:"模拟call",slug:"模拟call",normalizedTitle:"模拟call",charIndex:11392},{level:2,title:"模拟apply",slug:"模拟apply",normalizedTitle:"模拟apply",charIndex:12055},{level:2,title:"模拟bind",slug:"模拟bind",normalizedTitle:"模拟bind",charIndex:12396},{level:2,title:"模拟instanceof",slug:"模拟instanceof",normalizedTitle:"模拟instanceof",charIndex:12758},{level:2,title:"模拟JSON.stringify",slug:"模拟json-stringify",normalizedTitle:"模拟json.stringify",charIndex:13042},{level:2,title:"模拟JSON.parse",slug:"模拟json-parse",normalizedTitle:"模拟json.parse",charIndex:14215},{level:3,title:"利用eval",slug:"利用eval",normalizedTitle:"利用eval",charIndex:14337},{level:3,title:"利用new Function()",slug:"利用new-function",normalizedTitle:"利用new function()",charIndex:14741}],lastUpdated:"6/14/2019, 7:37:55 AM",headersStr:"数组去重 双层循环 利用indexOf 排序后去重 filter ES6方法 类型判断 通用API 判断空对象 判断Window对象 判断数组 判断类数组 判断NAN 判断DOM元素 判断arguments对象 深浅拷贝 深拷贝 浅拷贝 扁平化 递归 toString() reduce() ... 柯里化 通用版 ES6 防抖和节流 防抖 节流 模拟new 模拟call 模拟apply 模拟bind 模拟instanceof 模拟JSON.stringify 模拟JSON.parse 利用eval 利用new Function()",content:'# 面试之手写代码\n\n\n# 数组去重\n# 双层循环\nvar array = [1, 1, \'1\', \'1\'];\n\nfunction unique(array) {\n    var res = [];\n    for (var i = 0, arrayLen = array.length; i < arrayLen; i++) {\n        for (var j = 0, resLen = res.length; j < resLen; j++ ) {\n            if (array[i] === res[j]) {\n                break;\n            }\n        }\n        if (j === resLen) {\n            res.push(array[i])\n        }\n    }\n    return res;\n}\n\nconsole.log(unique(array)); // [1, "1"]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 利用indexOf\nvar array = [1, 1, \'1\'];\n\nfunction unique(array) {\n    var res = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n        var current = array[i];\n        if (res.indexOf(current) === -1) {\n            res.push(current)\n        }\n    }\n    return res;\n}\n\nconsole.log(unique(array));\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 排序后去重\nvar array = [1, 1, \'1\'];\n\nfunction unique(array) {\n    var res = [];\n    var sortedArray = array.concat().sort();\n    var seen;\n    for (var i = 0, len = sortedArray.length; i < len; i++) {\n        // 如果是第一个元素或者相邻的元素不相同\n        if (!i || seen !== sortedArray[i]) {\n            res.push(sortedArray[i])\n        }\n        seen = sortedArray[i];\n    }\n    return res;\n}\n\nconsole.log(unique(array));\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# filter\nfilter可以用来简化外层循环\n\n# 使用indexOf\nvar array = [1, 2, 1, 1, \'1\'];\n\nfunction unique(array) {\n    var res = array.filter(function(item, index, array){\n        return array.indexOf(item) === index;\n    })\n    return res;\n}\n\nconsole.log(unique(array));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 排序去重\nvar array = [1, 2, 1, 1, \'1\'];\n\nfunction unique(array) {\n    return array.concat().sort().filter(function(item, index, array){\n        return !index || item !== array[index - 1]\n    })\n}\n\nconsole.log(unique(array));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# ES6方法\n# Set\nvar array = [1, 2, 1, 1, \'1\'];\n\nfunction unique(array) {\n   return Array.from(new Set(array));\n}\n\nconsole.log(unique(array)); // [1, 2, "1"]\n\n\n1\n2\n3\n4\n5\n6\n7\n简化\n\nfunction unique(array) {\n    return [...new Set(array)];\n}\n\n//或者\nvar unique = (a) => [...new Set(a)]\n\n\n1\n2\n3\n4\n5\n6\n# Map\nfunction unique (arr) {\n    const seen = new Map()\n    return arr.filter((a) => !seen.has(a) && seen.set(a, 1))\n}\n\n\n1\n2\n3\n4\n# 类型判断\n类型判断需要注意以下几点\n\n * typeof对六个基本数据类型Undefined、Null、Boolean、Number、String、Object（大写）返回的结果是 undefined、object、boolean、number、string、object（小写），可以看到Null和Object 类型都返回了 object 字符串；typeof却能检测出函数类型；综上，typeof能检测出六种类型，但是不能检测出null类型和Object下细分的类型，如Array，Function，Date，RegExp,Error等.\n   \n   \n * Object.prototype.toString的作用非常强大，它能检测出基本数据类型以及Object下的细分类型，甚至像 Math,JSON,arguments它都能检测出它们的具体类型，它返回结果形式例如object Number.所以，Object.prototype.toString基本上能检测出所有的类型了，只不过有时需要考虑到兼容性低版本浏览器的问题.\n   \n   \n\n# 通用API\n    \n// 该类型判断函数可以判断六种基本数据类型以及Boolean Number String Function Array Date RegExp Object Error，\n// 其他类型因为遇到类型判断的情况较少所以都会返回object,不在进行详细的判断\n//  比如ES6新增的Symbol，Map，Set等类型\nvar classtype = {};\n\n\n"Boolean Number String Function Array Date RegExp Object Error".split(" ").map(function(item) {\n    classtype["[object " + item + "]"] = item.toLowerCase();\n})\n\n\nfunction type(obj) {\n    // 解决IE6中null和undefined会被Object.prototype.toString识别成[object Object]\n    if (obj == null) {\n        return obj + "";\n    }\n\n    //如果是typeof后类型为object下的细分类型(Array,Function,Date,RegExp,Error)或者是Object类型，则要利用Object.prototype.toString\n    //由于ES6新增的Symbol，Map，Set等类型不在classtype列表中，所以使用type函数，返回的结果会是object\n    return typeof obj === "object" || typeof obj === "function" ?\n        classtype[Object.prototype.toString.call(obj)] || "object" :\n        typeof obj;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# 判断空对象\n判断是否有属性，for循环一旦执行，就说明有属性，此时返回false\n\nfunction isEmptyObject( obj ) {\n        var name;\n        for ( name in obj ) {\n            return false;\n        }\n        return true;\n}\n\nconsole.log(isEmptyObject({})); // true\nconsole.log(isEmptyObject([])); // true\nconsole.log(isEmptyObject(null)); // true\nconsole.log(isEmptyObject(undefined)); // true\nconsole.log(isEmptyObject(1)); // true\nconsole.log(isEmptyObject(\'\')); // true\nconsole.log(isEmptyObject(true)); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n我们可以看出isEmptyObject实际上判断的并不仅仅是空对象.但是既然jQuery是这样写，可能是因为考虑到实际开发中 isEmptyObject用来判断 {} 和 {a: 1} 是足够的吧.如果真的是只判断 {}，完全可以结合上篇写的 type函数筛选掉不适合的情况.\n\n# 判断Window对象\nWindow对象有一个window属性指向自身，可以利用这个特性来判断是否是Window对象\n\nfunction isWindow( obj ) {\n    return obj != null && obj === obj.window;\n}\n\n\n1\n2\n3\n# 判断数组\nisArray是数组类型内置的数据类型判断函数，但是会有兼容性问题，一个polyfill如下\n\nisArray = Array.isArray || function(array){\n  return Object.prototype.toString.call(array) === \'[object Array]\';\n}\n\n\n1\n2\n3\n# 判断类数组\njquery实现的isArrayLike,数组和类数组都会返回true.所如果isArrayLike返回true，至少要满足三个条件之一：\n\n * 是数组\n   \n   \n * 长度为 0 比如下面情况,如果我们去掉length === 0 这个判断，就会打印 false，然而我们都知道 arguments 是一个类数组对象，这里是应该返回 true 的\n   \n   \n\nfunction a(){\n    console.log(isArrayLike(arguments))\n}\na();\n\n\n1\n2\n3\n4\n * lengths 属性是大于 0 的数字类型，并且obj[length - 1]必须存在(考虑到arr = [,,3]的情况)\n\nfunction isArrayLike(obj) {\n\n    // obj 必须有 length属性\n    var length = !!obj && "length" in obj && obj.length;\n    var typeRes = type(obj);\n\n    // 排除掉函数和 Window 对象\n    if (typeRes === "function" || isWindow(obj)) {\n        return false;\n    }\n\n    return typeRes === "array" || length === 0 ||\n        typeof length === "number" && length > 0 && (length - 1) in obj;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 判断NAN\n判断一个数是不是NaN不能单纯地使用 === 这样来判断, 因为NaN不与任何数相等, 包括自身,注意在ES6的isNaN中只有值为数字类型使用NaN才会返回true\n\nisNaN: function(value){\n  return isNumber(value) && isNaN(value);\n}\n\n\n1\n2\n3\n# 判断DOM元素\n利用DOM对象特有的nodeType属性\n\nisElement: function(obj){\n  return !!(obj && obj.nodeType === 1);\n    // 两次感叹号将值转化为布尔值\n}\n\n\n\n1\n2\n3\n4\n5\n# 判断arguments对象\n低版本的浏览器中argument对象通过Object.prototype.toString判断后返回的是[object Object],所以需要兼容\n\nisArguments: function(obj){\n  return Object.prototype.toString.call(obj) === \'[object Arguments]\' || (obj != null && Object.hasOwnProperty.call(obj, \'callee\'));\n}\n\n\n1\n2\n3\n# 深浅拷贝\n# 深拷贝\nvar deepCopy = function(obj) {\n    if (typeof obj !== \'object\') return;\n    var newObj = obj instanceof Array ? [] : {};\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            newObj[key] = typeof obj[key] === \'object\' ? deepCopy(obj[key]) : obj[key];\n        }\n    }\n    return newObj;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 浅拷贝\nvar shallowCopy = function(obj) {\n    // 只拷贝对象\n    if (typeof obj !== \'object\') return;\n    // 根据obj的类型判断是新建一个数组还是对象\n    var newObj = obj instanceof Array ? [] : {};\n    // 遍历obj，并且判断是obj的属性才拷贝\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            newObj[key] = obj[key];\n        }\n    }\n    return newObj;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 扁平化\n# 递归\n循环数组元素，如果还是一个数组，就递归调用该方法\n\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n    var result = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n        if (Array.isArray(arr[i])) {\n            result = result.concat(flatten(arr[i]))\n        }\n        else {\n            result.push(arr[i])\n        }\n    }\n    return result;\n}\n\n\nconsole.log(flatten(arr))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# toString()\n如果数组的元素都是数字，可以使用该方法\n\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n    return arr.toString().split(\',\').map(function(item){\n        return +item // +会使字符串发生类型转换\n    })\n}\n\nconsole.log(flatten(arr))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# reduce()\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n    return arr.reduce(function(prev, next){\n        return prev.concat(Array.isArray(next) ? flatten(next) : next)\n    }, [])\n}\n\nconsole.log(flatten(arr))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# ...\n// 扁平化一维数组\nvar arr = [1, [2, [3, 4]]];\nconsole.log([].concat(...arr)); // [1, 2, [3, 4]]\n\n// 可以扁平化多维数组\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n\n    while (arr.some(item => Array.isArray(item))) {\n        arr = [].concat(...arr);\n    }\n\n    return arr;\n}\n\nconsole.log(flatten(arr))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 柯里化\n# 通用版\nfunction curry(fn, args) {\n    var length = fn.length;\n    var args = args || [];\n    return function(){\n        newArgs = args.concat(Array.prototype.slice.call(arguments));\n        if (newArgs.length < length) {\n            return curry.call(this,fn,newArgs);\n        }else{\n            return fn.apply(this,newArgs);\n        }\n    }\n}\n\nfunction multiFn(a, b, c) {\n    return a * b * c;\n}\n\nvar multi = curry(multiFn);\n\nmulti(2)(3)(4);\nmulti(2,3,4);\nmulti(2)(3,4);\nmulti(2,3)(4);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# ES6\nconst curry = (fn, arr = []) => (...args) => (\n  arg => arg.length === fn.length\n    ? fn(...arg)\n    : curry(fn, arg)\n)([...arr, ...args])\n\nlet curryTest=curry((a,b,c,d)=>a+b+c+d)\ncurryTest(1,2,3)(4) //返回10\ncurryTest(1,2)(4)(3) //返回10\ncurryTest(1,2)(3,4) //返回10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 防抖和节流\n# 防抖\nfunction debounce(fn, wait) {\n    var timeout = null;\n    return function() {\n        if(timeout !== null) \n        {\n                clearTimeout(timeout);\n        }\n        timeout = setTimeout(fn, wait);\n    }\n}\n// 处理函数\nfunction handle() {\n    console.log(Math.random()); \n}\n// 滚动事件\nwindow.addEventListener(\'scroll\', debounce(handle, 1000));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n应用场景:\n\n * 搜索框输入查询，如果用户一直在输入中，没有必要不停地调用去请求服务端接口，等用户停止输入的时候，再调用，设置一个合适的时间间隔，有效减轻服务端压力.\n * 表单验证\n * 按钮提交事件.\n * 浏览器窗口缩放，resize事件等.\n\n# 节流\n# 利用时间戳\n   var throttle = function(func, delay) {\n            var prev = Date.now();\n            return function() {\n                var context = this;\n                var args = arguments;\n                var now = Date.now();\n                if (now - prev >= delay) {\n                    func.apply(context, args);\n                    prev = Date.now();\n                }\n            }\n        }\n        function handle() {\n            console.log(Math.random());\n        }\n        window.addEventListener(\'scroll\', throttle(handle, 1000));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 利用定时器\n   var throttle = function(func, delay) {\n            var timer = null;\n            return function() {\n                var context = this;\n                var args = arguments;\n                if (!timer) {\n                    timer = setTimeout(function() {\n                        func.apply(context, args);\n                        timer = null;\n                    }, delay);\n                }\n            }\n        }\n        function handle() {\n            console.log(Math.random());\n        }\n        window.addEventListener(\'scroll\', throttle(handle, 1000));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 模拟new\n * new产生的实例可以访问Constructor里的属性，也可以访问到Constructor.prototype中的属性，前者可以通过apply来实现，后者可以通过将实例的proto属性指向构造函数的prototype来实现\n * 我们还需要判断返回的值是不是一个对象，如果是一个对象，我们就返回这个对象，如果没有，我们该返回什么就返回什么\n\nfunction New(){\n    var obj=new Object();\n    //取出第一个参数，就是我们要传入的构造函数；此外因为shift会修改原数组，所以arguments会被去除第一个参数\n    Constructor=[].shift.call(arguments);\n    //将obj的原型指向构造函数，这样obj就可以访问到构造函数原型中的属性\n    obj._proto_=Constructor.prototype;\n    //使用apply改变构造函数this的指向到新建的对象，这样obj就可以访问到构造函数中的属性\n    var ret=Constructor.apply(obj,arguments);\n    //要返回obj\n    return typeof ret === \'object\' ? ret:obj;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\nfunction Otaku(name,age){\n\tthis.name=name;\n\tthis.age=age;\n\tthis.habit=\'Games\'\n}\n\nOtaku.prototype.sayYourName=function(){\n    console.log("I am" + this.name);\n}\n\nvar person=objectFactory(Otaku,\'Kevin\',\'18\')\n\nconsole.log(person.name)//Kevin\nconsole.log(person.habit)//Games\nconsole.log(person.strength)//60\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 模拟call\n * call()方法在使用一个指定的this值和若干个指定的参数值的前提下调用某个函数或方法\n * 模拟的步骤是：将函数设为对象的属性—>执行该函数—>删除该函数\n * this参数可以传null，当为null的时候，视为指向window\n * 函数是可以有返回值的\n\nFunction.prototype.call2 = function(context) {\n    var context=context||window\n    context.fn = this;\n    let args = [...arguments].slice(1);\n    let result = context.fn(...args);\n    delete context.fn;\n    return result;\n}\nlet foo = {\n    value: 1\n}\nfunction bar(name, age) {\n    console.log(name)\n    console.log(age)\n    console.log(this.value);\n}\n//表示bar函数的执行环境是foo，即bar函数里面的this代表foo,this.value相当于foo.value,然后给bar函数传递两个参数\nbar.call2(foo, \'black\', \'18\') // black 18 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 模拟apply\napply()的实现和call()类似，只是参数形式不同\n\nFunction.prototype.apply2 = function(context = window) {\n    context.fn = this\n    let result;\n    // 判断是否有第二个参数\n    if(arguments[1]) {\n        result = context.fn(...arguments[1])\n    } else {\n        result = context.fn()\n    }\n    delete context.fn\n    return result\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 模拟bind\nFunction.prototype.bind2=function(context){\n    var self=thisl\n    var args=Array.prototype.slice.call(arguments,1);\n    \n    var fNOP=function(){};\n    var fBound=function(){\n        var bindArgs=Array.prototype.slice.call(arguments);\n        return self.apply(this instanceof fNOP ? this : context, args.concat(bindAt))\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 模拟instanceof\nfunction instanceOf(left,right) {\n\n    let proto = left.__proto__;\n    let prototype = right.prototype\n    while(true) {\n        if(proto === null) return false\n        if(proto === prototype) return true\n        proto = proto.__proto__;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 模拟JSON.stringify\n> JSON.stringify(value[, replacer [, space]])\n\n\n * Boolean | Number| String 类型会自动转换成对应的原始值.\n * undefined、任意函数以及symbol，会被忽略（出现在非数组对象的属性值中时），或者被转换成 null（出现在数组中时）.\n * 不可枚举的属性会被忽略\n * 如果一个对象的属性值通过某种间接的方式指回该对象本身，即循环引用，属性也会被忽略.\n\nfunction jsonStringify(obj) {\n    let type = typeof obj;\n    if (type !== "object") {\n        if (/string|undefined|function/.test(type)) {\n            obj = \'"\' + obj + \'"\';\n        }\n        return String(obj);\n    } else {\n        let json = []\n        let arr = Array.isArray(obj)\n        for (let k in obj) {\n            let v = obj[k];\n            let type = typeof v;\n            if (/string|undefined|function/.test(type)) {\n                v = \'"\' + v + \'"\';\n            } else if (type === "object") {\n                v = jsonStringify(v);\n            }\n            json.push((arr ? "" : \'"\' + k + \'":\') + String(v));\n        }\n        return (arr ? "[" : "{") + String(json) + (arr ? "]" : "}")\n    }\n}\njsonStringify({x : 5}) // "{"x":5}"\njsonStringify([1, "false", false]) // "[1,"false",false]"\njsonStringify({b: undefined}) // "{"b":"undefined"}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 模拟JSON.parse\n> JSON.parse(text[, reviver])\n\n\n用来解析JSON字符串，构造由字符串描述的JavaScript值或对象.提供可选的reviver函数用以在返回之前对所得到的对象执行变换(操作).\n\n# 利用eval\nfunction jsonParse(opt) {\n    return eval(\'(\' + opt + \')\');\n}\njsonParse(jsonStringify({x : 5}))\n// Object { x: 5}\njsonParse(jsonStringify([1, "false", false]))\n// [1, "false", falsr]\njsonParse(jsonStringify({b: undefined}))\n// Object { b: "undefined"}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n避免在不必要的情况下使用 eval，eval() 是一个危险的函数， 他执行的代码拥有着执行者的权利.如果你用 eval()运行的字符串代码被恶意方（不怀好意的人）操控修改，您最终可能会在您的网页/扩展程序的权限下，在用户计算机上运行恶意代码\n\n# 利用new Function()\nFunction与eval有相同的字符串参数特性,eval 与 Function 都有着动态编译js代码的作用，但是在实际的编程中并不推荐使用.\n\nvar func = new Function(arg1, arg2, ..., functionBody)\n\nvar jsonStr = \'{ "age": 20, "name": "jack" }\'\nvar json = (new Function(\'return \' + jsonStr))();\n\n\n1\n2\n3\n4',normalizedContent:'# 面试之手写代码\n\n\n# 数组去重\n# 双层循环\nvar array = [1, 1, \'1\', \'1\'];\n\nfunction unique(array) {\n    var res = [];\n    for (var i = 0, arraylen = array.length; i < arraylen; i++) {\n        for (var j = 0, reslen = res.length; j < reslen; j++ ) {\n            if (array[i] === res[j]) {\n                break;\n            }\n        }\n        if (j === reslen) {\n            res.push(array[i])\n        }\n    }\n    return res;\n}\n\nconsole.log(unique(array)); // [1, "1"]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 利用indexof\nvar array = [1, 1, \'1\'];\n\nfunction unique(array) {\n    var res = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n        var current = array[i];\n        if (res.indexof(current) === -1) {\n            res.push(current)\n        }\n    }\n    return res;\n}\n\nconsole.log(unique(array));\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 排序后去重\nvar array = [1, 1, \'1\'];\n\nfunction unique(array) {\n    var res = [];\n    var sortedarray = array.concat().sort();\n    var seen;\n    for (var i = 0, len = sortedarray.length; i < len; i++) {\n        // 如果是第一个元素或者相邻的元素不相同\n        if (!i || seen !== sortedarray[i]) {\n            res.push(sortedarray[i])\n        }\n        seen = sortedarray[i];\n    }\n    return res;\n}\n\nconsole.log(unique(array));\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# filter\nfilter可以用来简化外层循环\n\n# 使用indexof\nvar array = [1, 2, 1, 1, \'1\'];\n\nfunction unique(array) {\n    var res = array.filter(function(item, index, array){\n        return array.indexof(item) === index;\n    })\n    return res;\n}\n\nconsole.log(unique(array));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 排序去重\nvar array = [1, 2, 1, 1, \'1\'];\n\nfunction unique(array) {\n    return array.concat().sort().filter(function(item, index, array){\n        return !index || item !== array[index - 1]\n    })\n}\n\nconsole.log(unique(array));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# es6方法\n# set\nvar array = [1, 2, 1, 1, \'1\'];\n\nfunction unique(array) {\n   return array.from(new set(array));\n}\n\nconsole.log(unique(array)); // [1, 2, "1"]\n\n\n1\n2\n3\n4\n5\n6\n7\n简化\n\nfunction unique(array) {\n    return [...new set(array)];\n}\n\n//或者\nvar unique = (a) => [...new set(a)]\n\n\n1\n2\n3\n4\n5\n6\n# map\nfunction unique (arr) {\n    const seen = new map()\n    return arr.filter((a) => !seen.has(a) && seen.set(a, 1))\n}\n\n\n1\n2\n3\n4\n# 类型判断\n类型判断需要注意以下几点\n\n * typeof对六个基本数据类型undefined、null、boolean、number、string、object（大写）返回的结果是 undefined、object、boolean、number、string、object（小写），可以看到null和object 类型都返回了 object 字符串；typeof却能检测出函数类型；综上，typeof能检测出六种类型，但是不能检测出null类型和object下细分的类型，如array，function，date，regexp,error等.\n   \n   \n * object.prototype.tostring的作用非常强大，它能检测出基本数据类型以及object下的细分类型，甚至像 math,json,arguments它都能检测出它们的具体类型，它返回结果形式例如object number.所以，object.prototype.tostring基本上能检测出所有的类型了，只不过有时需要考虑到兼容性低版本浏览器的问题.\n   \n   \n\n# 通用api\n    \n// 该类型判断函数可以判断六种基本数据类型以及boolean number string function array date regexp object error，\n// 其他类型因为遇到类型判断的情况较少所以都会返回object,不在进行详细的判断\n//  比如es6新增的symbol，map，set等类型\nvar classtype = {};\n\n\n"boolean number string function array date regexp object error".split(" ").map(function(item) {\n    classtype["[object " + item + "]"] = item.tolowercase();\n})\n\n\nfunction type(obj) {\n    // 解决ie6中null和undefined会被object.prototype.tostring识别成[object object]\n    if (obj == null) {\n        return obj + "";\n    }\n\n    //如果是typeof后类型为object下的细分类型(array,function,date,regexp,error)或者是object类型，则要利用object.prototype.tostring\n    //由于es6新增的symbol，map，set等类型不在classtype列表中，所以使用type函数，返回的结果会是object\n    return typeof obj === "object" || typeof obj === "function" ?\n        classtype[object.prototype.tostring.call(obj)] || "object" :\n        typeof obj;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# 判断空对象\n判断是否有属性，for循环一旦执行，就说明有属性，此时返回false\n\nfunction isemptyobject( obj ) {\n        var name;\n        for ( name in obj ) {\n            return false;\n        }\n        return true;\n}\n\nconsole.log(isemptyobject({})); // true\nconsole.log(isemptyobject([])); // true\nconsole.log(isemptyobject(null)); // true\nconsole.log(isemptyobject(undefined)); // true\nconsole.log(isemptyobject(1)); // true\nconsole.log(isemptyobject(\'\')); // true\nconsole.log(isemptyobject(true)); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n我们可以看出isemptyobject实际上判断的并不仅仅是空对象.但是既然jquery是这样写，可能是因为考虑到实际开发中 isemptyobject用来判断 {} 和 {a: 1} 是足够的吧.如果真的是只判断 {}，完全可以结合上篇写的 type函数筛选掉不适合的情况.\n\n# 判断window对象\nwindow对象有一个window属性指向自身，可以利用这个特性来判断是否是window对象\n\nfunction iswindow( obj ) {\n    return obj != null && obj === obj.window;\n}\n\n\n1\n2\n3\n# 判断数组\nisarray是数组类型内置的数据类型判断函数，但是会有兼容性问题，一个polyfill如下\n\nisarray = array.isarray || function(array){\n  return object.prototype.tostring.call(array) === \'[object array]\';\n}\n\n\n1\n2\n3\n# 判断类数组\njquery实现的isarraylike,数组和类数组都会返回true.所如果isarraylike返回true，至少要满足三个条件之一：\n\n * 是数组\n   \n   \n * 长度为 0 比如下面情况,如果我们去掉length === 0 这个判断，就会打印 false，然而我们都知道 arguments 是一个类数组对象，这里是应该返回 true 的\n   \n   \n\nfunction a(){\n    console.log(isarraylike(arguments))\n}\na();\n\n\n1\n2\n3\n4\n * lengths 属性是大于 0 的数字类型，并且obj[length - 1]必须存在(考虑到arr = [,,3]的情况)\n\nfunction isarraylike(obj) {\n\n    // obj 必须有 length属性\n    var length = !!obj && "length" in obj && obj.length;\n    var typeres = type(obj);\n\n    // 排除掉函数和 window 对象\n    if (typeres === "function" || iswindow(obj)) {\n        return false;\n    }\n\n    return typeres === "array" || length === 0 ||\n        typeof length === "number" && length > 0 && (length - 1) in obj;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 判断nan\n判断一个数是不是nan不能单纯地使用 === 这样来判断, 因为nan不与任何数相等, 包括自身,注意在es6的isnan中只有值为数字类型使用nan才会返回true\n\nisnan: function(value){\n  return isnumber(value) && isnan(value);\n}\n\n\n1\n2\n3\n# 判断dom元素\n利用dom对象特有的nodetype属性\n\niselement: function(obj){\n  return !!(obj && obj.nodetype === 1);\n    // 两次感叹号将值转化为布尔值\n}\n\n\n\n1\n2\n3\n4\n5\n# 判断arguments对象\n低版本的浏览器中argument对象通过object.prototype.tostring判断后返回的是[object object],所以需要兼容\n\nisarguments: function(obj){\n  return object.prototype.tostring.call(obj) === \'[object arguments]\' || (obj != null && object.hasownproperty.call(obj, \'callee\'));\n}\n\n\n1\n2\n3\n# 深浅拷贝\n# 深拷贝\nvar deepcopy = function(obj) {\n    if (typeof obj !== \'object\') return;\n    var newobj = obj instanceof array ? [] : {};\n    for (var key in obj) {\n        if (obj.hasownproperty(key)) {\n            newobj[key] = typeof obj[key] === \'object\' ? deepcopy(obj[key]) : obj[key];\n        }\n    }\n    return newobj;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 浅拷贝\nvar shallowcopy = function(obj) {\n    // 只拷贝对象\n    if (typeof obj !== \'object\') return;\n    // 根据obj的类型判断是新建一个数组还是对象\n    var newobj = obj instanceof array ? [] : {};\n    // 遍历obj，并且判断是obj的属性才拷贝\n    for (var key in obj) {\n        if (obj.hasownproperty(key)) {\n            newobj[key] = obj[key];\n        }\n    }\n    return newobj;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 扁平化\n# 递归\n循环数组元素，如果还是一个数组，就递归调用该方法\n\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n    var result = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n        if (array.isarray(arr[i])) {\n            result = result.concat(flatten(arr[i]))\n        }\n        else {\n            result.push(arr[i])\n        }\n    }\n    return result;\n}\n\n\nconsole.log(flatten(arr))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# tostring()\n如果数组的元素都是数字，可以使用该方法\n\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n    return arr.tostring().split(\',\').map(function(item){\n        return +item // +会使字符串发生类型转换\n    })\n}\n\nconsole.log(flatten(arr))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# reduce()\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n    return arr.reduce(function(prev, next){\n        return prev.concat(array.isarray(next) ? flatten(next) : next)\n    }, [])\n}\n\nconsole.log(flatten(arr))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# ...\n// 扁平化一维数组\nvar arr = [1, [2, [3, 4]]];\nconsole.log([].concat(...arr)); // [1, 2, [3, 4]]\n\n// 可以扁平化多维数组\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n\n    while (arr.some(item => array.isarray(item))) {\n        arr = [].concat(...arr);\n    }\n\n    return arr;\n}\n\nconsole.log(flatten(arr))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 柯里化\n# 通用版\nfunction curry(fn, args) {\n    var length = fn.length;\n    var args = args || [];\n    return function(){\n        newargs = args.concat(array.prototype.slice.call(arguments));\n        if (newargs.length < length) {\n            return curry.call(this,fn,newargs);\n        }else{\n            return fn.apply(this,newargs);\n        }\n    }\n}\n\nfunction multifn(a, b, c) {\n    return a * b * c;\n}\n\nvar multi = curry(multifn);\n\nmulti(2)(3)(4);\nmulti(2,3,4);\nmulti(2)(3,4);\nmulti(2,3)(4);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# es6\nconst curry = (fn, arr = []) => (...args) => (\n  arg => arg.length === fn.length\n    ? fn(...arg)\n    : curry(fn, arg)\n)([...arr, ...args])\n\nlet currytest=curry((a,b,c,d)=>a+b+c+d)\ncurrytest(1,2,3)(4) //返回10\ncurrytest(1,2)(4)(3) //返回10\ncurrytest(1,2)(3,4) //返回10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 防抖和节流\n# 防抖\nfunction debounce(fn, wait) {\n    var timeout = null;\n    return function() {\n        if(timeout !== null) \n        {\n                cleartimeout(timeout);\n        }\n        timeout = settimeout(fn, wait);\n    }\n}\n// 处理函数\nfunction handle() {\n    console.log(math.random()); \n}\n// 滚动事件\nwindow.addeventlistener(\'scroll\', debounce(handle, 1000));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n应用场景:\n\n * 搜索框输入查询，如果用户一直在输入中，没有必要不停地调用去请求服务端接口，等用户停止输入的时候，再调用，设置一个合适的时间间隔，有效减轻服务端压力.\n * 表单验证\n * 按钮提交事件.\n * 浏览器窗口缩放，resize事件等.\n\n# 节流\n# 利用时间戳\n   var throttle = function(func, delay) {\n            var prev = date.now();\n            return function() {\n                var context = this;\n                var args = arguments;\n                var now = date.now();\n                if (now - prev >= delay) {\n                    func.apply(context, args);\n                    prev = date.now();\n                }\n            }\n        }\n        function handle() {\n            console.log(math.random());\n        }\n        window.addeventlistener(\'scroll\', throttle(handle, 1000));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 利用定时器\n   var throttle = function(func, delay) {\n            var timer = null;\n            return function() {\n                var context = this;\n                var args = arguments;\n                if (!timer) {\n                    timer = settimeout(function() {\n                        func.apply(context, args);\n                        timer = null;\n                    }, delay);\n                }\n            }\n        }\n        function handle() {\n            console.log(math.random());\n        }\n        window.addeventlistener(\'scroll\', throttle(handle, 1000));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 模拟new\n * new产生的实例可以访问constructor里的属性，也可以访问到constructor.prototype中的属性，前者可以通过apply来实现，后者可以通过将实例的proto属性指向构造函数的prototype来实现\n * 我们还需要判断返回的值是不是一个对象，如果是一个对象，我们就返回这个对象，如果没有，我们该返回什么就返回什么\n\nfunction new(){\n    var obj=new object();\n    //取出第一个参数，就是我们要传入的构造函数；此外因为shift会修改原数组，所以arguments会被去除第一个参数\n    constructor=[].shift.call(arguments);\n    //将obj的原型指向构造函数，这样obj就可以访问到构造函数原型中的属性\n    obj._proto_=constructor.prototype;\n    //使用apply改变构造函数this的指向到新建的对象，这样obj就可以访问到构造函数中的属性\n    var ret=constructor.apply(obj,arguments);\n    //要返回obj\n    return typeof ret === \'object\' ? ret:obj;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\nfunction otaku(name,age){\n\tthis.name=name;\n\tthis.age=age;\n\tthis.habit=\'games\'\n}\n\notaku.prototype.sayyourname=function(){\n    console.log("i am" + this.name);\n}\n\nvar person=objectfactory(otaku,\'kevin\',\'18\')\n\nconsole.log(person.name)//kevin\nconsole.log(person.habit)//games\nconsole.log(person.strength)//60\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 模拟call\n * call()方法在使用一个指定的this值和若干个指定的参数值的前提下调用某个函数或方法\n * 模拟的步骤是：将函数设为对象的属性—>执行该函数—>删除该函数\n * this参数可以传null，当为null的时候，视为指向window\n * 函数是可以有返回值的\n\nfunction.prototype.call2 = function(context) {\n    var context=context||window\n    context.fn = this;\n    let args = [...arguments].slice(1);\n    let result = context.fn(...args);\n    delete context.fn;\n    return result;\n}\nlet foo = {\n    value: 1\n}\nfunction bar(name, age) {\n    console.log(name)\n    console.log(age)\n    console.log(this.value);\n}\n//表示bar函数的执行环境是foo，即bar函数里面的this代表foo,this.value相当于foo.value,然后给bar函数传递两个参数\nbar.call2(foo, \'black\', \'18\') // black 18 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 模拟apply\napply()的实现和call()类似，只是参数形式不同\n\nfunction.prototype.apply2 = function(context = window) {\n    context.fn = this\n    let result;\n    // 判断是否有第二个参数\n    if(arguments[1]) {\n        result = context.fn(...arguments[1])\n    } else {\n        result = context.fn()\n    }\n    delete context.fn\n    return result\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 模拟bind\nfunction.prototype.bind2=function(context){\n    var self=thisl\n    var args=array.prototype.slice.call(arguments,1);\n    \n    var fnop=function(){};\n    var fbound=function(){\n        var bindargs=array.prototype.slice.call(arguments);\n        return self.apply(this instanceof fnop ? this : context, args.concat(bindat))\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 模拟instanceof\nfunction instanceof(left,right) {\n\n    let proto = left.__proto__;\n    let prototype = right.prototype\n    while(true) {\n        if(proto === null) return false\n        if(proto === prototype) return true\n        proto = proto.__proto__;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 模拟json.stringify\n> json.stringify(value[, replacer [, space]])\n\n\n * boolean | number| string 类型会自动转换成对应的原始值.\n * undefined、任意函数以及symbol，会被忽略（出现在非数组对象的属性值中时），或者被转换成 null（出现在数组中时）.\n * 不可枚举的属性会被忽略\n * 如果一个对象的属性值通过某种间接的方式指回该对象本身，即循环引用，属性也会被忽略.\n\nfunction jsonstringify(obj) {\n    let type = typeof obj;\n    if (type !== "object") {\n        if (/string|undefined|function/.test(type)) {\n            obj = \'"\' + obj + \'"\';\n        }\n        return string(obj);\n    } else {\n        let json = []\n        let arr = array.isarray(obj)\n        for (let k in obj) {\n            let v = obj[k];\n            let type = typeof v;\n            if (/string|undefined|function/.test(type)) {\n                v = \'"\' + v + \'"\';\n            } else if (type === "object") {\n                v = jsonstringify(v);\n            }\n            json.push((arr ? "" : \'"\' + k + \'":\') + string(v));\n        }\n        return (arr ? "[" : "{") + string(json) + (arr ? "]" : "}")\n    }\n}\njsonstringify({x : 5}) // "{"x":5}"\njsonstringify([1, "false", false]) // "[1,"false",false]"\njsonstringify({b: undefined}) // "{"b":"undefined"}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 模拟json.parse\n> json.parse(text[, reviver])\n\n\n用来解析json字符串，构造由字符串描述的javascript值或对象.提供可选的reviver函数用以在返回之前对所得到的对象执行变换(操作).\n\n# 利用eval\nfunction jsonparse(opt) {\n    return eval(\'(\' + opt + \')\');\n}\njsonparse(jsonstringify({x : 5}))\n// object { x: 5}\njsonparse(jsonstringify([1, "false", false]))\n// [1, "false", falsr]\njsonparse(jsonstringify({b: undefined}))\n// object { b: "undefined"}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n避免在不必要的情况下使用 eval，eval() 是一个危险的函数， 他执行的代码拥有着执行者的权利.如果你用 eval()运行的字符串代码被恶意方（不怀好意的人）操控修改，您最终可能会在您的网页/扩展程序的权限下，在用户计算机上运行恶意代码\n\n# 利用new function()\nfunction与eval有相同的字符串参数特性,eval 与 function 都有着动态编译js代码的作用，但是在实际的编程中并不推荐使用.\n\nvar func = new function(arg1, arg2, ..., functionbody)\n\nvar jsonstr = \'{ "age": 20, "name": "jack" }\'\nvar json = (new function(\'return \' + jsonstr))();\n\n\n1\n2\n3\n4',charsets:{cjk:!0}},{title:"工厂模式",frontmatter:{"date updated":"2021-08-17T11:47:13+08:00"},regularPath:"/javascript/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",relativePath:"javascript/设计模式.md",key:"v-c75594b8",path:"/javascript/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:9},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:50},{level:2,title:"场景",slug:"场景",normalizedTitle:"场景",charIndex:378},{level:2,title:"简介",slug:"简介-2",normalizedTitle:"简介",charIndex:9},{level:2,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:50},{level:2,title:"场景",slug:"场景-2",normalizedTitle:"场景",charIndex:378},{level:2,title:"简介",slug:"简介-3",normalizedTitle:"简介",charIndex:9},{level:2,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:50},{level:2,title:"场景",slug:"场景-3",normalizedTitle:"场景",charIndex:378},{level:2,title:"示例",slug:"示例-4",normalizedTitle:"示例",charIndex:50},{level:2,title:"场景",slug:"场景-4",normalizedTitle:"场景",charIndex:378},{level:2,title:"简介",slug:"简介-4",normalizedTitle:"简介",charIndex:9},{level:2,title:"示例",slug:"示例-5",normalizedTitle:"示例",charIndex:50},{level:2,title:"场景",slug:"场景-5",normalizedTitle:"场景",charIndex:378},{level:2,title:"简介",slug:"简介-5",normalizedTitle:"简介",charIndex:9},{level:2,title:"示例",slug:"示例-6",normalizedTitle:"示例",charIndex:50},{level:2,title:"场景",slug:"场景-6",normalizedTitle:"场景",charIndex:378}],lastUpdated:"9/14/2021, 6:48:26 AM",headersStr:"简介 示例 场景 简介 示例 场景 简介 示例 场景 示例 场景 简介 示例 场景 简介 示例 场景",content:'# 工厂模式\n# 简介\n工厂模式主要就是创建一个实例提供了接口,将 new 操作进行单独封装\n\n# 示例\nclass HanBao {\n  constructor(name) {\n    this.name = name;\n  }\n\n  init() {\n    console.log("汉堡初始化");\n  }\n}\n\nclass KFC {\n  create(name) {\n    return new HanBao(name);\n  }\n}\n\nlet kfc = new KFC();\n\nlet food = kfc.create("香辣鸡腿堡");\n\nfood.init();\n\nconsole.log(food);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 场景\n * 在jquery中获取元素,我们不是new jquery()\n\nclass jQuery {\n  constructor(selector) {\n    // ...\n  }\n\n  append() {}\n\n  addClass() {}\n\n  // ...\n}\n\nwindow.$ = function (selector) {\n  return new jQuery(selector);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 单例模式\n# 简介\n所谓的单例,就是指一个类只有一个实例,不管你new 多少次,都是这一个实例\n\n# 示例\n * 标识符形式\n\nclass Single {\n  constructor() {\n    this.isLogin = false;\n  }\n\n  login() {\n    this.isLogin = true;\n  }\n}\n\n// 标识flag\n\nvar instance;\n\nfunction getSingle() {\n  if (!instance) instance = new Single();\n\n  return instance;\n}\n\nconst a = getSingle();\n\nconst b = getSingle();\n\na.login();\n\nconsole.log(a == b);\n\nconsole.log(b.isLogin);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n * 利用闭包\n\nclass Single {\n  constructor() {\n    this.isLogin = false;\n  }\n\n  login() {\n    this.isLogin = true;\n  }\n}\n\nSingle.getInstance = (function () {\n  let instance;\n\n  // 利用闭包把外部函数的变量保存在内存中\n\n  return function () {\n    if (!instance) {\n      instance = new Single();\n    }\n\n    return instance;\n  };\n})();\n\nconst c = Single.getInstance();\n\nconst d = Single.getInstance();\n\nc.login();\n\nconsole.log(c == d);\n\nconsole.log(d.isLogin);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 场景\n * vuex\n\n通过传入Vue实例对象,如果一已经穿如果,提示已经传入实例,否则再将 vuex初始化逻辑写进vue的钩子函数\n\n * vue-router\n\n# 适配器模式\n# 简介\nmac 笔记本 type-c 接口,没办法接 hdmi和 usb,这时候需要一个转接头\n\n# 示例\nclass iphone {\n  getName() {\n    return "我是iphone接口";\n  }\n}\n\nclass Target {\n  constructor() {\n    this.t = new iphone();\n  }\n\n  getName() {\n    return `${this.t.getName()},已经转化为安卓接口了`;\n  }\n}\n\nconst target = new Target();\n\nconsole.log(target.getName());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 场景\n * vue的computed\n\nvue 中有时 data 中的数据不满足于某个需求的使用，通常可以通过计算属性 computed 重新组装一个新的数据\n\n\ncomputed: {\n\n if(this.count>=60){\n\n return "及格"\n\n }else{\n\n return "不及格"\n\n }\n\n }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 装饰器模式\n不改变原有的结构和功能,将现有对象和装饰器进行分离,两者独立存在\n\n# 示例\nclass Circle {\n  draw() {\n    console.log("画圆圈");\n  }\n}\n\nclass Expand {\n  constructor(circle) {\n    this.circle = circle;\n  }\n\n  setBorder() {\n    console.log("设置边框");\n  }\n\n  draw() {\n    this.circle.draw();\n\n    this.setBorder();\n  }\n}\n\nlet c = new Circle();\n\nlet expand = new Expand();\n\nexpand.draw();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 场景\n * ES7 装饰器\n\n// @testable是一个装饰器,修改了`MyTestableClass`这个类的行为\n\n@testable\nclass MyTestableClass {\n  // ...\n}\n\nfunction testable(target) {\n  // 为它加上了静态属性`isTestable`\n\n  target.isTestable = true;\n}\n\nMyTestableClass.isTestable; // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * vue-class-component\n\n# 代理模式\n# 简介\n使用者无醛访问目标对象,中间需要设置代理,通过代理授权控制,例如vpn\n\n# 示例\nconst data = {\n  name: "a",\n\n  age: 18,\n\n  likes: [],\n};\n\n// 为data创建一个代理\n\nconst proxyData = new Proxy(data, {\n  get(target, key, receiver) {\n    const result = Reflect.get(target, key, receiver);\n\n    console.log("get");\n\n    return result;\n  },\n\n  set(target, key, value, receiver) {\n    const result = Reflect.set(target, key, value, receiver);\n\n    console.log("set");\n\n    return result;\n  },\n});\n\n// 通过改变proxyData而不是data，进行代理\n\nproxyData.name = "2";\n\nproxyData.likes.push("eat");\n\n// 打印data\n\nconsole.log(data); // \'set\' \'get\' { age: 18, likes: ["eat"], name: "2" }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n# 场景\n * 事件代理(委托)\n\n<ul id="ul">\n  <li>111</li>\n\n  <li>222</li>\n\n  <li>333</li>\n\n  <li>444</li>\n</ul>;\n\nwindow.onload = function () {\n  var oUl = document.getElementById("ul");\n\n  // 通过事件冒泡，直接为父组件绑定事件\n\n  oUl.onclick = function (ev) {\n    var ev = ev || window.event;\n\n    var target = ev.target || ev.srcElement;\n\n    if (target.nodeName.toLowerCase() == "li") {\n      alert(target.innerHTML);\n    }\n  };\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# 观察者模式\n# 简介\n一对多\n\n# 示例\n/*\n\n * @Author: wangzhongjie\n\n * @Date: 2021-08-12 11:14:50\n\n * @LastEditors: wangzhongjie\n\n * @LastEditTime: 2021-08-12 13:39:34\n\n * @Description: 观察者模式\n\n * @Email: UvDream@163.com\n\n */\n\nclass Subject {\n  constructor() {\n    this.state = {};\n\n    this.observers = [];\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  setState(state) {\n    this.state = state;\n\n    this.notify();\n  }\n\n  notify() {\n    this.observers.forEach((observer) => {\n      observer.update();\n    });\n  }\n\n  attach(observer) {\n    this.observers.push(observer);\n  }\n}\n\nclass Observer {\n  constructor(name, subject) {\n    this.name = name;\n\n    this.subject = subject;\n\n    this.subject.attach(this);\n  }\n\n  update() {\n    console.log(`${this.name} update, state:${this.subject.getState()}`);\n  }\n}\n\nconst s = new Subject();\n\nconst o1 = new Observer("o1", s);\n\nconst o2 = new Observer("o2", s);\n\ns.setState(1234);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n# 场景\n * vue2 defineProperty\n\nfunction update() {\n  console.log("更新啦");\n}\n\nconst newPrototype = Array.prototype;\n\nconst arrProto = Object.create(newPrototype);\n\n// 由于Object.defineProperty不能监听数组，此处重写数组的方法\n\n// 此处只演示数组的push方法，其他方法的实现与此一致\n\narrProto.push = function () {\n  update();\n\n  newPrototype.push.call(this, ...arguments);\n};\n\nfunction watcherFn(obj) {\n  // 如果是数组，重写obj的原型指向arrProto\n\n  if (Array.isArray(obj)) {\n    obj.__proto__ = arrProto;\n  } else {\n    for (let k of Object.keys(obj)) {\n      register(obj, k, obj[k]);\n    }\n  }\n}\n\nfunction register(obj, key, value) {\n  if (typeof value === "object") {\n    watcherFn(value);\n  } else {\n    Object.defineProperty(obj, key, {\n      get() {\n        return value;\n      },\n\n      set(val) {\n        if (val !== value) {\n          update();\n\n          value = val;\n        }\n      },\n    });\n  }\n}\n\nconst obj = {\n  name: "h",\n\n  info: {\n    address: "bj",\n  },\n\n  likes: ["music"],\n};\n\nwatcherFn(obj);\n\nobj.name = "b";\n\nobj.info.address = "gz";\n\nobj.likes.push("sing");\n\nconsole.log(obj); // 更新啦 × 3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69',normalizedContent:'# 工厂模式\n# 简介\n工厂模式主要就是创建一个实例提供了接口,将 new 操作进行单独封装\n\n# 示例\nclass hanbao {\n  constructor(name) {\n    this.name = name;\n  }\n\n  init() {\n    console.log("汉堡初始化");\n  }\n}\n\nclass kfc {\n  create(name) {\n    return new hanbao(name);\n  }\n}\n\nlet kfc = new kfc();\n\nlet food = kfc.create("香辣鸡腿堡");\n\nfood.init();\n\nconsole.log(food);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 场景\n * 在jquery中获取元素,我们不是new jquery()\n\nclass jquery {\n  constructor(selector) {\n    // ...\n  }\n\n  append() {}\n\n  addclass() {}\n\n  // ...\n}\n\nwindow.$ = function (selector) {\n  return new jquery(selector);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 单例模式\n# 简介\n所谓的单例,就是指一个类只有一个实例,不管你new 多少次,都是这一个实例\n\n# 示例\n * 标识符形式\n\nclass single {\n  constructor() {\n    this.islogin = false;\n  }\n\n  login() {\n    this.islogin = true;\n  }\n}\n\n// 标识flag\n\nvar instance;\n\nfunction getsingle() {\n  if (!instance) instance = new single();\n\n  return instance;\n}\n\nconst a = getsingle();\n\nconst b = getsingle();\n\na.login();\n\nconsole.log(a == b);\n\nconsole.log(b.islogin);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n * 利用闭包\n\nclass single {\n  constructor() {\n    this.islogin = false;\n  }\n\n  login() {\n    this.islogin = true;\n  }\n}\n\nsingle.getinstance = (function () {\n  let instance;\n\n  // 利用闭包把外部函数的变量保存在内存中\n\n  return function () {\n    if (!instance) {\n      instance = new single();\n    }\n\n    return instance;\n  };\n})();\n\nconst c = single.getinstance();\n\nconst d = single.getinstance();\n\nc.login();\n\nconsole.log(c == d);\n\nconsole.log(d.islogin);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 场景\n * vuex\n\n通过传入vue实例对象,如果一已经穿如果,提示已经传入实例,否则再将 vuex初始化逻辑写进vue的钩子函数\n\n * vue-router\n\n# 适配器模式\n# 简介\nmac 笔记本 type-c 接口,没办法接 hdmi和 usb,这时候需要一个转接头\n\n# 示例\nclass iphone {\n  getname() {\n    return "我是iphone接口";\n  }\n}\n\nclass target {\n  constructor() {\n    this.t = new iphone();\n  }\n\n  getname() {\n    return `${this.t.getname()},已经转化为安卓接口了`;\n  }\n}\n\nconst target = new target();\n\nconsole.log(target.getname());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 场景\n * vue的computed\n\nvue 中有时 data 中的数据不满足于某个需求的使用，通常可以通过计算属性 computed 重新组装一个新的数据\n\n\ncomputed: {\n\n if(this.count>=60){\n\n return "及格"\n\n }else{\n\n return "不及格"\n\n }\n\n }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 装饰器模式\n不改变原有的结构和功能,将现有对象和装饰器进行分离,两者独立存在\n\n# 示例\nclass circle {\n  draw() {\n    console.log("画圆圈");\n  }\n}\n\nclass expand {\n  constructor(circle) {\n    this.circle = circle;\n  }\n\n  setborder() {\n    console.log("设置边框");\n  }\n\n  draw() {\n    this.circle.draw();\n\n    this.setborder();\n  }\n}\n\nlet c = new circle();\n\nlet expand = new expand();\n\nexpand.draw();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 场景\n * es7 装饰器\n\n// @testable是一个装饰器,修改了`mytestableclass`这个类的行为\n\n@testable\nclass mytestableclass {\n  // ...\n}\n\nfunction testable(target) {\n  // 为它加上了静态属性`istestable`\n\n  target.istestable = true;\n}\n\nmytestableclass.istestable; // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * vue-class-component\n\n# 代理模式\n# 简介\n使用者无醛访问目标对象,中间需要设置代理,通过代理授权控制,例如vpn\n\n# 示例\nconst data = {\n  name: "a",\n\n  age: 18,\n\n  likes: [],\n};\n\n// 为data创建一个代理\n\nconst proxydata = new proxy(data, {\n  get(target, key, receiver) {\n    const result = reflect.get(target, key, receiver);\n\n    console.log("get");\n\n    return result;\n  },\n\n  set(target, key, value, receiver) {\n    const result = reflect.set(target, key, value, receiver);\n\n    console.log("set");\n\n    return result;\n  },\n});\n\n// 通过改变proxydata而不是data，进行代理\n\nproxydata.name = "2";\n\nproxydata.likes.push("eat");\n\n// 打印data\n\nconsole.log(data); // \'set\' \'get\' { age: 18, likes: ["eat"], name: "2" }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n# 场景\n * 事件代理(委托)\n\n<ul id="ul">\n  <li>111</li>\n\n  <li>222</li>\n\n  <li>333</li>\n\n  <li>444</li>\n</ul>;\n\nwindow.onload = function () {\n  var oul = document.getelementbyid("ul");\n\n  // 通过事件冒泡，直接为父组件绑定事件\n\n  oul.onclick = function (ev) {\n    var ev = ev || window.event;\n\n    var target = ev.target || ev.srcelement;\n\n    if (target.nodename.tolowercase() == "li") {\n      alert(target.innerhtml);\n    }\n  };\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# 观察者模式\n# 简介\n一对多\n\n# 示例\n/*\n\n * @author: wangzhongjie\n\n * @date: 2021-08-12 11:14:50\n\n * @lasteditors: wangzhongjie\n\n * @lastedittime: 2021-08-12 13:39:34\n\n * @description: 观察者模式\n\n * @email: uvdream@163.com\n\n */\n\nclass subject {\n  constructor() {\n    this.state = {};\n\n    this.observers = [];\n  }\n\n  getstate() {\n    return this.state;\n  }\n\n  setstate(state) {\n    this.state = state;\n\n    this.notify();\n  }\n\n  notify() {\n    this.observers.foreach((observer) => {\n      observer.update();\n    });\n  }\n\n  attach(observer) {\n    this.observers.push(observer);\n  }\n}\n\nclass observer {\n  constructor(name, subject) {\n    this.name = name;\n\n    this.subject = subject;\n\n    this.subject.attach(this);\n  }\n\n  update() {\n    console.log(`${this.name} update, state:${this.subject.getstate()}`);\n  }\n}\n\nconst s = new subject();\n\nconst o1 = new observer("o1", s);\n\nconst o2 = new observer("o2", s);\n\ns.setstate(1234);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n# 场景\n * vue2 defineproperty\n\nfunction update() {\n  console.log("更新啦");\n}\n\nconst newprototype = array.prototype;\n\nconst arrproto = object.create(newprototype);\n\n// 由于object.defineproperty不能监听数组，此处重写数组的方法\n\n// 此处只演示数组的push方法，其他方法的实现与此一致\n\narrproto.push = function () {\n  update();\n\n  newprototype.push.call(this, ...arguments);\n};\n\nfunction watcherfn(obj) {\n  // 如果是数组，重写obj的原型指向arrproto\n\n  if (array.isarray(obj)) {\n    obj.__proto__ = arrproto;\n  } else {\n    for (let k of object.keys(obj)) {\n      register(obj, k, obj[k]);\n    }\n  }\n}\n\nfunction register(obj, key, value) {\n  if (typeof value === "object") {\n    watcherfn(value);\n  } else {\n    object.defineproperty(obj, key, {\n      get() {\n        return value;\n      },\n\n      set(val) {\n        if (val !== value) {\n          update();\n\n          value = val;\n        }\n      },\n    });\n  }\n}\n\nconst obj = {\n  name: "h",\n\n  info: {\n    address: "bj",\n  },\n\n  likes: ["music"],\n};\n\nwatcherfn(obj);\n\nobj.name = "b";\n\nobj.info.address = "gz";\n\nobj.likes.push("sing");\n\nconsole.log(obj); // 更新啦 × 3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69',charsets:{cjk:!0}},{title:"nodejs",frontmatter:{},regularPath:"/nodejs/",relativePath:"nodejs/README.md",key:"v-16255698",path:"/nodejs/",lastUpdated:"4/1/2021, 7:00:04 AM",headersStr:null,content:"# nodejs",normalizedContent:"# nodejs",charsets:{}},{title:"lerna.json",frontmatter:{},regularPath:"/nodejs/lerna.html",relativePath:"nodejs/lerna.md",key:"v-6c6c42a2",path:"/nodejs/lerna.html",headers:[{level:2,title:"lerna add  [globs...]",slug:"lerna-add-globs",normalizedTitle:"lerna add  [globs...]",charIndex:null},{level:2,title:"lerna bootstrap",slug:"lerna-bootstrap",normalizedTitle:"lerna bootstrap",charIndex:246},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:265},{level:2,title:"lerna changed",slug:"lerna-changed",normalizedTitle:"lerna changed",charIndex:1134},{level:2,title:"lerna clean",slug:"lerna-clean",normalizedTitle:"lerna clean",charIndex:1189},{level:2,title:"lerna create",slug:"lerna-create",normalizedTitle:"lerna create",charIndex:1228},{level:2,title:"lerna diff [pkgName]",slug:"lerna-diff-pkgname",normalizedTitle:"lerna diff [pkgname]",charIndex:1251},{level:2,title:"lerna exec [cmd][args...]",slug:"lerna-exec-cmd-args",normalizedTitle:"lerna exec [cmd][args...]",charIndex:1319},{level:2,title:"lerna info",slug:"lerna-info",normalizedTitle:"lerna info",charIndex:1365},{level:2,title:"lerna init",slug:"lerna-init",normalizedTitle:"lerna init",charIndex:1378},{level:3,title:"参数",slug:"参数-2",normalizedTitle:"参数",charIndex:265},{level:2,title:"lerna link",slug:"lerna-link",normalizedTitle:"lerna link",charIndex:1485},{level:2,title:"lerna impot",slug:"lerna-impot",normalizedTitle:"lerna impot",charIndex:1511},{level:2,title:"lerna list",slug:"lerna-list",normalizedTitle:"lerna list",charIndex:1603},{level:2,title:"lerna publish [bump]",slug:"lerna-publish-bump",normalizedTitle:"lerna publish [bump]",charIndex:1637},{level:3,title:"参数",slug:"参数-3",normalizedTitle:"参数",charIndex:265},{level:2,title:"lerna run",slug:"lerna-run",normalizedTitle:"lerna run",charIndex:1891},{level:2,title:"lerna version",slug:"lerna-version",normalizedTitle:"lerna version",charIndex:null}],lastUpdated:"4/14/2021, 2:34:17 PM",headersStr:"lerna add  [globs...] lerna bootstrap 参数 lerna changed lerna clean lerna create lerna diff [pkgName] lerna exec [cmd][args...] lerna info lerna init 参数 lerna link lerna impot lerna list lerna publish [bump] 参数 lerna run lerna version",content:'# lerna.json\n>  * version , 当前库的版本\n * npmClient , 允许指定命令使用的 client， 默认是 npm， 可以设置成 yarn\n * command.publish.ignoreChanges ， 可以指定那些目录或者文件的变更不会被 publish\n * command.bootstrap.ignore ， 指定不受 bootstrap 命令影响的包\n * command.bootstrap.npmClientArgs ， 指定默认传给 lerna bootstrap 命令的参数\n * command.bootstrap.scope ， 指定那些包会受 lerna bootstrap 命令影响\n * packages ， 指定包所在的目录\n\n\n# 命令行\n# lerna add [globs...]\n> 添加一个包的版本为各个包的依赖\n\n\n$ lerna add <package>[@version] [--dev] [--exact]\n\n\n1\n# lerna bootstrap\n>  * 为每个包安装依赖\n * 链接相互依赖的库到具体的目录\n * 执行 npm run prepublish\n * 执行 npm run prepare\n\n\n# 参数\n# --hoist\n> 这个选项，会把共同依赖的库安装到根目录的 node_modules 下， 统一版本\n\n\n# --ignore\n> 忽略部分目录， 不进行安装依赖\n\n\nlerna bootstrap --ignore component-*\n\n\n1\n也可以在 lerna.json 中控制\n\n{\n  "version": "0.0.0",\n  "command": {\n    "bootstrap": {\n      "ignore": "component-*"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# --ignore-scripts\n> 不执行声明周期脚本命令， 比如 prepare\n\n\n# --registry \n> 指定 registry\n\n\n# --npm-client\n> 指定安装用的 npm client\n\n\nlerna bootstrap --npm-client=yarn\n\n\n1\n也可以在 lerna.json 中配置\n\n{\n  ...\n  "npmClient": "yarn"\n}\n\n\n1\n2\n3\n4\n# --use-workspace\n> 使用 yarn workspace\n\n\n# --no-ci\n> 默认调用 npm ci 替换 npm install , 使用选项修改设置\n\n\n# lerna changed\n> 显示自上次 relase tag 以来有修改的包， 选项通 list\n\n\n# lerna clean\n> 删除各个包下的 node_modules\n\n\n# lerna create\n> 新建包\n\n\n# lerna diff [pkgName]\n> 显示自上次 relase tag 以来有修改的包的差异， 执行 git diff\n\n\n# lerna exec [cmd][args...]\n> 在每个包目录下执行任意命令\n\n\n# lerna info\n# lerna init\n> 创建一个新的 lerna 库或者是更新 lerna 版本\n\n\n# 参数\n# --independent\n> 独立模式\n\n\n# --exeact\n> 统一模式,所有包保持版本号一致\n\n\n# lerna link\n> 链接互相引用的库\n\n\n# lerna impot\n> 导入指定 git 仓库的包作为 lerna 管理的包\n\n\nlerna import <path-to-external-repository>\n\n\n1\n# lerna list\n> 列举当前 lerna 库包含的包\n\n\n# lerna publish [bump]\n> 发布新的库版本\n\n\n# 参数\n# canary\n> 可以用来独立发布每个 commit，不打 tag\n\n\nlerna publish --canary\n\n\n1\n# --npm-client\n> 默认 npm\n\n\n# --npm-tag\n> 为发布的版本添加 dist-tag\n\n\n# --no-verify-access\n不进行用户发布的权限校验\n\n# --registry \n> 指定 registry\n\n\n# --yes\n用于 ci 自动输入 yes\n\n# lerna run',normalizedContent:'# lerna.json\n>  * version , 当前库的版本\n * npmclient , 允许指定命令使用的 client， 默认是 npm， 可以设置成 yarn\n * command.publish.ignorechanges ， 可以指定那些目录或者文件的变更不会被 publish\n * command.bootstrap.ignore ， 指定不受 bootstrap 命令影响的包\n * command.bootstrap.npmclientargs ， 指定默认传给 lerna bootstrap 命令的参数\n * command.bootstrap.scope ， 指定那些包会受 lerna bootstrap 命令影响\n * packages ， 指定包所在的目录\n\n\n# 命令行\n# lerna add [globs...]\n> 添加一个包的版本为各个包的依赖\n\n\n$ lerna add <package>[@version] [--dev] [--exact]\n\n\n1\n# lerna bootstrap\n>  * 为每个包安装依赖\n * 链接相互依赖的库到具体的目录\n * 执行 npm run prepublish\n * 执行 npm run prepare\n\n\n# 参数\n# --hoist\n> 这个选项，会把共同依赖的库安装到根目录的 node_modules 下， 统一版本\n\n\n# --ignore\n> 忽略部分目录， 不进行安装依赖\n\n\nlerna bootstrap --ignore component-*\n\n\n1\n也可以在 lerna.json 中控制\n\n{\n  "version": "0.0.0",\n  "command": {\n    "bootstrap": {\n      "ignore": "component-*"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# --ignore-scripts\n> 不执行声明周期脚本命令， 比如 prepare\n\n\n# --registry \n> 指定 registry\n\n\n# --npm-client\n> 指定安装用的 npm client\n\n\nlerna bootstrap --npm-client=yarn\n\n\n1\n也可以在 lerna.json 中配置\n\n{\n  ...\n  "npmclient": "yarn"\n}\n\n\n1\n2\n3\n4\n# --use-workspace\n> 使用 yarn workspace\n\n\n# --no-ci\n> 默认调用 npm ci 替换 npm install , 使用选项修改设置\n\n\n# lerna changed\n> 显示自上次 relase tag 以来有修改的包， 选项通 list\n\n\n# lerna clean\n> 删除各个包下的 node_modules\n\n\n# lerna create\n> 新建包\n\n\n# lerna diff [pkgname]\n> 显示自上次 relase tag 以来有修改的包的差异， 执行 git diff\n\n\n# lerna exec [cmd][args...]\n> 在每个包目录下执行任意命令\n\n\n# lerna info\n# lerna init\n> 创建一个新的 lerna 库或者是更新 lerna 版本\n\n\n# 参数\n# --independent\n> 独立模式\n\n\n# --exeact\n> 统一模式,所有包保持版本号一致\n\n\n# lerna link\n> 链接互相引用的库\n\n\n# lerna impot\n> 导入指定 git 仓库的包作为 lerna 管理的包\n\n\nlerna import <path-to-external-repository>\n\n\n1\n# lerna list\n> 列举当前 lerna 库包含的包\n\n\n# lerna publish [bump]\n> 发布新的库版本\n\n\n# 参数\n# canary\n> 可以用来独立发布每个 commit，不打 tag\n\n\nlerna publish --canary\n\n\n1\n# --npm-client\n> 默认 npm\n\n\n# --npm-tag\n> 为发布的版本添加 dist-tag\n\n\n# --no-verify-access\n不进行用户发布的权限校验\n\n# --registry \n> 指定 registry\n\n\n# --yes\n用于 ci 自动输入 yes\n\n# lerna run',charsets:{cjk:!0}},{title:"nrm",frontmatter:{},regularPath:"/nodejs/nrm.html",relativePath:"nodejs/nrm.md",key:"v-290093f5",path:"/nodejs/nrm.html",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:8},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:82},{level:3,title:"安装报错",slug:"安装报错",normalizedTitle:"安装报错",charIndex:110},{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:1167},{level:3,title:"镜像源列表",slug:"镜像源列表",normalizedTitle:"镜像源列表",charIndex:1174},{level:3,title:"使用指定镜像源",slug:"使用指定镜像源",normalizedTitle:"使用指定镜像源",charIndex:1459},{level:3,title:"添加镜像源地址",slug:"添加镜像源地址",normalizedTitle:"添加镜像源地址",charIndex:1486},{level:3,title:"删除镜像",slug:"删除镜像",normalizedTitle:"删除镜像",charIndex:1606},{level:3,title:"测试速度",slug:"测试速度",normalizedTitle:"测试速度",charIndex:1636}],lastUpdated:"12/30/2021, 3:11:33 AM",headersStr:"介绍 安装 安装报错 常用命令 镜像源列表 使用指定镜像源 添加镜像源地址 删除镜像 测试速度",content:"# nrm\n# 介绍\nnrm(npm registry manager)是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm源间切换\n\n# 安装\nnpm install -g nrm\n\n\n1\n# 安装报错\ninternal/validators.js:124\n    throw new ERR_INVALID_ARG_TYPE(name, 'string', value);\n    ^\n\n[TypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string. Received undefined\n  at validateString (internal/validators.js:124:11)\n  at Object.join (path.js:375:7)\n  at Object.<anonymous> (D:\\nvm\\v14.15.4\\node_modules\\nrm\\cli.js:17:20)\n  at Module._compile (internal/modules/cjs/loader.js:1063:30)\n  at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n  at Module.load (internal/modules/cjs/loader.js:928:32)\n  at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n  at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n  at internal/main/run_main_module.js:17:47\n] {\n  code: 'ERR_INVALID_ARG_TYPE'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n>  1. 找到D:\\nvm\\v14.15.4\\node_modules\\nrm\\cli.js这个文件\n 2. 删除17行const NRMRC = path.join(process.env.HOME, '.nrmrc');\n 3. 替换17行const NRMRC = path.join(process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'], '.nrmrc');\n\n\n# 常用命令\n# 镜像源列表\nnrm ls\n* npm -----  https://registry.npmjs.org/\n  yarn ----- https://registry.yarnpkg.com\n  cnpm ----  http://r.cnpmjs.org/\n  taobao --  https://registry.npm.taobao.org/\n  nj ------  https://registry.nodejitsu.com/\n  skimdb -- https://skimdb.npmjs.com/registry\n\n\n1\n2\n3\n4\n5\n6\n7\n# 使用指定镜像源\nnrm use cnpm\n\n\n1\n# 添加镜像源地址\nnrm add <registry> <url>\n\n\n1\n> registry为源名,url为镜像源地址\n\n\nnrm add registry http://registry.npm.frp.trmap.cn/\n\n\n1\n# 删除镜像\nnrm del <registry>\n\n\n1\n# 测试速度\nnrm test\n* npm ---- 631ms\n  yarn --- 805ms\n  cnpm --- 1170ms\n  taobao - 130ms\n  nj ----- Fetch Error\n  npmMirror  1487ms\n  edunpm - Fetch Error\n\n\n1\n2\n3\n4\n5\n6\n7\n8",normalizedContent:"# nrm\n# 介绍\nnrm(npm registry manager)是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm源间切换\n\n# 安装\nnpm install -g nrm\n\n\n1\n# 安装报错\ninternal/validators.js:124\n    throw new err_invalid_arg_type(name, 'string', value);\n    ^\n\n[typeerror [err_invalid_arg_type]: the \"path\" argument must be of type string. received undefined\n  at validatestring (internal/validators.js:124:11)\n  at object.join (path.js:375:7)\n  at object.<anonymous> (d:\\nvm\\v14.15.4\\node_modules\\nrm\\cli.js:17:20)\n  at module._compile (internal/modules/cjs/loader.js:1063:30)\n  at object.module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n  at module.load (internal/modules/cjs/loader.js:928:32)\n  at function.module._load (internal/modules/cjs/loader.js:769:14)\n  at function.executeuserentrypoint [as runmain] (internal/modules/run_main.js:72:12)\n  at internal/main/run_main_module.js:17:47\n] {\n  code: 'err_invalid_arg_type'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n>  1. 找到d:\\nvm\\v14.15.4\\node_modules\\nrm\\cli.js这个文件\n 2. 删除17行const nrmrc = path.join(process.env.home, '.nrmrc');\n 3. 替换17行const nrmrc = path.join(process.env[(process.platform == 'win32') ? 'userprofile' : 'home'], '.nrmrc');\n\n\n# 常用命令\n# 镜像源列表\nnrm ls\n* npm -----  https://registry.npmjs.org/\n  yarn ----- https://registry.yarnpkg.com\n  cnpm ----  http://r.cnpmjs.org/\n  taobao --  https://registry.npm.taobao.org/\n  nj ------  https://registry.nodejitsu.com/\n  skimdb -- https://skimdb.npmjs.com/registry\n\n\n1\n2\n3\n4\n5\n6\n7\n# 使用指定镜像源\nnrm use cnpm\n\n\n1\n# 添加镜像源地址\nnrm add <registry> <url>\n\n\n1\n> registry为源名,url为镜像源地址\n\n\nnrm add registry http://registry.npm.frp.trmap.cn/\n\n\n1\n# 删除镜像\nnrm del <registry>\n\n\n1\n# 测试速度\nnrm test\n* npm ---- 631ms\n  yarn --- 805ms\n  cnpm --- 1170ms\n  taobao - 130ms\n  nj ----- fetch error\n  npmmirror  1487ms\n  edunpm - fetch error\n\n\n1\n2\n3\n4\n5\n6\n7\n8",charsets:{cjk:!0}},{title:"package参数解析",frontmatter:{},regularPath:"/nodejs/package.html",relativePath:"nodejs/package.md",key:"v-7f67f28a",path:"/nodejs/package.html",headers:[{level:2,title:"name",slug:"name",normalizedTitle:"name",charIndex:22},{level:2,title:"description",slug:"description",normalizedTitle:"description",charIndex:81},{level:2,title:"keywords",slug:"keywords",normalizedTitle:"keywords",charIndex:156},{level:2,title:"homepage",slug:"homepage",normalizedTitle:"homepage",charIndex:253},{level:2,title:"bugs",slug:"bugs",normalizedTitle:"bugs",charIndex:337},{level:2,title:"license",slug:"license",normalizedTitle:"license",charIndex:489},{level:2,title:"files",slug:"files",normalizedTitle:"files",charIndex:567},{level:2,title:"main",slug:"main",normalizedTitle:"main",charIndex:713},{level:2,title:"bin",slug:"bin",normalizedTitle:"bin",charIndex:904},{level:2,title:"man",slug:"man",normalizedTitle:"man",charIndex:1073},{level:2,title:"directories",slug:"directories",normalizedTitle:"directories",charIndex:1231},{level:3,title:"directories.lib",slug:"directories-lib",normalizedTitle:"directories.lib",charIndex:1403},{level:3,title:"directories.bin",slug:"directories-bin",normalizedTitle:"directories.bin",charIndex:1472},{level:3,title:"directories.man",slug:"directories-man",normalizedTitle:"directories.man",charIndex:1571},{level:3,title:"directories.doc",slug:"directories-doc",normalizedTitle:"directories.doc",charIndex:1626},{level:3,title:"directories.example",slug:"directories-example",normalizedTitle:"directories.example",charIndex:1698},{level:2,title:"repository",slug:"repository",normalizedTitle:"repository",charIndex:1720},{level:2,title:"scripts",slug:"scripts",normalizedTitle:"scripts",charIndex:1874},{level:2,title:"config",slug:"config",normalizedTitle:"config",charIndex:2022},{level:2,title:"dependencies",slug:"dependencies",normalizedTitle:"dependencies",charIndex:2094},{level:2,title:"devDependencies",slug:"devdependencies",normalizedTitle:"devdependencies",charIndex:2223},{level:2,title:"peerDependencies",slug:"peerdependencies",normalizedTitle:"peerdependencies",charIndex:2344},{level:2,title:"bundledDependencies",slug:"bundleddependencies",normalizedTitle:"bundleddependencies",charIndex:2524},{level:2,title:"optionalDependencies",slug:"optionaldependencies",normalizedTitle:"optionaldependencies",charIndex:2569},{level:2,title:"engines",slug:"engines",normalizedTitle:"engines",charIndex:2737},{level:2,title:"engineStrict",slug:"enginestrict",normalizedTitle:"enginestrict",charIndex:2836},{level:2,title:"os",slug:"os",normalizedTitle:"os",charIndex:1723},{level:2,title:"cpu",slug:"cpu",normalizedTitle:"cpu",charIndex:2936},{level:2,title:"private",slug:"private",normalizedTitle:"private",charIndex:3053},{level:2,title:"publishConfig",slug:"publishconfig",normalizedTitle:"publishconfig",charIndex:3125}],lastUpdated:"4/30/2021, 9:49:42 AM",headersStr:"name description keywords homepage bugs license files main bin man directories directories.lib directories.bin directories.man directories.doc directories.example repository scripts config dependencies devDependencies peerDependencies bundledDependencies optionalDependencies engines engineStrict os cpu private publishConfig",content:'# package参数解析\n完整参数\n\n# name\n * 说明\n\n项目名字\n\n * 示例\n\n{\n "name": "uvdream",\n}\n\n\n1\n2\n3\n# description\n * 说明\n\n项目描述\n\n * 示例\n\n{\n "description": "一个简单的项目示例",\n}\n\n\n1\n2\n3\n# keywords\n * 说明\n\n项目关键字\n\n * 示例\n\n{\n"keywords": [\n    "vue",\n    "components"\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n# homepage\n * 说明\n\n项目主页地址\n\n * 示例\n\n{\n  "homepage": "http://www.uvdream.cn",\n}\n\n\n1\n2\n3\n# bugs\n * 说明\n\n项目的问题跟踪器的URL和/或应向其报告问题的电子邮件地址。 这些对于遇到您的包裹问题的人很有帮助。\n\n * 示例\n\n{\n"bugs": {\n    "url": "https://github.com/xxx/xxxx/issues"\n  },\n}\n\n\n1\n2\n3\n4\n5\n# license\n * 说明\n\n开源协议,让别人知道使用你的库有什么限制条件\n\n * 示例\n\n{\n "license": "MIT"\n}\n\n\n1\n2\n3\n# files\n * 说明\n\n可选的“files”字段是一组文件模式，它描述了当包作为依赖项安装时要包含的条目。如果省略了文件数组，那么除了自动排除的文件之外的所有文件都将包含在发布中。如果你在数组中命名了一个文件夹，那么它也会包含该文件夹中的文件(除非它们会被本节中的另一条规则忽略)。\n\n# main\n * 说明\n\n文件主入口\n\n * 场景\n\n平时开发中基本用不到，只有我们在引用或者开发某个依赖包的时候才派上用场。不使用main属性的话我们可能需要这样写引用：require("some-module/dist/app.js")，如果我们在main属性中指定了dist/app.js的话，我们就可以直接引用依赖就可以了：require("some-module")\n\n# bin\n * 说明\n\n许多包都有一个或多个可执行文件,它们希望将其安装到PATH中.NPM让这变得非常容易(事实上,它使用这个特性来安装“NPM”可执行文件).\n\n * 示例\n\n{\n  "bin": {\n      "myapp": "./cli.js",\n        .....\n      }\n}\n\n\n1\n2\n3\n4\n5\n6\n# man\n * 说明\n\n制定一个或通过数组制定一些文件来让linux下的man命令查找文档地址。 如果只有一个文件被指定的话，安装后直接使用man+模块名称，而不管man指定的文件的实际名称\n\n * 示例\n\n{\n"man" : [ "./man/foo.1", "./man/bar.1" ]\n}\n\n\n1\n2\n3\n# directories\n * 说明\n\nCommonJs通过directories来制定一些方法来描述模块的结构\n\n * 示例\n\n{\n"directories": {\n"bin": "./bin",\n"doc": "./doc",\n"lib": "./lib",\n"man": "./man"\n },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# directories.lib\n告诉用户模块中lib目录在哪，这个配置目前没有任何作用，但是对使用模块的人来说是一个很有用的信息。\n\n# directories.bin\n如果你在这里指定了bin目录，这个配置下面的文件会被加入到bin路径下，如果你已经在package.json中配置了bin目录，那么这里的配置将不起任何作用。\n\n# directories.man\n指定一个目录，目录里边都是man文件，这是一种配置man文件的语法糖。\n\n# directories.doc\n在这个目录里边放一些markdown文件，可能最终有一天它们会被友好的展现出来（应该是在npm的网站上）\n\n# directories.example\n# repository\n * 说明\n\n指定一个代码存放地址，对想要为你的项目贡献代码的人有帮助\n\n * 示例\n\n{\n "repository": {\n    "type": "git",\n    "url": "git@github.com:xx/xxx.git"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n# scripts\n * 说明\n\n“scripts”属性是一个字典，包含在包生命周期中不同时间运行的脚本命令。关键是生命周期事件，值是此时运行的命令\n\n * 示例\n\n{\n"scripts": {\n    "bootstrap": "yarn || npm i"\n }\n}\n\n\n1\n2\n3\n4\n5\n# config\n * 说明\n\n“config”对象可用于设置包脚本中使用的配置参数，这些配置参数跨升级持久存在。例如，如果一个包有以下内容\n\n# dependencies\n * 说明\n\n模块中所列举的插件属于生产环境的依赖（程序正常运行需要加载的依赖）\n\n * 场景\n\n例如一些UI框架或者一些工具库,开发时候使用,打包也需要使用\n\n * 来源\n\nnpm install xxx -save\n\n\n1\n# devDependencies\n * 说明\n\n该模块中所列举的插件属于开发环境的依赖\n\n * 场景\n\n例如开发项目时候使用的webpack,而在打包环境不需要使用\n\n * 来源\n\nnpm install xxx-save-dev\n\n\n1\n# peerDependencies\n * 说明\n\n如果你安装我，那么你最好也安装X,Y和Z.\n\n * 场景\n\n> 通常是在插件开发的场景下，你的插件需要某些依赖的支持，但是你又没必要去安装，因为插件的宿主会去安装这些依赖，你就可以用peerDependencies去声明一下需要依赖的插件和版本，如果出问题npm就会有警告来提醒使用者去解决版本冲突问题\n\n\n# bundledDependencies\n * 说明\n\n发布的时候会被一起打包的模块\n\n# optionalDependencies\n * 说明\n\n如果一个依赖模块可以被使用， 同时你也希望在该模块找不到或无法获取时npm继续运行，你可以把这个模块依赖放到optionalDependencies配置中。这个配置的写法和dependencies的写法一样，不同的是这里边写的模块安装失败不会导致npm install失败\n\n# engines\n * 说明\n\n你可以指定项目运行的node版本范围\n\n * 示例\n\n{\n"engines" : { "node" : ">=0.10.3 <0.12" } \n}\n\n\n1\n2\n3\n# engineStrict\n废弃\n\n# os\n * 说明\n\n可以指定你的模块只能在哪个操作系统上跑\n\n * 示例\n\n{\n"os" : [ "darwin", "linux" ]\n}\n\n\n1\n2\n3\n# cpu\n * 说明\n\n限制模块只能在某某cpu架构下运行\n\n * 示例\n\n{\n"cpu" : [ "x64", "ia32" ]\n}\n\n\n1\n2\n3\n也可以黑名单\n\n"cpu" : [ "!arm", "!mips" ]\n\n\n1\n# private\n * 说明\n\n如果你在包中设置了"private": true。Json，那么NPM将拒绝发布它。,简言而之就是私有的包\n\n# publishConfig\n * 说明\n\n这是一组将在发布时使用的配置值。如果您想要设置标记、注册表或访问权限，它就特别方便，这样您就可以确保给定的包不会被标记为“latest”，不会发布到全局公共注册表中，或者默认情况下一个范围内的模块是私有的。',normalizedContent:'# package参数解析\n完整参数\n\n# name\n * 说明\n\n项目名字\n\n * 示例\n\n{\n "name": "uvdream",\n}\n\n\n1\n2\n3\n# description\n * 说明\n\n项目描述\n\n * 示例\n\n{\n "description": "一个简单的项目示例",\n}\n\n\n1\n2\n3\n# keywords\n * 说明\n\n项目关键字\n\n * 示例\n\n{\n"keywords": [\n    "vue",\n    "components"\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n# homepage\n * 说明\n\n项目主页地址\n\n * 示例\n\n{\n  "homepage": "http://www.uvdream.cn",\n}\n\n\n1\n2\n3\n# bugs\n * 说明\n\n项目的问题跟踪器的url和/或应向其报告问题的电子邮件地址。 这些对于遇到您的包裹问题的人很有帮助。\n\n * 示例\n\n{\n"bugs": {\n    "url": "https://github.com/xxx/xxxx/issues"\n  },\n}\n\n\n1\n2\n3\n4\n5\n# license\n * 说明\n\n开源协议,让别人知道使用你的库有什么限制条件\n\n * 示例\n\n{\n "license": "mit"\n}\n\n\n1\n2\n3\n# files\n * 说明\n\n可选的“files”字段是一组文件模式，它描述了当包作为依赖项安装时要包含的条目。如果省略了文件数组，那么除了自动排除的文件之外的所有文件都将包含在发布中。如果你在数组中命名了一个文件夹，那么它也会包含该文件夹中的文件(除非它们会被本节中的另一条规则忽略)。\n\n# main\n * 说明\n\n文件主入口\n\n * 场景\n\n平时开发中基本用不到，只有我们在引用或者开发某个依赖包的时候才派上用场。不使用main属性的话我们可能需要这样写引用：require("some-module/dist/app.js")，如果我们在main属性中指定了dist/app.js的话，我们就可以直接引用依赖就可以了：require("some-module")\n\n# bin\n * 说明\n\n许多包都有一个或多个可执行文件,它们希望将其安装到path中.npm让这变得非常容易(事实上,它使用这个特性来安装“npm”可执行文件).\n\n * 示例\n\n{\n  "bin": {\n      "myapp": "./cli.js",\n        .....\n      }\n}\n\n\n1\n2\n3\n4\n5\n6\n# man\n * 说明\n\n制定一个或通过数组制定一些文件来让linux下的man命令查找文档地址。 如果只有一个文件被指定的话，安装后直接使用man+模块名称，而不管man指定的文件的实际名称\n\n * 示例\n\n{\n"man" : [ "./man/foo.1", "./man/bar.1" ]\n}\n\n\n1\n2\n3\n# directories\n * 说明\n\ncommonjs通过directories来制定一些方法来描述模块的结构\n\n * 示例\n\n{\n"directories": {\n"bin": "./bin",\n"doc": "./doc",\n"lib": "./lib",\n"man": "./man"\n },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# directories.lib\n告诉用户模块中lib目录在哪，这个配置目前没有任何作用，但是对使用模块的人来说是一个很有用的信息。\n\n# directories.bin\n如果你在这里指定了bin目录，这个配置下面的文件会被加入到bin路径下，如果你已经在package.json中配置了bin目录，那么这里的配置将不起任何作用。\n\n# directories.man\n指定一个目录，目录里边都是man文件，这是一种配置man文件的语法糖。\n\n# directories.doc\n在这个目录里边放一些markdown文件，可能最终有一天它们会被友好的展现出来（应该是在npm的网站上）\n\n# directories.example\n# repository\n * 说明\n\n指定一个代码存放地址，对想要为你的项目贡献代码的人有帮助\n\n * 示例\n\n{\n "repository": {\n    "type": "git",\n    "url": "git@github.com:xx/xxx.git"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n# scripts\n * 说明\n\n“scripts”属性是一个字典，包含在包生命周期中不同时间运行的脚本命令。关键是生命周期事件，值是此时运行的命令\n\n * 示例\n\n{\n"scripts": {\n    "bootstrap": "yarn || npm i"\n }\n}\n\n\n1\n2\n3\n4\n5\n# config\n * 说明\n\n“config”对象可用于设置包脚本中使用的配置参数，这些配置参数跨升级持久存在。例如，如果一个包有以下内容\n\n# dependencies\n * 说明\n\n模块中所列举的插件属于生产环境的依赖（程序正常运行需要加载的依赖）\n\n * 场景\n\n例如一些ui框架或者一些工具库,开发时候使用,打包也需要使用\n\n * 来源\n\nnpm install xxx -save\n\n\n1\n# devdependencies\n * 说明\n\n该模块中所列举的插件属于开发环境的依赖\n\n * 场景\n\n例如开发项目时候使用的webpack,而在打包环境不需要使用\n\n * 来源\n\nnpm install xxx-save-dev\n\n\n1\n# peerdependencies\n * 说明\n\n如果你安装我，那么你最好也安装x,y和z.\n\n * 场景\n\n> 通常是在插件开发的场景下，你的插件需要某些依赖的支持，但是你又没必要去安装，因为插件的宿主会去安装这些依赖，你就可以用peerdependencies去声明一下需要依赖的插件和版本，如果出问题npm就会有警告来提醒使用者去解决版本冲突问题\n\n\n# bundleddependencies\n * 说明\n\n发布的时候会被一起打包的模块\n\n# optionaldependencies\n * 说明\n\n如果一个依赖模块可以被使用， 同时你也希望在该模块找不到或无法获取时npm继续运行，你可以把这个模块依赖放到optionaldependencies配置中。这个配置的写法和dependencies的写法一样，不同的是这里边写的模块安装失败不会导致npm install失败\n\n# engines\n * 说明\n\n你可以指定项目运行的node版本范围\n\n * 示例\n\n{\n"engines" : { "node" : ">=0.10.3 <0.12" } \n}\n\n\n1\n2\n3\n# enginestrict\n废弃\n\n# os\n * 说明\n\n可以指定你的模块只能在哪个操作系统上跑\n\n * 示例\n\n{\n"os" : [ "darwin", "linux" ]\n}\n\n\n1\n2\n3\n# cpu\n * 说明\n\n限制模块只能在某某cpu架构下运行\n\n * 示例\n\n{\n"cpu" : [ "x64", "ia32" ]\n}\n\n\n1\n2\n3\n也可以黑名单\n\n"cpu" : [ "!arm", "!mips" ]\n\n\n1\n# private\n * 说明\n\n如果你在包中设置了"private": true。json，那么npm将拒绝发布它。,简言而之就是私有的包\n\n# publishconfig\n * 说明\n\n这是一组将在发布时使用的配置值。如果您想要设置标记、注册表或访问权限，它就特别方便，这样您就可以确保给定的包不会被标记为“latest”，不会发布到全局公共注册表中，或者默认情况下一个范围内的模块是私有的。',charsets:{cjk:!0}},{title:"React介绍",frontmatter:{},regularPath:"/react/",relativePath:"react/README.md",key:"v-7b7d06a8",path:"/react/",headers:[{level:2,title:"React特点",slug:"react特点",normalizedTitle:"react特点",charIndex:197}],lastUpdated:"6/14/2019, 7:37:55 AM",headersStr:"React特点",content:"# React介绍\nTIP\n\nReact 是一个用于构建用户界面的 JAVASCRIPT 库.\n\nReact主要用于构建UI，很多人认为 React 是 MVC 中的 V（视图）.\n\nReact 起源于 Facebook 的内部项目，用来架设 Instagram 的网站，并于 2013 年 5 月开源.\n\nReact 拥有较高的性能，代码逻辑非常简单，越来越多的人已开始关注和使用它.\n\n# React特点\n * 1.声明式设计 −React采用声明范式，可以轻松描述应用.\n   \n   \n * 2.高效 −React通过对DOM的模拟，最大限度地减少与DOM的交互.\n   \n   \n * 3.灵活 −React可以与已知的库或框架很好地配合.\n   \n   \n * 4.JSX − JSX 是 JavaScript 语法的扩展.React 开发不一定使用 JSX ，但我们建议使用它.\n   \n   \n * 5.组件 − 通过 React 构建组件，使得代码更加容易得到复用，能够很好的应用在大项目的开发中.\n   \n   \n * 6.单向响应的数据流 − React 实现了单向响应的数据流，从而减少了重复代码，这也是它为什么比传统数据绑定更简单.",normalizedContent:"# react介绍\ntip\n\nreact 是一个用于构建用户界面的 javascript 库.\n\nreact主要用于构建ui，很多人认为 react 是 mvc 中的 v（视图）.\n\nreact 起源于 facebook 的内部项目，用来架设 instagram 的网站，并于 2013 年 5 月开源.\n\nreact 拥有较高的性能，代码逻辑非常简单，越来越多的人已开始关注和使用它.\n\n# react特点\n * 1.声明式设计 −react采用声明范式，可以轻松描述应用.\n   \n   \n * 2.高效 −react通过对dom的模拟，最大限度地减少与dom的交互.\n   \n   \n * 3.灵活 −react可以与已知的库或框架很好地配合.\n   \n   \n * 4.jsx − jsx 是 javascript 语法的扩展.react 开发不一定使用 jsx ，但我们建议使用它.\n   \n   \n * 5.组件 − 通过 react 构建组件，使得代码更加容易得到复用，能够很好的应用在大项目的开发中.\n   \n   \n * 6.单向响应的数据流 − react 实现了单向响应的数据流，从而减少了重复代码，这也是它为什么比传统数据绑定更简单.",charsets:{cjk:!0}},{title:"生命周期",frontmatter:{},regularPath:"/react/life.html",relativePath:"react/life.md",key:"v-d6c1c4b2",path:"/react/life.html",headers:[{level:2,title:"利用生命周期优化性能",slug:"利用生命周期优化性能",normalizedTitle:"利用生命周期优化性能",charIndex:35},{level:2,title:"模拟接口平台",slug:"模拟接口平台",normalizedTitle:"模拟接口平台",charIndex:365}],lastUpdated:"7/16/2019, 8:31:37 AM",headersStr:"利用生命周期优化性能 模拟接口平台",content:"# 生命周期\nWARNING\n\n旧的\n\n\n\nTIP\n\n新的\n\n\n\n# 利用生命周期优化性能\n父组件修改子组件数据,手动添加这种,父组件数据更新,还没主动更新到子组件,这时子组件的render函数依旧和父组件数据一起更新 如何解决此类问题\n\nshouldComponentUpdate(nextProps,nextState){\n    if(nextProps.content!==this.props.content){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n在shouldComponentUpdate生命周期里面对比数据,如果数据相同则返回false,不相同则返回true更新数据,这样就解决了此类问题\n\n# 模拟接口平台\neasy-mock",normalizedContent:"# 生命周期\nwarning\n\n旧的\n\n\n\ntip\n\n新的\n\n\n\n# 利用生命周期优化性能\n父组件修改子组件数据,手动添加这种,父组件数据更新,还没主动更新到子组件,这时子组件的render函数依旧和父组件数据一起更新 如何解决此类问题\n\nshouldcomponentupdate(nextprops,nextstate){\n    if(nextprops.content!==this.props.content){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n在shouldcomponentupdate生命周期里面对比数据,如果数据相同则返回false,不相同则返回true更新数据,这样就解决了此类问题\n\n# 模拟接口平台\neasy-mock",charsets:{cjk:!0}},{title:"杂乱的小知识点",frontmatter:{},regularPath:"/react/other.html",relativePath:"react/other.md",key:"v-586bf713",path:"/react/other.html",headers:[{level:2,title:"动画",slug:"动画",normalizedTitle:"动画",charIndex:12}],lastUpdated:"7/16/2019, 8:31:37 AM",headersStr:"动画",content:"# 杂乱的小知识点\n# 动画\n<div className={this.state.isShow?'show':'hide'}>这是标题</div>\n\n\n1",normalizedContent:"# 杂乱的小知识点\n# 动画\n<div classname={this.state.isshow?'show':'hide'}>这是标题</div>\n\n\n1",charsets:{cjk:!0}},{title:"props",frontmatter:{},regularPath:"/react/props.html",relativePath:"react/props.md",key:"v-aa62f9da",path:"/react/props.html",headers:[{level:2,title:"验证 props",slug:"验证-props",normalizedTitle:"验证 props",charIndex:93},{level:2,title:"组合使用 props 和 state",slug:"组合使用-props-和-state",normalizedTitle:"组合使用 props 和 state",charIndex:1262},{level:2,title:"props 传递数据",slug:"props-传递数据",normalizedTitle:"props 传递数据",charIndex:2159},{level:2,title:"setState",slug:"setstate",normalizedTitle:"setstate",charIndex:1789},{level:2,title:"父子组件传值",slug:"父子组件传值",normalizedTitle:"父子组件传值",charIndex:6165}],lastUpdated:"6/12/2019, 6:54:13 AM",headersStr:"验证 props 组合使用 props 和 state props 传递数据 setState 父子组件传值",content:'# props\nTIP\n\nprops 是 React 中很重要的一个概念,使用 props 向 React 组件传递数据,React 组件从 props 中取出数据,然后返回视图\n\n# 验证 props\n数据类型验证\n\n * 1.JavaScript 基本数据类型,包括数组,布尔,函数,数字,对象,字符串\n\nReact.PropType.array;\n\nReact.PropType.bool;\n\nReact.PropType.func;\n\nReact.PropType.number;\n\nReact.PropType.object;\n\nReact.PropType.string;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 2.可以被渲染为子节点的对象,包括数组,字符串,ReactElement(指 jsx 闭合标签)或数组\n\nReact.PropType.node;\n\n\n1\n * 3.ReactElement\n\nReact.PropType.element;\n\n\n1\n * 4.指定类的实例\n\nReact.PropType.instanceOf(Message);\n\n\n1\n * 5.只接受指定的值\n\nReact.PropType.oneOf(["News","Photos])\n\n\n1\n * 6.多个对象类型中的一个\n\nReact.PropType.oneOfType([\n  React.PropType.string,\n  React.PropType.number,\n  React.PropType.instanceOf(Message)\n]);\n\n\n1\n2\n3\n4\n5\n * 7.指定类型组成的数组\n\nReact.PropType.arrayOf(React.PropType.number);\n\n\n1\n * 8.指定类型的属性构成的对象\n\nReact.PropType.objectOf(React.PropType.number);\n\n\n1\n * 9.符合指定格式的对象\n\nReact.PropType.shape(\n    color:React.PropType.string,\n    fontSize:React.PropType.number\n)\n\n\n1\n2\n3\n4\n * 10.任意类型加上 isRequire 使其不可为空\n\nReact.PropType.func.isRequired;\n\n\n1\n * 11.自定义验证器,如果验证失败了需要返回一个 Error 对象.不要直接使用 conosle.error 或抛异常,因为这样的话 oneOfType 会失效\n\nfunction(props,propName,componentName){\n    if(!/matchme/.test(props[propName])){\n        return new Error("Validation failed!")\n    }\n}\n\n\n1\n2\n3\n4\n5\n# 组合使用 props 和 state\n使用 Counter 组件更新 state 的 value,然后将更新的 state.value 通过 props 传递给 Content 组件\n\nimport React, { Component } from "react";\nimport PropTypes from "prop-types";\n\nfunction Content(props) {\n  return <p>Content组件的props:value:{props.value}</p>;\n}\nContent.propTypes = {\n  value: PropTypes.number.isRequired\n};\n\nexport default class Counter extends Component {\n  constructor() {\n    super();\n    this.state = { value: 0 };\n  }\n  render() {\n    return (\n      <div>\n        <button\n          onClick={() =>\n            this.setState({\n              value: this.state.value + 1\n            })\n          }\n        >\n          点击\n        </button>\n        Counter组件的内部状态:\n        <pre>{JSON.stringify(this.state, null, 2)}</pre>\n        <Content value={this.state.value} />\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# props 传递数据\nMessageList=>Message=>Button\n\nimport React from "react";\nimport PropTypes from "prop-types";\n// 按钮\nfunction Button(props) {\n  return <button style={{ background: props.color }}>{props.children}</button>;\n}\nButton.propType = {\n  color: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired\n};\n\n// 消息\nfunction Message(props) {\n  return (\n    <li>\n      {props.text}\n      <Button color={props.color}>删除</Button>\n    </li>\n  );\n}\nMessage.propType = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n// 列表\nfunction MessageList() {\n  const color = "red";\n  const messages = [{ text: "Hello" }, { text: "React" }];\n  const children = messages.map((message, key) => (\n    <Message key={key} text={message.text} color={color} />\n  ));\n  return (\n    <div>\n      <p>通过props将color逐层传递给里面的Button组件</p>\n      <ul>{children}</ul>\n    </div>\n  );\n}\nexport default MessageList;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n通过 getChildContext()方法将 color 放在 context 中,并声明了 childContxtTypes,如果不声明 chilContextTypes,将无法在组件中使用 getChildContext()方法\n\nTIP\n\n1.state 内部状态或者局部状态\n\n2.Props 与 context 则用于组件之间传递数据,使用 props 传递数据简单清晰,但是跨级传递非常麻烦,使用 context 可以跨级传递数据,但是降低组件的复用性,因为这些组件依赖上下文,所以近况使用 context 传递登陆的状态,颜色主题等全局数据\n\n# setState\n\n\nimport React, { Component, Fragment } from "react";\nimport "./style.css";\nimport XiaojiejieItem from "./XiaojiejieItem";\nexport default class Xiaojiejie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputVal: "",\n      list: ["基础按摩", "精油推背"]\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {/* jsx注释 */}\n        {/* htmlFor和for冲突 */}\n        <label htmlFor="add">增加服务:</label>\n        <input\n          id="add"\n          value={this.state.inputVal}\n          onChange={this.inputChange.bind(this)}\n          className="input"\n        />\n        <button onClick={this.addList.bind(this)}>增加服务</button>\n        <ul>\n          {/* html解析\n                dangerouslySetInnerHTML={{__html:item}} */}\n          {this.state.list.map((item, index) => {\n            return (\n              <li\n                key={index + item}\n                onClick={this.deleteItem.bind(this, index)}\n                dangerouslySetInnerHTML={{ __html: item }}\n              >\n                {/* {item} */}\n              </li>\n            );\n          })}\n          {this.state.list.map((item, index) => {\n            return <XiaojiejieItem key={index} text={item} />;\n          })}\n        </ul>\n      </Fragment>\n    );\n  }\n\n  //输入框改变\n  inputChange(e) {\n    console.log(e.target.value);\n    //this.state.inputVal=e.target.value\n    this.setState({\n      inputVal: e.target.value\n    });\n  }\n\n  //新增列表\n  addList() {\n    this.setState({\n      list: [...this.state.list, this.state.inputVal],\n      inputVal: ""\n    });\n  }\n  //删除列表项\n  deleteItem(index) {\n    console.log(index);\n    let list = this.state.list;\n    list.splice(index, 1);\n    //错误写法,严禁操作state里面的值,影响性能\n    //this.state.list.splice(index,1);\n    this.setState({\n      list: list\n    });\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\nTIP\n\nsetSate是一个异步方法\n\nrender(){\n  return(\n  <ul ref={(ul)=>{this.ul=ul}}>\n  ....\n  </ul>\n  )\n}\naddList() {\n      // setState异步方法\n        this.setState({\n            list: [...this.state.list, this.state.inputVal],\n            inputVal:\'\'\n        })\n        console.log(this.ul.querySelectorAll(\'li\').length)\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n这样打印的话长度始终少了一个,因为console.log已经执行了,setState才执行完,故长度少1\n\n> 解决办法\n\n\naddList() {\n      // setState异步方法\n        this.setState({\n            list: [...this.state.list, this.state.inputVal],\n            inputVal:\'\'\n        },()=>{\n        console.log(\'长度\',this.ul.querySelectorAll(\'li\').length)\n        })\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 父子组件传值\n父组件\n\n{\n  this.state.list.map((item, index) => {\n    return (\n      <XiaojiejieItem\n        key={index + item}\n        // 传值\n        content={item}\n        index={index}\n        // 传递方法\n        deleteItem={this.deleteItem.bind(this)}\n      />\n    );\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n子组件\n\nimport React, { Component } from "react";\nclass XiaojiejieItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  render() {\n    return <li onClick={this.handleClick}>{this.props.content}</li>;\n  }\n  //   子组件调用父组件方法\n  handleClick() {\n    console.log(this.props.index);\n    this.props.deleteItem(this.props.index);\n  }\n}\n\nexport default XiaojiejieItem;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17',normalizedContent:'# props\ntip\n\nprops 是 react 中很重要的一个概念,使用 props 向 react 组件传递数据,react 组件从 props 中取出数据,然后返回视图\n\n# 验证 props\n数据类型验证\n\n * 1.javascript 基本数据类型,包括数组,布尔,函数,数字,对象,字符串\n\nreact.proptype.array;\n\nreact.proptype.bool;\n\nreact.proptype.func;\n\nreact.proptype.number;\n\nreact.proptype.object;\n\nreact.proptype.string;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 2.可以被渲染为子节点的对象,包括数组,字符串,reactelement(指 jsx 闭合标签)或数组\n\nreact.proptype.node;\n\n\n1\n * 3.reactelement\n\nreact.proptype.element;\n\n\n1\n * 4.指定类的实例\n\nreact.proptype.instanceof(message);\n\n\n1\n * 5.只接受指定的值\n\nreact.proptype.oneof(["news","photos])\n\n\n1\n * 6.多个对象类型中的一个\n\nreact.proptype.oneoftype([\n  react.proptype.string,\n  react.proptype.number,\n  react.proptype.instanceof(message)\n]);\n\n\n1\n2\n3\n4\n5\n * 7.指定类型组成的数组\n\nreact.proptype.arrayof(react.proptype.number);\n\n\n1\n * 8.指定类型的属性构成的对象\n\nreact.proptype.objectof(react.proptype.number);\n\n\n1\n * 9.符合指定格式的对象\n\nreact.proptype.shape(\n    color:react.proptype.string,\n    fontsize:react.proptype.number\n)\n\n\n1\n2\n3\n4\n * 10.任意类型加上 isrequire 使其不可为空\n\nreact.proptype.func.isrequired;\n\n\n1\n * 11.自定义验证器,如果验证失败了需要返回一个 error 对象.不要直接使用 conosle.error 或抛异常,因为这样的话 oneoftype 会失效\n\nfunction(props,propname,componentname){\n    if(!/matchme/.test(props[propname])){\n        return new error("validation failed!")\n    }\n}\n\n\n1\n2\n3\n4\n5\n# 组合使用 props 和 state\n使用 counter 组件更新 state 的 value,然后将更新的 state.value 通过 props 传递给 content 组件\n\nimport react, { component } from "react";\nimport proptypes from "prop-types";\n\nfunction content(props) {\n  return <p>content组件的props:value:{props.value}</p>;\n}\ncontent.proptypes = {\n  value: proptypes.number.isrequired\n};\n\nexport default class counter extends component {\n  constructor() {\n    super();\n    this.state = { value: 0 };\n  }\n  render() {\n    return (\n      <div>\n        <button\n          onclick={() =>\n            this.setstate({\n              value: this.state.value + 1\n            })\n          }\n        >\n          点击\n        </button>\n        counter组件的内部状态:\n        <pre>{json.stringify(this.state, null, 2)}</pre>\n        <content value={this.state.value} />\n      </div>\n    );\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# props 传递数据\nmessagelist=>message=>button\n\nimport react from "react";\nimport proptypes from "prop-types";\n// 按钮\nfunction button(props) {\n  return <button style={{ background: props.color }}>{props.children}</button>;\n}\nbutton.proptype = {\n  color: proptypes.string.isrequired,\n  children: proptypes.string.isrequired\n};\n\n// 消息\nfunction message(props) {\n  return (\n    <li>\n      {props.text}\n      <button color={props.color}>删除</button>\n    </li>\n  );\n}\nmessage.proptype = {\n  text: proptypes.string.isrequired,\n  color: proptypes.string.isrequired\n};\n// 列表\nfunction messagelist() {\n  const color = "red";\n  const messages = [{ text: "hello" }, { text: "react" }];\n  const children = messages.map((message, key) => (\n    <message key={key} text={message.text} color={color} />\n  ));\n  return (\n    <div>\n      <p>通过props将color逐层传递给里面的button组件</p>\n      <ul>{children}</ul>\n    </div>\n  );\n}\nexport default messagelist;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n通过 getchildcontext()方法将 color 放在 context 中,并声明了 childcontxttypes,如果不声明 chilcontexttypes,将无法在组件中使用 getchildcontext()方法\n\ntip\n\n1.state 内部状态或者局部状态\n\n2.props 与 context 则用于组件之间传递数据,使用 props 传递数据简单清晰,但是跨级传递非常麻烦,使用 context 可以跨级传递数据,但是降低组件的复用性,因为这些组件依赖上下文,所以近况使用 context 传递登陆的状态,颜色主题等全局数据\n\n# setstate\n\n\nimport react, { component, fragment } from "react";\nimport "./style.css";\nimport xiaojiejieitem from "./xiaojiejieitem";\nexport default class xiaojiejie extends component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputval: "",\n      list: ["基础按摩", "精油推背"]\n    };\n  }\n\n  render() {\n    return (\n      <fragment>\n        {/* jsx注释 */}\n        {/* htmlfor和for冲突 */}\n        <label htmlfor="add">增加服务:</label>\n        <input\n          id="add"\n          value={this.state.inputval}\n          onchange={this.inputchange.bind(this)}\n          classname="input"\n        />\n        <button onclick={this.addlist.bind(this)}>增加服务</button>\n        <ul>\n          {/* html解析\n                dangerouslysetinnerhtml={{__html:item}} */}\n          {this.state.list.map((item, index) => {\n            return (\n              <li\n                key={index + item}\n                onclick={this.deleteitem.bind(this, index)}\n                dangerouslysetinnerhtml={{ __html: item }}\n              >\n                {/* {item} */}\n              </li>\n            );\n          })}\n          {this.state.list.map((item, index) => {\n            return <xiaojiejieitem key={index} text={item} />;\n          })}\n        </ul>\n      </fragment>\n    );\n  }\n\n  //输入框改变\n  inputchange(e) {\n    console.log(e.target.value);\n    //this.state.inputval=e.target.value\n    this.setstate({\n      inputval: e.target.value\n    });\n  }\n\n  //新增列表\n  addlist() {\n    this.setstate({\n      list: [...this.state.list, this.state.inputval],\n      inputval: ""\n    });\n  }\n  //删除列表项\n  deleteitem(index) {\n    console.log(index);\n    let list = this.state.list;\n    list.splice(index, 1);\n    //错误写法,严禁操作state里面的值,影响性能\n    //this.state.list.splice(index,1);\n    this.setstate({\n      list: list\n    });\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\ntip\n\nsetsate是一个异步方法\n\nrender(){\n  return(\n  <ul ref={(ul)=>{this.ul=ul}}>\n  ....\n  </ul>\n  )\n}\naddlist() {\n      // setstate异步方法\n        this.setstate({\n            list: [...this.state.list, this.state.inputval],\n            inputval:\'\'\n        })\n        console.log(this.ul.queryselectorall(\'li\').length)\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n这样打印的话长度始终少了一个,因为console.log已经执行了,setstate才执行完,故长度少1\n\n> 解决办法\n\n\naddlist() {\n      // setstate异步方法\n        this.setstate({\n            list: [...this.state.list, this.state.inputval],\n            inputval:\'\'\n        },()=>{\n        console.log(\'长度\',this.ul.queryselectorall(\'li\').length)\n        })\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 父子组件传值\n父组件\n\n{\n  this.state.list.map((item, index) => {\n    return (\n      <xiaojiejieitem\n        key={index + item}\n        // 传值\n        content={item}\n        index={index}\n        // 传递方法\n        deleteitem={this.deleteitem.bind(this)}\n      />\n    );\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n子组件\n\nimport react, { component } from "react";\nclass xiaojiejieitem extends component {\n  constructor(props) {\n    super(props);\n    this.handleclick = this.handleclick.bind(this);\n  }\n  render() {\n    return <li onclick={this.handleclick}>{this.props.content}</li>;\n  }\n  //   子组件调用父组件方法\n  handleclick() {\n    console.log(this.props.index);\n    this.props.deleteitem(this.props.index);\n  }\n}\n\nexport default xiaojiejieitem;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17',charsets:{cjk:!0}},{title:"Redux 使用",frontmatter:{},regularPath:"/react/redux.html",relativePath:"react/redux.md",key:"v-dbf328da",path:"/react/redux.html",lastUpdated:"8/21/2019, 6:27:54 AM",headersStr:null,content:'# Redux 使用\n首先安装\n\nnpm install --save redux\n\n\n1\n创建 storeindex.js\n\nimport { createStore } from "redux";\nimport reducer from "./reducer";\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nexport default store;\n\n\n1\n2\n3\n4\n5\n6\n7\n初始化仓库reducer.js\n\nimport { INCREMENT } from "./actionTypes";\nconst defaultState = {\n  val: 0\n};\nexport default (state = defaultState, action) => {\n  if (action.type === INCREMENT) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.val = newState.val + 1;\n    return newState;\n  }\n  return state;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n组件中获取数据\n\nimport store from "../store/index";\n...\n   constructor(props) {\n        super(props);\n        this.state = store.getState();\n    }\n....\n\n\n1\n2\n3\n4\n5\n6\n7\n数据更新要通知界面\n\n...\n constructor(props) {\n        super(props);\n        this.storeChange=this.storeChange.bind(this);\n        store.subscribe(this.storeChange);\n    }\n...\n storeChange() {\n        this.setState(store.getState());\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n注意:state 只接受对象,以前的写法可以 state=0 初始化仓库,新版本不支持',normalizedContent:'# redux 使用\n首先安装\n\nnpm install --save redux\n\n\n1\n创建 storeindex.js\n\nimport { createstore } from "redux";\nimport reducer from "./reducer";\nconst store = createstore(\n  reducer,\n  window.__redux_devtools_extension__ && window.__redux_devtools_extension__()\n);\nexport default store;\n\n\n1\n2\n3\n4\n5\n6\n7\n初始化仓库reducer.js\n\nimport { increment } from "./actiontypes";\nconst defaultstate = {\n  val: 0\n};\nexport default (state = defaultstate, action) => {\n  if (action.type === increment) {\n    let newstate = json.parse(json.stringify(state));\n    newstate.val = newstate.val + 1;\n    return newstate;\n  }\n  return state;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n组件中获取数据\n\nimport store from "../store/index";\n...\n   constructor(props) {\n        super(props);\n        this.state = store.getstate();\n    }\n....\n\n\n1\n2\n3\n4\n5\n6\n7\n数据更新要通知界面\n\n...\n constructor(props) {\n        super(props);\n        this.storechange=this.storechange.bind(this);\n        store.subscribe(this.storechange);\n    }\n...\n storechange() {\n        this.setstate(store.getstate());\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n注意:state 只接受对象,以前的写法可以 state=0 初始化仓库,新版本不支持',charsets:{cjk:!0}},{title:"React Vscode 插件",frontmatter:{},regularPath:"/react/vscode.html",relativePath:"react/vscode.md",key:"v-75a7d24b",path:"/react/vscode.html",lastUpdated:"5/30/2019, 12:15:22 PM",headersStr:null,content:"# React Vscode 插件\nTIP\n\n插件名:Simple React Snippets\n\n缩写      作用                                 \nimr     Import React                       \nimrc    Import React / Component           \nimpt    Import PropTypes                   \nimpc    Import React / PureComponent       \ncc      Class Component                    \nccc     Class Component With Constructor   \nsfc     Stateless Function Component       \ncdm     componentDidMount                  \ncwm     componentWillMount                 \ncwrp    componentWillReceiveProps          \ngds     getDerivedStateFromProps           \nscu     shouldComponentUpdate              \ncwu     componentWillUpdate                \ncdu     componentDidUpdate                 \ncwu     componentWillUpdate                \ncdc     componentDidCatch                  \ngsbu    getSnapshotBeforeUpdate            \nss      setState                           \nssf     Functional setState                \nren     render                             \nrprop   Render Prop                        \nhoc     Higher Order Component             \n\nimr - Import React\nimport React from 'react';\nimrc - Import React, Component\nimport React, { Component } from 'react';\nimpt - Import PropTypes\nimport PropTypes from 'prop-types';\nimpc - Import PureComponent\nimport React, { PureComponent } from 'react';\ncc - Class Component\nclass | extends Component {\n  state = { | },\n  render() {\n    return ( | );\n  }\n}\n\nexport default |;\nccc - Class Component With Constructor\nclass | extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { | };\n  }\n  render() {\n    return ( | );\n  }\n}\n\nexport default |;\nsfc - Stateless Function Component\nconst | = props => {\n  return ( | );\n};\n\nexport default |;\ncdm - componentDidMount\ncomponentDidMount() {\n  |\n}\ncwm - componentWillMount\n//WARNING! To be deprecated in React v17. Use componentDidMount instead.\ncomponentWillMount() {\n  |\n}\ncwrp - componentWillReceiveProps\n//WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.\ncomponentWillReceiveProps(nextProps) {\n  |\n}\ngds - getDerivedStateFromProps\nstatic getDerivedStateFromProps(nextProps, prevStat) {\n  |\n}\nscu - shouldComponentUpdate\nshouldComponentUpdate(nextProps, nextState) {\n  |\n}\ncwu - componentWillUpdate\n//WARNING! To be deprecated in React v17. Use componentDidUpdate instead.\ncomponentWillUpdate(nextProps, nextState) {\n  |\n}\ncdu - componentDidUpdate\ncomponentDidUpdate(prevProps, prevState) {\n  |\n}\ncwun - componentWillUnmount\ncomponentWillUnmount() {\n  |\n}\ncdc - componentDidCatch\ncomponentDidCatch(error, info) {\n  |\n}\ngsbu - getSnapshotBeforeUpdate\ngetSnapshotBeforeUpdate(prevProps, prevState) {\n  |\n}\nss - setState\nthis.setState({ | : | });\nssf - Functional setState\nthis.setState(prevState => {\n  return { | : prevState.| }\n});\nren - render\nrender() {\n  return (\n    |\n  );\n}\nrprop - Render Prop\nclass | extends Component {\n  state = { | },\n  render() {\n    return this.props.render({\n      |: this.state.|\n    });\n  }\n}\n\nexport default |;\nhoc - Higher Order Component\nfunction | (|) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n      return < | {...this.props} />;\n    }\n  };\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n好的工具是利器!",normalizedContent:"# react vscode 插件\ntip\n\n插件名:simple react snippets\n\n缩写      作用                                 \nimr     import react                       \nimrc    import react / component           \nimpt    import proptypes                   \nimpc    import react / purecomponent       \ncc      class component                    \nccc     class component with constructor   \nsfc     stateless function component       \ncdm     componentdidmount                  \ncwm     componentwillmount                 \ncwrp    componentwillreceiveprops          \ngds     getderivedstatefromprops           \nscu     shouldcomponentupdate              \ncwu     componentwillupdate                \ncdu     componentdidupdate                 \ncwu     componentwillupdate                \ncdc     componentdidcatch                  \ngsbu    getsnapshotbeforeupdate            \nss      setstate                           \nssf     functional setstate                \nren     render                             \nrprop   render prop                        \nhoc     higher order component             \n\nimr - import react\nimport react from 'react';\nimrc - import react, component\nimport react, { component } from 'react';\nimpt - import proptypes\nimport proptypes from 'prop-types';\nimpc - import purecomponent\nimport react, { purecomponent } from 'react';\ncc - class component\nclass | extends component {\n  state = { | },\n  render() {\n    return ( | );\n  }\n}\n\nexport default |;\nccc - class component with constructor\nclass | extends component {\n  constructor(props) {\n    super(props);\n    this.state = { | };\n  }\n  render() {\n    return ( | );\n  }\n}\n\nexport default |;\nsfc - stateless function component\nconst | = props => {\n  return ( | );\n};\n\nexport default |;\ncdm - componentdidmount\ncomponentdidmount() {\n  |\n}\ncwm - componentwillmount\n//warning! to be deprecated in react v17. use componentdidmount instead.\ncomponentwillmount() {\n  |\n}\ncwrp - componentwillreceiveprops\n//warning! to be deprecated in react v17. use new lifecycle static getderivedstatefromprops instead.\ncomponentwillreceiveprops(nextprops) {\n  |\n}\ngds - getderivedstatefromprops\nstatic getderivedstatefromprops(nextprops, prevstat) {\n  |\n}\nscu - shouldcomponentupdate\nshouldcomponentupdate(nextprops, nextstate) {\n  |\n}\ncwu - componentwillupdate\n//warning! to be deprecated in react v17. use componentdidupdate instead.\ncomponentwillupdate(nextprops, nextstate) {\n  |\n}\ncdu - componentdidupdate\ncomponentdidupdate(prevprops, prevstate) {\n  |\n}\ncwun - componentwillunmount\ncomponentwillunmount() {\n  |\n}\ncdc - componentdidcatch\ncomponentdidcatch(error, info) {\n  |\n}\ngsbu - getsnapshotbeforeupdate\ngetsnapshotbeforeupdate(prevprops, prevstate) {\n  |\n}\nss - setstate\nthis.setstate({ | : | });\nssf - functional setstate\nthis.setstate(prevstate => {\n  return { | : prevstate.| }\n});\nren - render\nrender() {\n  return (\n    |\n  );\n}\nrprop - render prop\nclass | extends component {\n  state = { | },\n  render() {\n    return this.props.render({\n      |: this.state.|\n    });\n  }\n}\n\nexport default |;\nhoc - higher order component\nfunction | (|) {\n  return class extends component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n      return < | {...this.props} />;\n    }\n  };\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n好的工具是利器!",charsets:{cjk:!0}},{title:"一些代码规范",frontmatter:{},regularPath:"/specification/",relativePath:"specification/README.md",key:"v-407e06c0",path:"/specification/",lastUpdated:"7/15/2019, 12:59:58 AM",headersStr:null,content:"# 一些代码规范",normalizedContent:"# 一些代码规范",charsets:{cjk:!0}},{title:"git",frontmatter:{},regularPath:"/specification/git.html",relativePath:"specification/git.md",key:"v-6471e05a",path:"/specification/git.html",headers:[{level:2,title:"提交规范",slug:"提交规范",normalizedTitle:"提交规范",charIndex:8}],lastUpdated:"7/15/2019, 12:57:36 AM",headersStr:"提交规范",content:"# git\n# 提交规范\n * feat：新功能（feature）\n * fix：修补bug\n * docs：文档（documentation）\n * style： 格式（不影响代码运行的变动）\n * refactor：重构（即不是新增功能，也不是修改bug的代码变动）\n * test：增加测试\n * chore：构建过程或辅助工具的变动",normalizedContent:"# git\n# 提交规范\n * feat：新功能（feature）\n * fix：修补bug\n * docs：文档（documentation）\n * style： 格式（不影响代码运行的变动）\n * refactor：重构（即不是新增功能，也不是修改bug的代码变动）\n * test：增加测试\n * chore：构建过程或辅助工具的变动",charsets:{cjk:!0}},{title:"图床PicGo",frontmatter:{},regularPath:"/specification/images.html",relativePath:"specification/images.md",key:"v-63502037",path:"/specification/images.html",headers:[{level:2,title:"安装 PicGo",slug:"安装-picgo",normalizedTitle:"安装 picgo",charIndex:12},{level:2,title:"安装完成打开",slug:"安装完成打开",normalizedTitle:"安装完成打开",charIndex:87},{level:2,title:"图床选择",slug:"图床选择",normalizedTitle:"图床选择",charIndex:143},{level:2,title:"PicGo 插件",slug:"picgo-插件",normalizedTitle:"picgo 插件",charIndex:229},{level:2,title:"创建 gitee 图床仓库",slug:"创建-gitee-图床仓库",normalizedTitle:"创建 gitee 图床仓库",charIndex:278},{level:2,title:"创建gitee创建私人令牌",slug:"创建gitee创建私人令牌",normalizedTitle:"创建gitee创建私人令牌",charIndex:305}],lastUpdated:"4/1/2021, 7:00:04 AM",headersStr:"安装 PicGo 安装完成打开 图床选择 PicGo 插件 创建 gitee 图床仓库 创建gitee创建私人令牌",content:"# 图床PicGo\n# 安装 PicGo\n> github 地址\n\n\nhttps://github.com/Molunerfinn/PicGo/releases\n\n\n1\n# 安装完成打开\n到这里软件安装完成了,剩下的就是配置了\n\n> PicGo 文档\n\n\n# Gitee 图床配置\n# 图床选择\n里面有很多图床,但是作为程序员肯定热衷于git的拉,免费的为啥不去薅,但是github呢,墙隔着,速度太慢了.所以我们选择国内的gitee,让体验感更好!\n\n# PicGo 插件\n打开 PicGo插件设置搜索github,安装github-plus插件\n\n# 创建 gitee 图床仓库\n如上图配置这个仓库\n\n# 创建gitee创建私人令牌\n> 生成新的令牌\n\n\n\n\n> repo\n\n\n你刚刚创建的仓库https://gitee.com/Uvdream/blog-images后面用户名和仓库地址,我这个就是 UvDream/blog-images\n\n> token\n\n\n就是你刚复制 token 令牌\n\n> origin\n\n\n选择 gitee\n\n> path\n\n\n这个参数就是仓库里面的目录,可以随便设置\n\nemmm,到这里基本 PicGo 参数设置完成了,到上传区设置下就可以上传,选择githubPlus图床",normalizedContent:"# 图床picgo\n# 安装 picgo\n> github 地址\n\n\nhttps://github.com/molunerfinn/picgo/releases\n\n\n1\n# 安装完成打开\n到这里软件安装完成了,剩下的就是配置了\n\n> picgo 文档\n\n\n# gitee 图床配置\n# 图床选择\n里面有很多图床,但是作为程序员肯定热衷于git的拉,免费的为啥不去薅,但是github呢,墙隔着,速度太慢了.所以我们选择国内的gitee,让体验感更好!\n\n# picgo 插件\n打开 picgo插件设置搜索github,安装github-plus插件\n\n# 创建 gitee 图床仓库\n如上图配置这个仓库\n\n# 创建gitee创建私人令牌\n> 生成新的令牌\n\n\n\n\n> repo\n\n\n你刚刚创建的仓库https://gitee.com/uvdream/blog-images后面用户名和仓库地址,我这个就是 uvdream/blog-images\n\n> token\n\n\n就是你刚复制 token 令牌\n\n> origin\n\n\n选择 gitee\n\n> path\n\n\n这个参数就是仓库里面的目录,可以随便设置\n\nemmm,到这里基本 picgo 参数设置完成了,到上传区设置下就可以上传,选择githubplus图床",charsets:{cjk:!0}},{title:"TypeScript",frontmatter:{},regularPath:"/typescript/",relativePath:"typescript/README.md",key:"v-723d7458",path:"/typescript/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:15},{level:2,title:"安装TypeScript",slug:"安装typescript",normalizedTitle:"安装typescript",charIndex:166},{level:2,title:"Hello TypeScript",slug:"hello-typescript",normalizedTitle:"hello typescript",charIndex:248},{level:3,title:"hello.ts",slug:"hello-ts",normalizedTitle:"hello.ts",charIndex:233},{level:3,title:"tsc hello.ts",slug:"tsc-hello-ts",normalizedTitle:"tsc hello.ts",charIndex:229}],lastUpdated:"4/30/2021, 9:44:21 AM",headersStr:"简介 安装TypeScript Hello TypeScript hello.ts tsc hello.ts",content:'# TypeScript\n# 简介\n什么是TypeScript?官网这样介绍的,TypeScript是JavaScript的超集.\n\n * TypeScript是JavaScript类型的超集,它可以编译成纯JavaScript.\n * TypeScript可以在任何浏览器,任何计算机和任何操作系统上运行,并且他是开源的.\n\n# 安装TypeScript\n npm install -g typescript\n\n\n1\n使用TypeScript其实很简单\n\ntsc hello.ts\n\n\n1\n# Hello TypeScript\n# hello.ts\nfunction Hello(name:string){\n    return "hello"+name\n}\nlet name="world!"\nconsole.log(Hello(name))\n\n\n1\n2\n3\n4\n5\n# tsc hello.ts\nhello world!\n\n\n1',normalizedContent:'# typescript\n# 简介\n什么是typescript?官网这样介绍的,typescript是javascript的超集.\n\n * typescript是javascript类型的超集,它可以编译成纯javascript.\n * typescript可以在任何浏览器,任何计算机和任何操作系统上运行,并且他是开源的.\n\n# 安装typescript\n npm install -g typescript\n\n\n1\n使用typescript其实很简单\n\ntsc hello.ts\n\n\n1\n# hello typescript\n# hello.ts\nfunction hello(name:string){\n    return "hello"+name\n}\nlet name="world!"\nconsole.log(hello(name))\n\n\n1\n2\n3\n4\n5\n# tsc hello.ts\nhello world!\n\n\n1',charsets:{cjk:!0}},{title:"extends implements 区别",frontmatter:{"date updated":"2021-08-27T10:34:41+08:00"},regularPath:"/typescript/%60extends%60%20%60implements%60%20%E5%8C%BA%E5%88%AB.html",relativePath:"typescript/`extends` `implements` 区别.md",key:"v-7b6c5b6e",path:"/typescript/%60extends%60%20%60implements%60%20%E5%8C%BA%E5%88%AB.html",headers:[{level:2,title:"定义",slug:"定义",normalizedTitle:"定义",charIndex:26},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:161},{level:2,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:663}],lastUpdated:"8/27/2021, 2:36:27 AM",headersStr:"定义 示例 注意",content:'# extends implements 区别\n# 定义\n * extends\n\n> 继承,一个新的接口或者类,从父类或者接口继承所有属性和方法,不可以重写属性,但是可以重写方法\n\n\n * implements\n\n> 实现,一个新的类,从父类或者接口实现所有的属性和方法,同时可以重写属性和方法,包含一些新的功能\n\n\n# 示例\nexport interface Person {\n\n name: string;\n\n}\n\n// implements 是对某个接口实现.必须满足接口的[类](./class.md)型规范\n\nclass Man implements Person {\n\n public name = "222";\n\n public age = 18;\n\n}\n\n//extends是对某个[类](./class.md)的继承，可获取父[类](./class.md)的所有的静态属性\n\nclass OldMan extends Man {\n\n constructor() {\n\n super();\n\n console.log(this.name);\n\n console.log(this.age);\n\n }\n\n}\n\nconst oldMan = new OldMan();\n\nconsole.log(oldMan);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# 注意\n * 接口不能实现接口或者类\n   \n   \n * 即类可以实现接口或者类\n   \n   \n * 接口可以继承接口或者类\n   \n   \n * 类不可以继承接口,只能继承类',normalizedContent:'# extends implements 区别\n# 定义\n * extends\n\n> 继承,一个新的接口或者类,从父类或者接口继承所有属性和方法,不可以重写属性,但是可以重写方法\n\n\n * implements\n\n> 实现,一个新的类,从父类或者接口实现所有的属性和方法,同时可以重写属性和方法,包含一些新的功能\n\n\n# 示例\nexport interface person {\n\n name: string;\n\n}\n\n// implements 是对某个接口实现.必须满足接口的[类](./class.md)型规范\n\nclass man implements person {\n\n public name = "222";\n\n public age = 18;\n\n}\n\n//extends是对某个[类](./class.md)的继承，可获取父[类](./class.md)的所有的静态属性\n\nclass oldman extends man {\n\n constructor() {\n\n super();\n\n console.log(this.name);\n\n console.log(this.age);\n\n }\n\n}\n\nconst oldman = new oldman();\n\nconsole.log(oldman);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# 注意\n * 接口不能实现接口或者类\n   \n   \n * 即类可以实现接口或者类\n   \n   \n * 接口可以继承接口或者类\n   \n   \n * 类不可以继承接口,只能继承类',charsets:{cjk:!0}},{title:"基本类型",frontmatter:{},regularPath:"/typescript/base-type.html",relativePath:"typescript/base-type.md",key:"v-d6c4d632",path:"/typescript/base-type.html",headers:[{level:2,title:"布尔(boolean)",slug:"布尔-boolean",normalizedTitle:"布尔(boolean)",charIndex:9},{level:2,title:"数字(number)",slug:"数字-number",normalizedTitle:"数字(number)",charIndex:53},{level:2,title:"字符串(string)",slug:"字符串-string",normalizedTitle:"字符串(string)",charIndex:93},{level:2,title:"数组(array)",slug:"数组-array",normalizedTitle:"数组(array)",charIndex:133},{level:2,title:"元组(tuple)",slug:"元组-tuple",normalizedTitle:"元组(tuple)",charIndex:291},{level:2,title:"枚举(enum)",slug:"枚举-enum",normalizedTitle:"枚举(enum)",charIndex:446},{level:3,title:"数字枚举",slug:"数字枚举",normalizedTitle:"数字枚举",charIndex:457},{level:3,title:"字符串枚举",slug:"字符串枚举",normalizedTitle:"字符串枚举",charIndex:632},{level:3,title:"异构枚举",slug:"异构枚举",normalizedTitle:"异构枚举",charIndex:736},{level:2,title:"对象(object)",slug:"对象-object",normalizedTitle:"对象(object)",charIndex:786},{level:2,title:"any",slug:"any",normalizedTitle:"any",charIndex:907},{level:2,title:"void",slug:"void",normalizedTitle:"void",charIndex:1032},{level:2,title:"null/undefined",slug:"null-undefined",normalizedTitle:"null/undefined",charIndex:1165},{level:2,title:"never",slug:"never",normalizedTitle:"never",charIndex:1355}],lastUpdated:"5/10/2021, 2:36:21 AM",headersStr:"布尔(boolean) 数字(number) 字符串(string) 数组(array) 元组(tuple) 枚举(enum) 数字枚举 字符串枚举 异构枚举 对象(object) any void null/undefined never",content:'# 基本类型\n# 布尔(boolean)\nlet bool: boolean = true;\n\n\n1\n# 数字(number)\nlet num: number = 123;\n\n\n1\n# 字符串(string)\nlet name:string="Tom"\n\n\n1\n# 数组(array)\nlet arr1: number[] = [1, 2, 3];\nlet arr2: Array<number> = [1, 2, 3, 4];\n// 联合类型\nlet arr3: Array<number | string> = [1, 2, 3, 4, "abc"];\n\n\n1\n2\n3\n4\n# 元组(tuple)\n> 固定长度的数组\n\n\nlet ancestor: [number, string] = [0, "1"];\nancestor.push(2);\n// 元祖可以插入元素,但是不可以访问\nconsole.log(ancestor);\n// ancestor[2]\n\n\n1\n2\n3\n4\n5\n# 枚举(enum)\n# 数字枚举\nenum Role {\n  //   Reporter ,\n  Reporter = 1, //自定义枚举起始值\n  Development,\n  Main,\n  Footer,\n  Owner,\n  Guest\n}\nconsole.log(Role.Reporter); //0 //1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 字符串枚举\nenum Message {\n  Success = "成功了!",\n  Filed = "失败了!"\n}\nconsole.log(Message.Success);\n\n\n1\n2\n3\n4\n5\n# 异构枚举\nenum Answer {\n  N,\n  Y = "yes"\n}\n\n\n1\n2\n3\n4\n# 对象(object)\n// let obj: object = { x: 1, y: 2 };\nlet obj: { x: number; y: number } = { x: 1, y: 2 };\nobj.x = 3;\n\n\n1\n2\n3\n# any\nlet x;\nx = 1;\nx = [];\nx = () => {};\n\nlet notSure: any = 666;\nnotSure = "Semlinker";\nnotSure = false;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# void\nlet noReturn = () => {};\n\n// 声明函数返回值为void\nfunction msg(): void {\n  console.log("This is my warning message");\n}\n\n\n1\n2\n3\n4\n5\n6\n# null/undefined\nlet un: undefined = undefined;\nlet nu: null = null;\nconsole.log(un == nu);\nconsole.log(un === nu);\n// num=nu;这是不允许的,只有let num: number | undefined | null  = 123;\n\n\n1\n2\n3\n4\n5\n# never\nlet error = () => {\n  throw new Error("error");\n};\nlet endless = () => {\n  while (true) {}\n};\n\n\n1\n2\n3\n4\n5\n6',normalizedContent:'# 基本类型\n# 布尔(boolean)\nlet bool: boolean = true;\n\n\n1\n# 数字(number)\nlet num: number = 123;\n\n\n1\n# 字符串(string)\nlet name:string="tom"\n\n\n1\n# 数组(array)\nlet arr1: number[] = [1, 2, 3];\nlet arr2: array<number> = [1, 2, 3, 4];\n// 联合类型\nlet arr3: array<number | string> = [1, 2, 3, 4, "abc"];\n\n\n1\n2\n3\n4\n# 元组(tuple)\n> 固定长度的数组\n\n\nlet ancestor: [number, string] = [0, "1"];\nancestor.push(2);\n// 元祖可以插入元素,但是不可以访问\nconsole.log(ancestor);\n// ancestor[2]\n\n\n1\n2\n3\n4\n5\n# 枚举(enum)\n# 数字枚举\nenum role {\n  //   reporter ,\n  reporter = 1, //自定义枚举起始值\n  development,\n  main,\n  footer,\n  owner,\n  guest\n}\nconsole.log(role.reporter); //0 //1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 字符串枚举\nenum message {\n  success = "成功了!",\n  filed = "失败了!"\n}\nconsole.log(message.success);\n\n\n1\n2\n3\n4\n5\n# 异构枚举\nenum answer {\n  n,\n  y = "yes"\n}\n\n\n1\n2\n3\n4\n# 对象(object)\n// let obj: object = { x: 1, y: 2 };\nlet obj: { x: number; y: number } = { x: 1, y: 2 };\nobj.x = 3;\n\n\n1\n2\n3\n# any\nlet x;\nx = 1;\nx = [];\nx = () => {};\n\nlet notsure: any = 666;\nnotsure = "semlinker";\nnotsure = false;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# void\nlet noreturn = () => {};\n\n// 声明函数返回值为void\nfunction msg(): void {\n  console.log("this is my warning message");\n}\n\n\n1\n2\n3\n4\n5\n6\n# null/undefined\nlet un: undefined = undefined;\nlet nu: null = null;\nconsole.log(un == nu);\nconsole.log(un === nu);\n// num=nu;这是不允许的,只有let num: number | undefined | null  = 123;\n\n\n1\n2\n3\n4\n5\n# never\nlet error = () => {\n  throw new error("error");\n};\nlet endless = () => {\n  while (true) {}\n};\n\n\n1\n2\n3\n4\n5\n6',charsets:{cjk:!0}},{title:"class类",frontmatter:{"date updated":"2021-08-27T10:58:50+08:00"},regularPath:"/typescript/class.html",relativePath:"typescript/class.md",key:"v-64fce1e3",path:"/typescript/class.html",headers:[{level:2,title:"继承",slug:"继承",normalizedTitle:"继承",charIndex:48},{level:2,title:"公共,私有与受保护的修饰符",slug:"公共-私有与受保护的修饰符",normalizedTitle:"公共,私有与受保护的修饰符",charIndex:330},{level:3,title:"public",slug:"public",normalizedTitle:"public",charIndex:346},{level:3,title:"private",slug:"private",normalizedTitle:"private",charIndex:542},{level:2,title:"protected",slug:"protected",normalizedTitle:"protected",charIndex:724},{level:3,title:"readonly",slug:"readonly",normalizedTitle:"readonly",charIndex:1877},{level:3,title:"存取器",slug:"存取器",normalizedTitle:"存取器",charIndex:2078},{level:3,title:"static",slug:"static",normalizedTitle:"static",charIndex:2523},{level:3,title:"抽象类",slug:"抽象类",normalizedTitle:"抽象类",charIndex:2963}],lastUpdated:"8/27/2021, 7:06:00 AM",headersStr:"继承 公共,私有与受保护的修饰符 public private protected readonly 存取器 static 抽象类",content:'# class类\nclass Dog{\nconstructor(){}\n}\n\n\n1\n2\n3\n# 继承\nclass Animal {\n move(distanceInMeters: number = 0) {\n console.log(`Animal moved ${distanceInMeters}m.`);\n }\n}\nclass Dog extends Animal {\n bark() {\n console.log("Woof! Woof!");\n }\n}\nconst dog = new Dog();\ndog.bark();\ndog.move(10);\ndog.bark();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 公共,私有与受保护的修饰符\n# public\n> 公共的修饰符,这是typescript默认的\n\n\nclass A {\n public name = "A的名字"\n constructor() { }\n}\n\nconst a = new A()\n\nconsole.log(a);//A { name: \'A的名字\' }\n\nconsole.log(a.name);//A的名字\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# private\n> 私有成员,外部不可访问\n\n\nclass B {\n private name: string = "B的名字"\n constructor() {}\n}\n\nconst b = new B()\n\nconsole.log(b);\n\nconsole.log(b.name); //error\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# protected\n> protected修饰符与 private修饰符的行为很相似，但有一点不同， protected成员在派生类中仍然可以访问\n\n\n * 示例1\n\nclass Person {\n protected name: string\n constructor(name: string) {\n \tthis.name = name\n }\n}\n\nclass Man extends Person {\n private address: string\n constructor(name: string, address: string) {\n\t super(name)\n\t this.address = address\n }\n public getMsg() {\n console.log(`我的名字是${this.name},地址是${this.address}`);\n }\n}\n\nlet man = new Man("张三", "雨花南路") \n\nconsole.log(man);//Man { name: \'张三\', address: \'雨花南路\' }\n\nconsole.log(man.getMsg());//我的名字是张三,地址是雨花南路\n\nconsole.log(man.name);//error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n> 说明protected可以被子类使用,但是不可以被外部调用\n\n\n * 示例2\n\n> 如果构造函数被标记成protected,这就意味着这个类不能在包含他的类外被实例化,但是能被继承\n\n\nclass Person {\n protected name: string\n protected constructor(name: string) {\n \tthis.name = name\n }\n}\n\nclass Man extends Person {\n private address: string\n constructor(name: string, address: string) {\n super(name)\n this.address = address\n }\n}\n\nlet man = new Man("张三", "雨花南路")\n\nconsole.log(man);//Man { name: \'张三\', address: \'雨花南路\' }\n\nlet person = new Person("李四")//error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# readonly\n> 将属性设置为只读的. 只读属性必须在声明时或构造函数里被初始化\n\n\nclass Web {\n readonly name: string\n constructor(name: string) {\n this.name = name\n }\n}\n\nlet web = new Web("前端")\n\nweb.name = "嘻嘻"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 存取器\n> 用另外一个条件来限制你是否能够更改属性\n\n\nlet passCode = "passcode"\n\nclass EditPassword {\n private _fullName: string;\n get fullName(): string {\n \treturn this._fullName\n }\n set fullName(newName: string) {\n\t if (passCode && passCode == \'passcode\') {\n\t\tthis._fullName = newName;\n\t } else {\n\t\tconsole.log("错误");\n\t }\n }\n}\n\nlet edit = new EditPassword()\n\nedit.fullName = "张三"\n\nconsole.log(edit.fullName);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# static\nclass Grid {\n constructor(public scle: number) {}\n static origin = { x: 0, y: 0 }\n calcPosition(point: { x: number, y: number }) {\n\t let x = point.x - Grid.origin.x\n\t let y = point.y - Grid.origin.y\n\t return x * y / this.scle\n }\n}\n\nlet grid1 = new Grid(1)\n\nlet grid2 = new Grid(2)\n\nconsole.log(grid1.calcPosition({ x: 10, y: 10 }));\n\nconsole.log(grid2.calcPosition({ x: 10, y: 10 }));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n# 抽象类\n> 抽象类不允许被实例化\n\n\n * 错误\n\nabstract class Animal {\n  public name;\n  public constructor(name) {\n    this.name = name;\n  }\n  public abstract sayHi();\n}\n\nlet a = new Animal(\'猴子\');\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n * 错误\n\nabstract class Animal {\n  public name;\n  public constructor(name) {\n    this.name = name;\n  }\n  public abstract sayHi();\n}\n\nclass Cat extends Animal {\n  public eat() {\n    console.log(`${this.name} is eating.`);\n  }\n}\n\nlet cat = new Cat(\'小猫\');\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n * 正确\n\nabstract class Animal {\n  public name;\n  public constructor(name) {\n    this.name = name;\n  }\n  public abstract sayHi();\n}\n\nclass Cat extends Animal {\n  public sayHi() {\n    console.log(小猫的名字是 ${this.name}`);\n  }\n}\n\nlet cat = new Cat(\'小猫\');\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15',normalizedContent:'# class类\nclass dog{\nconstructor(){}\n}\n\n\n1\n2\n3\n# 继承\nclass animal {\n move(distanceinmeters: number = 0) {\n console.log(`animal moved ${distanceinmeters}m.`);\n }\n}\nclass dog extends animal {\n bark() {\n console.log("woof! woof!");\n }\n}\nconst dog = new dog();\ndog.bark();\ndog.move(10);\ndog.bark();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 公共,私有与受保护的修饰符\n# public\n> 公共的修饰符,这是typescript默认的\n\n\nclass a {\n public name = "a的名字"\n constructor() { }\n}\n\nconst a = new a()\n\nconsole.log(a);//a { name: \'a的名字\' }\n\nconsole.log(a.name);//a的名字\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# private\n> 私有成员,外部不可访问\n\n\nclass b {\n private name: string = "b的名字"\n constructor() {}\n}\n\nconst b = new b()\n\nconsole.log(b);\n\nconsole.log(b.name); //error\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# protected\n> protected修饰符与 private修饰符的行为很相似，但有一点不同， protected成员在派生类中仍然可以访问\n\n\n * 示例1\n\nclass person {\n protected name: string\n constructor(name: string) {\n \tthis.name = name\n }\n}\n\nclass man extends person {\n private address: string\n constructor(name: string, address: string) {\n\t super(name)\n\t this.address = address\n }\n public getmsg() {\n console.log(`我的名字是${this.name},地址是${this.address}`);\n }\n}\n\nlet man = new man("张三", "雨花南路") \n\nconsole.log(man);//man { name: \'张三\', address: \'雨花南路\' }\n\nconsole.log(man.getmsg());//我的名字是张三,地址是雨花南路\n\nconsole.log(man.name);//error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n> 说明protected可以被子类使用,但是不可以被外部调用\n\n\n * 示例2\n\n> 如果构造函数被标记成protected,这就意味着这个类不能在包含他的类外被实例化,但是能被继承\n\n\nclass person {\n protected name: string\n protected constructor(name: string) {\n \tthis.name = name\n }\n}\n\nclass man extends person {\n private address: string\n constructor(name: string, address: string) {\n super(name)\n this.address = address\n }\n}\n\nlet man = new man("张三", "雨花南路")\n\nconsole.log(man);//man { name: \'张三\', address: \'雨花南路\' }\n\nlet person = new person("李四")//error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# readonly\n> 将属性设置为只读的. 只读属性必须在声明时或构造函数里被初始化\n\n\nclass web {\n readonly name: string\n constructor(name: string) {\n this.name = name\n }\n}\n\nlet web = new web("前端")\n\nweb.name = "嘻嘻"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 存取器\n> 用另外一个条件来限制你是否能够更改属性\n\n\nlet passcode = "passcode"\n\nclass editpassword {\n private _fullname: string;\n get fullname(): string {\n \treturn this._fullname\n }\n set fullname(newname: string) {\n\t if (passcode && passcode == \'passcode\') {\n\t\tthis._fullname = newname;\n\t } else {\n\t\tconsole.log("错误");\n\t }\n }\n}\n\nlet edit = new editpassword()\n\nedit.fullname = "张三"\n\nconsole.log(edit.fullname);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# static\nclass grid {\n constructor(public scle: number) {}\n static origin = { x: 0, y: 0 }\n calcposition(point: { x: number, y: number }) {\n\t let x = point.x - grid.origin.x\n\t let y = point.y - grid.origin.y\n\t return x * y / this.scle\n }\n}\n\nlet grid1 = new grid(1)\n\nlet grid2 = new grid(2)\n\nconsole.log(grid1.calcposition({ x: 10, y: 10 }));\n\nconsole.log(grid2.calcposition({ x: 10, y: 10 }));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n# 抽象类\n> 抽象类不允许被实例化\n\n\n * 错误\n\nabstract class animal {\n  public name;\n  public constructor(name) {\n    this.name = name;\n  }\n  public abstract sayhi();\n}\n\nlet a = new animal(\'猴子\');\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n * 错误\n\nabstract class animal {\n  public name;\n  public constructor(name) {\n    this.name = name;\n  }\n  public abstract sayhi();\n}\n\nclass cat extends animal {\n  public eat() {\n    console.log(`${this.name} is eating.`);\n  }\n}\n\nlet cat = new cat(\'小猫\');\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n * 正确\n\nabstract class animal {\n  public name;\n  public constructor(name) {\n    this.name = name;\n  }\n  public abstract sayhi();\n}\n\nclass cat extends animal {\n  public sayhi() {\n    console.log(小猫的名字是 ${this.name}`);\n  }\n}\n\nlet cat = new cat(\'小猫\');\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/typescript/types%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90.html",relativePath:"typescript/types自动生成.md",key:"v-58e312b8",path:"/typescript/types%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90.html",lastUpdated:"7/26/2021, 8:59:01 AM",headersStr:null,content:'# 自动生成类型申明文件\n上面的.d.ts 文件是如何生成的呢,一般都不是自己写的,当然也可以自己写\n\n# 配置tsconfig.json\n    "declaration": true,\n    "declarationDir": "dist",\n    "typeRoots": ["./src"]\n\n\n1\n2\n3\n这样配置完就会自动生辰个生命文件,这样 ts 引用就不会报错了!\n\n# 其它方式\n * 手写声明文件\n * 采用插件生成 * 为整个包添加声明文件\n   \n   npm install -g dts-gen   // 先全局安装dts-gen\n   npm install -g yargs     // 然后在全局安装你需要生产声明文件的库\n   dts-gen -m yargs         // 执行命令生成文件\n   \n   \n   1\n   2\n   3\n   在你执行目录下就会生成yargs.d.ts * 为单个文件生成声明文件\n   \n    npm i dtsmake -g   // 先全局安装dtsmake\n    dtsmake -s ./path/to/sourcefile.js  // 在对应的文件生产文件\n   \n   \n   1\n   2\n   > 不推荐,可能生成的文件有点问题,而且会可能缺包',normalizedContent:'# 自动生成类型申明文件\n上面的.d.ts 文件是如何生成的呢,一般都不是自己写的,当然也可以自己写\n\n# 配置tsconfig.json\n    "declaration": true,\n    "declarationdir": "dist",\n    "typeroots": ["./src"]\n\n\n1\n2\n3\n这样配置完就会自动生辰个生命文件,这样 ts 引用就不会报错了!\n\n# 其它方式\n * 手写声明文件\n * 采用插件生成 * 为整个包添加声明文件\n   \n   npm install -g dts-gen   // 先全局安装dts-gen\n   npm install -g yargs     // 然后在全局安装你需要生产声明文件的库\n   dts-gen -m yargs         // 执行命令生成文件\n   \n   \n   1\n   2\n   3\n   在你执行目录下就会生成yargs.d.ts * 为单个文件生成声明文件\n   \n    npm i dtsmake -g   // 先全局安装dtsmake\n    dtsmake -s ./path/to/sourcefile.js  // 在对应的文件生产文件\n   \n   \n   1\n   2\n   > 不推荐,可能生成的文件有点问题,而且会可能缺包',charsets:{cjk:!0}},{title:"类型推断",frontmatter:{},regularPath:"/typescript/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E5%92%8C%E5%85%BC%E5%AE%B9.html",relativePath:"typescript/类型推断和兼容.md",key:"v-74ce3510",path:"/typescript/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E5%92%8C%E5%85%BC%E5%AE%B9.html",headers:[{level:2,title:"示例 1",slug:"示例-1",normalizedTitle:"示例 1",charIndex:38},{level:2,title:"示例 2",slug:"示例-2",normalizedTitle:"示例 2",charIndex:162},{level:2,title:"示例 3",slug:"示例-3",normalizedTitle:"示例 3",charIndex:266},{level:2,title:"示例 4:类型断言",slug:"示例-4-类型断言",normalizedTitle:"示例 4:类型断言",charIndex:360},{level:2,title:"简单示例",slug:"简单示例",normalizedTitle:"简单示例",charIndex:543},{level:2,title:"接口兼容性",slug:"接口兼容性",normalizedTitle:"接口兼容性",charIndex:652},{level:2,title:"函数兼容性",slug:"函数兼容性",normalizedTitle:"函数兼容性",charIndex:881},{level:3,title:"参数个数",slug:"参数个数",normalizedTitle:"参数个数",charIndex:889},{level:3,title:"可选参数和剩余参数",slug:"可选参数和剩余参数",normalizedTitle:"可选参数和剩余参数",charIndex:1162},{level:3,title:"参数类型",slug:"参数类型",normalizedTitle:"参数类型",charIndex:1425},{level:3,title:"函数返回值",slug:"函数返回值",normalizedTitle:"函数返回值",charIndex:1898},{level:2,title:"枚举兼容性",slug:"枚举兼容性",normalizedTitle:"枚举兼容性",charIndex:2042},{level:2,title:"类兼容",slug:"类兼容",normalizedTitle:"类兼容",charIndex:2285},{level:2,title:"泛型兼容",slug:"泛型兼容",normalizedTitle:"泛型兼容",charIndex:2886}],lastUpdated:"6/1/2021, 2:12:44 PM",headersStr:"示例 1 示例 2 示例 3 示例 4:类型断言 简单示例 接口兼容性 函数兼容性 参数个数 可选参数和剩余参数 参数类型 函数返回值 枚举兼容性 类兼容 泛型兼容",content:'# 类型推断\n> 在没有明确指出类型的地方,类型推断会帮助提供类型\n\n\n# 示例 1\nlet x = 3;\nx = "3"; //Error:不能将类型“string”分配给类型“number”。\n\n\n1\n2\n这里 x 被推断为 number,所以再次赋值为 string 是错误的\n\n> 类型推断是从有向左推断的\n\n\n# 示例 2\n> 定义初始类型以及部分成员初始值\n\n\ninterface Foo {\n  bar: number;\n}\nlet foo = <Foo>{};\nfoo.bar = 1;\n\n\n1\n2\n3\n4\n5\n# 示例 3\n> 定义初始值\n\n\ninterface Foo {\n  bar: number;\n}\nlet foo: Foo = {\n  bar: 1,\n};\n\n\n1\n2\n3\n4\n5\n6\n# 示例 4:类型断言\ninterface Foo {\n  bar: number;\n}\nlet foo = {} as Foo; //类型断言\nfoo.bar = 1;\n\n\n1\n2\n3\n4\n5\n# 类型兼容\n> 当一个类型 Y 可以被赋值给另一个类型 X 时，我们就可以说类型 X 兼容类型 Y ---------X 兼容 Y：X（目标类型）= Y（源类型）\n\n\n# 简单示例\nlet a = {\n  age: 1,\n  name: "张三",\n};\nlet b = {\n  age: 1,\n};\nb = a;\na = b; //Error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 接口兼容性\ninterface X {\n  a: any;\n  b: any;\n}\ninterface Y {\n  a: any;\n  b: any;\n  c: any;\n}\nlet x: X = { a: 1, b: 2 };\nlet y: Y = { a: 1, b: 2, c: 3 };\nx = y;\ny = x; //Error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n> 接口之间的兼容时候，成员少的兼容成员多的\n\n\n# 函数兼容性\n# 参数个数\ntype Handler = (a: number, b: number) => void;\nfunction hof(handler: Handler) {\n  return handler;\n}\nlet handler1 = (a: number) => {};\nhof(handler1);\nlet handler2 = (a: number, b: number, c: number) => {};\nhof(handler2); //Error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n> 函数兼容性参数多的可以兼容少的\n\n\n# 可选参数和剩余参数\nlet a = (p1: number, p2: number) => {};\nlet b = (p1?: number, p2?: number) => {};\nlet c = (...args: number[]) => {};\na = b;\na = c;\nb = a; //Error\nb = c; //Error\nc = a;\nc = b;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n> 固定参数兼容可选参数和剩余参数，可选参数不能兼容固定参数和剩余参数，剩余参数可以兼容固定参数和可选参数\n\n\n# 参数类型\ntype Handler = (a: number, b: number) => void;\nfunction hof(handler: Handler) {\n  return handler;\n}\nlet handler3 = (a: string) => {};\nhof(handler3); //Error\n\ninterface Point3D {\n  x: number;\n  y: number;\n  z: number;\n}\ninterface Point2D {\n  x: number;\n  y: number;\n}\nlet p3d = (point: Point3D) => {};\nlet p2d = (point: Point2D) => {};\np3d = p2d;\np2d = p23; //Error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n> 函数兼容性遵循多的可以兼容少的,也就是函数参数只能少传,不能多传.与接口之间兼容性相反\n\n\n# 函数返回值\nlet f = () => ({ name: "Alice" });\nlet g = () => ({ name: "Alice", location: "Beijing" });\nf = g;\ng = f; //Error\n\n\n1\n2\n3\n4\n> 少的可以兼容多的\n\n\n# 枚举兼容性\nenum Fruit {\n  Apple,\n  Banana,\n}\nenum Color {\n  Red,\n  Yellow,\n}\nlet fruit: Fruit.Apple;\nlet no: number = Fruit.Apple;\n// let Color:Color.Red=Fruit.Apple //枚举之间不兼容\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n> 枚举类型与数字类型兼容，并且数字类型与枚举类型兼容。不同枚举类型之间是不兼容的\n\n\n# 类兼容\nclass A {\n  constructor(p: number, q: number) {}\n  id: number = 1;\n  // private name: string = "";\n}\nclass B {\n  static s = 1;\n  constructor(p: number) {}\n  id: number = 2;\n  // private name: string = "";\n}\nlet aa = new A(1, 2);\nlet bb = new B(1);\n//有私有成员不兼容\naa = bb;\nbb = aa;\nclass C1 extends A {}\nlet cc = new C1(1, 2);\ncc = aa;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n> 类与对象字面量和接口差不多，但有一点不同：类有静态部分和实例部分的类型。 比较两个类类型的对象时，只有实例的成员会被比较。 静态成员和构造函数不在比较的范围内\n\n\n> 类的私有成员和受保护成员会影响兼容性。 当检查类实例的兼容时，如果目标类型包含一个私有成员，那么源类型必须包含来自同一个类的这个私有成员。 同样地，这条规则也适用于包含受保护成员实例的类型检查。 这允许子类赋值给父类，但是不能赋值给其它有同样类型的类\n\n\n# 泛型兼容\ninterface Empty<T> {}\nlet obj1: Empty<number> = {};\nlet obj2: Empty<string> = {};\nobj1 = obj2;\n\n\n1\n2\n3\n4\n> 以上代码,obj1 和 obj2 是兼容的,因为他们的结构使用类型参数时并没有不同\n\n\ninterface Empty<T> {\n  value: T;\n}\nlet obj1: Empty<number>;\nlet obj2: Empty<string>;\nobj1 = obj2; //Error\n\n\n1\n2\n3\n4\n5\n6\n> 以上代码比前一个代码多了一个成员,所以对于没指定泛型类型的泛型参数时,会把所有泛型参数当成 any 比较,然后用结果类型进行比较,前一个例子\n\n\nlet log3 = <T>(x: T): T => {\n  console.log(x);\n  return x;\n};\nlet log4 = <T>(y: T): T => {\n  console.log(y);\n  return y;\n};\nlog3 = log4;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n> 这是可以的,因为 (x: any) => any matches (y: any) => any',normalizedContent:'# 类型推断\n> 在没有明确指出类型的地方,类型推断会帮助提供类型\n\n\n# 示例 1\nlet x = 3;\nx = "3"; //error:不能将类型“string”分配给类型“number”。\n\n\n1\n2\n这里 x 被推断为 number,所以再次赋值为 string 是错误的\n\n> 类型推断是从有向左推断的\n\n\n# 示例 2\n> 定义初始类型以及部分成员初始值\n\n\ninterface foo {\n  bar: number;\n}\nlet foo = <foo>{};\nfoo.bar = 1;\n\n\n1\n2\n3\n4\n5\n# 示例 3\n> 定义初始值\n\n\ninterface foo {\n  bar: number;\n}\nlet foo: foo = {\n  bar: 1,\n};\n\n\n1\n2\n3\n4\n5\n6\n# 示例 4:类型断言\ninterface foo {\n  bar: number;\n}\nlet foo = {} as foo; //类型断言\nfoo.bar = 1;\n\n\n1\n2\n3\n4\n5\n# 类型兼容\n> 当一个类型 y 可以被赋值给另一个类型 x 时，我们就可以说类型 x 兼容类型 y ---------x 兼容 y：x（目标类型）= y（源类型）\n\n\n# 简单示例\nlet a = {\n  age: 1,\n  name: "张三",\n};\nlet b = {\n  age: 1,\n};\nb = a;\na = b; //error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 接口兼容性\ninterface x {\n  a: any;\n  b: any;\n}\ninterface y {\n  a: any;\n  b: any;\n  c: any;\n}\nlet x: x = { a: 1, b: 2 };\nlet y: y = { a: 1, b: 2, c: 3 };\nx = y;\ny = x; //error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n> 接口之间的兼容时候，成员少的兼容成员多的\n\n\n# 函数兼容性\n# 参数个数\ntype handler = (a: number, b: number) => void;\nfunction hof(handler: handler) {\n  return handler;\n}\nlet handler1 = (a: number) => {};\nhof(handler1);\nlet handler2 = (a: number, b: number, c: number) => {};\nhof(handler2); //error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n> 函数兼容性参数多的可以兼容少的\n\n\n# 可选参数和剩余参数\nlet a = (p1: number, p2: number) => {};\nlet b = (p1?: number, p2?: number) => {};\nlet c = (...args: number[]) => {};\na = b;\na = c;\nb = a; //error\nb = c; //error\nc = a;\nc = b;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n> 固定参数兼容可选参数和剩余参数，可选参数不能兼容固定参数和剩余参数，剩余参数可以兼容固定参数和可选参数\n\n\n# 参数类型\ntype handler = (a: number, b: number) => void;\nfunction hof(handler: handler) {\n  return handler;\n}\nlet handler3 = (a: string) => {};\nhof(handler3); //error\n\ninterface point3d {\n  x: number;\n  y: number;\n  z: number;\n}\ninterface point2d {\n  x: number;\n  y: number;\n}\nlet p3d = (point: point3d) => {};\nlet p2d = (point: point2d) => {};\np3d = p2d;\np2d = p23; //error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n> 函数兼容性遵循多的可以兼容少的,也就是函数参数只能少传,不能多传.与接口之间兼容性相反\n\n\n# 函数返回值\nlet f = () => ({ name: "alice" });\nlet g = () => ({ name: "alice", location: "beijing" });\nf = g;\ng = f; //error\n\n\n1\n2\n3\n4\n> 少的可以兼容多的\n\n\n# 枚举兼容性\nenum fruit {\n  apple,\n  banana,\n}\nenum color {\n  red,\n  yellow,\n}\nlet fruit: fruit.apple;\nlet no: number = fruit.apple;\n// let color:color.red=fruit.apple //枚举之间不兼容\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n> 枚举类型与数字类型兼容，并且数字类型与枚举类型兼容。不同枚举类型之间是不兼容的\n\n\n# 类兼容\nclass a {\n  constructor(p: number, q: number) {}\n  id: number = 1;\n  // private name: string = "";\n}\nclass b {\n  static s = 1;\n  constructor(p: number) {}\n  id: number = 2;\n  // private name: string = "";\n}\nlet aa = new a(1, 2);\nlet bb = new b(1);\n//有私有成员不兼容\naa = bb;\nbb = aa;\nclass c1 extends a {}\nlet cc = new c1(1, 2);\ncc = aa;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n> 类与对象字面量和接口差不多，但有一点不同：类有静态部分和实例部分的类型。 比较两个类类型的对象时，只有实例的成员会被比较。 静态成员和构造函数不在比较的范围内\n\n\n> 类的私有成员和受保护成员会影响兼容性。 当检查类实例的兼容时，如果目标类型包含一个私有成员，那么源类型必须包含来自同一个类的这个私有成员。 同样地，这条规则也适用于包含受保护成员实例的类型检查。 这允许子类赋值给父类，但是不能赋值给其它有同样类型的类\n\n\n# 泛型兼容\ninterface empty<t> {}\nlet obj1: empty<number> = {};\nlet obj2: empty<string> = {};\nobj1 = obj2;\n\n\n1\n2\n3\n4\n> 以上代码,obj1 和 obj2 是兼容的,因为他们的结构使用类型参数时并没有不同\n\n\ninterface empty<t> {\n  value: t;\n}\nlet obj1: empty<number>;\nlet obj2: empty<string>;\nobj1 = obj2; //error\n\n\n1\n2\n3\n4\n5\n6\n> 以上代码比前一个代码多了一个成员,所以对于没指定泛型类型的泛型参数时,会把所有泛型参数当成 any 比较,然后用结果类型进行比较,前一个例子\n\n\nlet log3 = <t>(x: t): t => {\n  console.log(x);\n  return x;\n};\nlet log4 = <t>(y: t): t => {\n  console.log(y);\n  return y;\n};\nlog3 = log4;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n> 这是可以的,因为 (x: any) => any matches (y: any) => any',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/vite/",relativePath:"vite/README.md",key:"v-8d151e90",path:"/vite/",headers:[{level:2,title:"vite 优点",slug:"vite-优点",normalizedTitle:"vite 优点",charIndex:14},{level:2,title:"环境搭建",slug:"环境搭建",normalizedTitle:"环境搭建",charIndex:255},{level:3,title:"clone",slug:"clone",normalizedTitle:"clone",charIndex:262},{level:3,title:"软连接",slug:"软连接",normalizedTitle:"软连接",charIndex:325},{level:3,title:"init 一个项目",slug:"init-一个项目",normalizedTitle:"init 一个项目",charIndex:382},{level:3,title:"debug",slug:"debug",normalizedTitle:"debug",charIndex:599},{level:3,title:"vscode 版本",slug:"vscode-版本",normalizedTitle:"vscode 版本",charIndex:781}],lastUpdated:"7/26/2021, 8:59:01 AM",headersStr:"vite 优点 环境搭建 clone 软连接 init 一个项目 debug vscode 版本",content:'# vite 源码解析\n# vite 优点\n * 极速的服务启动,使用原生 ESM 文件，无需打包!\n * 轻量快速的热重载,无论应用程序大小如何，都始终极快的模块热重载（HMR）\n * 丰富的功能,对 TypeScript、JSX、CSS 等支持开箱即用\n * 优化的构建,可选 “多页应用” 或 “库” 模式的预配置 Rollup 构建\n * 通用的插件,在开发和构建之间共享 Rollup-superset 插件接口\n * 完全类型化的 API,灵活的 API 和完整 TypeScript 类型\n\n# 环境搭建\n# clone\ngit clone https://github.com/vitejs/vite\ncd vite\n\n\n1\n2\n# 软连接\nyarn\ncd packages/vite\nyarn dev\nyarn link\n\n\n1\n2\n3\n4\n# init 一个项目\n * 官方搭建方式搭建一个 vite 项目\n * 搭建一个简单的\n\nmkdir vite-base\ncd vite-base\nnpm init或者yarn init\nnpm install vite或者yarn add vite\n\n\n1\n2\n3\n4\n编辑package.json\n\n...\n\n  "scripts": {\n    "start": "vite",\n  },\n...\n\n\n1\n2\n3\n4\n5\n6\n# debug\n对于这样的源码项目我们该如何去调试呢,干巴巴的看源码没调试来得快,理解的快\n\n下面提供两种方式\n\n# 官方调试方式\n "scripts": {\n    "debug": "vite --debug --profile --force"\n  },\n\n\n1\n2\n3\n再运行yarn debug,就会出现如下的情况,这样我们就可以愉快的学习vite了\n\n# vscode 版本\n利用vscode调试功能,打断点进行代码流程查看\n\n * 第一步先去 vite 源码打个断点\n\n\n\n * 第二步启动vscode调试功能\n\n\n\n * ok!开始调试\n\n\n\n# 谷歌浏览器\n * 打开谷歌浏览器 nodejs 调试工具 1.打开谷歌浏览器,输入chrome://inspect/#devices 2.下载NIM扩展工具\n * 修改package.json\n\n"debug": "node --inspect-brk ./node_modules/vite/bin/vite.js",\n\n\n1\n * 运行\n\n\n\n * 浏览器\n\n\n\n * 如果安装NIM插件会自动打开调试工具\n\n> 比较推荐 vscode 调试',normalizedContent:'# vite 源码解析\n# vite 优点\n * 极速的服务启动,使用原生 esm 文件，无需打包!\n * 轻量快速的热重载,无论应用程序大小如何，都始终极快的模块热重载（hmr）\n * 丰富的功能,对 typescript、jsx、css 等支持开箱即用\n * 优化的构建,可选 “多页应用” 或 “库” 模式的预配置 rollup 构建\n * 通用的插件,在开发和构建之间共享 rollup-superset 插件接口\n * 完全类型化的 api,灵活的 api 和完整 typescript 类型\n\n# 环境搭建\n# clone\ngit clone https://github.com/vitejs/vite\ncd vite\n\n\n1\n2\n# 软连接\nyarn\ncd packages/vite\nyarn dev\nyarn link\n\n\n1\n2\n3\n4\n# init 一个项目\n * 官方搭建方式搭建一个 vite 项目\n * 搭建一个简单的\n\nmkdir vite-base\ncd vite-base\nnpm init或者yarn init\nnpm install vite或者yarn add vite\n\n\n1\n2\n3\n4\n编辑package.json\n\n...\n\n  "scripts": {\n    "start": "vite",\n  },\n...\n\n\n1\n2\n3\n4\n5\n6\n# debug\n对于这样的源码项目我们该如何去调试呢,干巴巴的看源码没调试来得快,理解的快\n\n下面提供两种方式\n\n# 官方调试方式\n "scripts": {\n    "debug": "vite --debug --profile --force"\n  },\n\n\n1\n2\n3\n再运行yarn debug,就会出现如下的情况,这样我们就可以愉快的学习vite了\n\n# vscode 版本\n利用vscode调试功能,打断点进行代码流程查看\n\n * 第一步先去 vite 源码打个断点\n\n\n\n * 第二步启动vscode调试功能\n\n\n\n * ok!开始调试\n\n\n\n# 谷歌浏览器\n * 打开谷歌浏览器 nodejs 调试工具 1.打开谷歌浏览器,输入chrome://inspect/#devices 2.下载nim扩展工具\n * 修改package.json\n\n"debug": "node --inspect-brk ./node_modules/vite/bin/vite.js",\n\n\n1\n * 运行\n\n\n\n * 浏览器\n\n\n\n * 如果安装nim插件会自动打开调试工具\n\n> 比较推荐 vscode 调试',charsets:{cjk:!0}},{title:"Vue-next",frontmatter:{},regularPath:"/vue-next/",relativePath:"vue-next/README.md",key:"v-ab257c10",path:"/vue-next/",lastUpdated:"12/29/2020, 9:28:38 AM",headersStr:null,content:"# Vue-next",normalizedContent:"# vue-next",charsets:{}},{title:"vue-next 迁移",frontmatter:{},regularPath:"/vue-next/vue-api.html",relativePath:"vue-next/vue-api.md",key:"v-475f5e83",path:"/vue-next/vue-api.html",headers:[{level:2,title:"reactive",slug:"reactive",normalizedTitle:"reactive",charIndex:16}],lastUpdated:"12/29/2020, 9:28:38 AM",headersStr:"reactive",content:"# vue-next 迁移\n# reactive\nconst {\n  reactive, // 创建响应式数据对象\n  ref, // 创建一个响应式的数据对象\n  toRefs, // 将响应式数据对象转换为单一响应式对象\n  isRef, // 判断某值是否是引用类型\n} = Vue;\n\n\n1\n2\n3\n4\n5\n6",normalizedContent:"# vue-next 迁移\n# reactive\nconst {\n  reactive, // 创建响应式数据对象\n  ref, // 创建一个响应式的数据对象\n  torefs, // 将响应式数据对象转换为单一响应式对象\n  isref, // 判断某值是否是引用类型\n} = vue;\n\n\n1\n2\n3\n4\n5\n6",charsets:{cjk:!0}},{title:"什么是vite",frontmatter:{},regularPath:"/vue-next/vue-vite.html",relativePath:"vue-next/vue-vite.md",key:"v-5b1ee393",path:"/vue-next/vue-vite.html",headers:[{level:2,title:"Vite",slug:"vite",normalizedTitle:"vite",charIndex:12},{level:2,title:"优点",slug:"优点",normalizedTitle:"优点",charIndex:82},{level:2,title:"在这里我们是用",slug:"在这里我们是用",normalizedTitle:"在这里我们是用",charIndex:416},{level:2,title:"配置依赖",slug:"配置依赖",normalizedTitle:"配置依赖",charIndex:460},{level:2,title:"配置 vite.config.js",slug:"配置-vite-config-js",normalizedTitle:"配置 vite.config.js",charIndex:697},{level:2,title:"配置main.ts",slug:"配置main-ts",normalizedTitle:"配置main.ts",charIndex:1144}],lastUpdated:"12/29/2020, 9:28:38 AM",headersStr:"Vite 优点 在这里我们是用 配置依赖 配置 vite.config.js 配置main.ts",content:"# 什么是vite\n# Vite\nVite是面向现代浏览器,基于原生模块系统 ESModule 实现了按需编译的Web 开发构建工具,基于Rollup打包.\n\n# 优点\n * 快速启动冷服务器\n * 即时热模块更换（HMR）\n * 真正的按需编译\n\n# vite初始化\n> npm\n\n\n npm init vite-app <project-name>\n cd <project-name>\n npm install\n npm run dev\n\n\n1\n2\n3\n4\n> yarn\n\n\nyarn create vite-app <project-name>\ncd <project-name>\nyarn\nyarn dev\n\n\n1\n2\n3\n4\n> 尽管Vite最初旨在与Vue 3配合使用,但它也可以支持其他框架.例如,尝试npm init vite-app --template react或--template preact\n\n\n# 在这里我们是用\nnpm init vite-app vite-ts-vue\n\n\n1\n# 配置依赖\ncd vite-ts-vue\nnpm install     // 安装项目依赖\nnpm i -S typescript vue-router@next // 集成 TypeScript vue-router \nnpm i -D eslint eslint-plugin-vue   // 集成 eslint \nnpm i less --save-dev   // 集成css预编译less\nnpm run dev \n\n\n1\n2\n3\n4\n5\n6\n# 项目配置\n# 配置 vite.config.js\n> 这个类似`vue-cli里面的vue.config.js\n\n\nimport path from 'path'\nmodule.exports = {\n  // 导入文件夹别名\n  alias: {\n    '/@/': path.resolve(__dirname, './src'),\n    '/@views/': path.resolve(__dirname, './src/views'),\n    '/@components/': path.resolve(__dirname, './src/components'),\n    '/@utils/': path.resolve(__dirname, './src/utils'),\n  },\n  // 配置Dep优化行为\n  optimizeDeps: {\n    include: [\"lodash\"]\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 配置main.ts\n 1. 修改main.js为main.ts,因为我们项目需要使用typescript开发\n 2. 修改index.html\n\n...\n<script type=\"module\" src=\"/src/main.js\"><\/script>\n...\n\n\n1\n2\n3\n> 如果不这样修改的话,会出现main.js找不到,其实这就是入口文件\n\n\n# 配置router\n 1. 在src中新建router文件夹,并在文件夹里面创建index.ts\n\nimport { RouteRecordRaw, createRouter, createWebHistory } from 'vue-router';\n\nconst routes: RouteRecordRaw[] = [\n    {\n        path: '/',\n        name: 'Home',\n        component: import('/@views/index.vue'),\n    }\n];\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes,\n});\n\nexport default router;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n 2. 新建页面index.vue\n\n<template>\n    <div>\n        Home\n        {{title}}\n    </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, reactive } from 'vue'\nexport default defineComponent({\n    setup(){\n        const title=reactive<String>(\"标题\")\n        return {title}\n    }\n})\n<\/script>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n3.修改index.css为index.less\n\n因为我们项目中使用less,如果你希望使用sass的话,那么在安装依赖的时候安装sass\n\n...\nnpm i sass --save-dev   \n...\n\n\n1\n2\n3\n4.在main.ts中引入router\n\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport './index.less'\nimport router from './router/index'\ncreateApp(App).use(router).mount('#app')\n\n\n1\n2\n3\n4\n5\n# 优化TS类型推断\n在src目录下创建shim.d.ts、source.d.ts\n\n> shim.d.ts\n\n\ndeclare module '*.vue' {\n  import Vue from 'vue';\n  export default Vue;\n}\n\n\n1\n2\n3\n4\n> source.d.ts`\n\n\ndeclare module '*.json';\ndeclare module '*.png';\ndeclare module '*.jpg';\n\n\n1\n2\n3\n具体代码见github",normalizedContent:"# 什么是vite\n# vite\nvite是面向现代浏览器,基于原生模块系统 esmodule 实现了按需编译的web 开发构建工具,基于rollup打包.\n\n# 优点\n * 快速启动冷服务器\n * 即时热模块更换（hmr）\n * 真正的按需编译\n\n# vite初始化\n> npm\n\n\n npm init vite-app <project-name>\n cd <project-name>\n npm install\n npm run dev\n\n\n1\n2\n3\n4\n> yarn\n\n\nyarn create vite-app <project-name>\ncd <project-name>\nyarn\nyarn dev\n\n\n1\n2\n3\n4\n> 尽管vite最初旨在与vue 3配合使用,但它也可以支持其他框架.例如,尝试npm init vite-app --template react或--template preact\n\n\n# 在这里我们是用\nnpm init vite-app vite-ts-vue\n\n\n1\n# 配置依赖\ncd vite-ts-vue\nnpm install     // 安装项目依赖\nnpm i -s typescript vue-router@next // 集成 typescript vue-router \nnpm i -d eslint eslint-plugin-vue   // 集成 eslint \nnpm i less --save-dev   // 集成css预编译less\nnpm run dev \n\n\n1\n2\n3\n4\n5\n6\n# 项目配置\n# 配置 vite.config.js\n> 这个类似`vue-cli里面的vue.config.js\n\n\nimport path from 'path'\nmodule.exports = {\n  // 导入文件夹别名\n  alias: {\n    '/@/': path.resolve(__dirname, './src'),\n    '/@views/': path.resolve(__dirname, './src/views'),\n    '/@components/': path.resolve(__dirname, './src/components'),\n    '/@utils/': path.resolve(__dirname, './src/utils'),\n  },\n  // 配置dep优化行为\n  optimizedeps: {\n    include: [\"lodash\"]\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 配置main.ts\n 1. 修改main.js为main.ts,因为我们项目需要使用typescript开发\n 2. 修改index.html\n\n...\n<script type=\"module\" src=\"/src/main.js\"><\/script>\n...\n\n\n1\n2\n3\n> 如果不这样修改的话,会出现main.js找不到,其实这就是入口文件\n\n\n# 配置router\n 1. 在src中新建router文件夹,并在文件夹里面创建index.ts\n\nimport { routerecordraw, createrouter, createwebhistory } from 'vue-router';\n\nconst routes: routerecordraw[] = [\n    {\n        path: '/',\n        name: 'home',\n        component: import('/@views/index.vue'),\n    }\n];\n\nconst router = createrouter({\n    history: createwebhistory(),\n    routes,\n});\n\nexport default router;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n 2. 新建页面index.vue\n\n<template>\n    <div>\n        home\n        {{title}}\n    </div>\n</template>\n<script lang=\"ts\">\nimport { definecomponent, reactive } from 'vue'\nexport default definecomponent({\n    setup(){\n        const title=reactive<string>(\"标题\")\n        return {title}\n    }\n})\n<\/script>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n3.修改index.css为index.less\n\n因为我们项目中使用less,如果你希望使用sass的话,那么在安装依赖的时候安装sass\n\n...\nnpm i sass --save-dev   \n...\n\n\n1\n2\n3\n4.在main.ts中引入router\n\nimport { createapp } from 'vue'\nimport app from './app.vue'\nimport './index.less'\nimport router from './router/index'\ncreateapp(app).use(router).mount('#app')\n\n\n1\n2\n3\n4\n5\n# 优化ts类型推断\n在src目录下创建shim.d.ts、source.d.ts\n\n> shim.d.ts\n\n\ndeclare module '*.vue' {\n  import vue from 'vue';\n  export default vue;\n}\n\n\n1\n2\n3\n4\n> source.d.ts`\n\n\ndeclare module '*.json';\ndeclare module '*.png';\ndeclare module '*.jpg';\n\n\n1\n2\n3\n具体代码见github",charsets:{cjk:!0}},{title:"Vue介绍",frontmatter:{},regularPath:"/vue/",relativePath:"vue/README.md",key:"v-72ebb29a",path:"/vue/",headers:[{level:2,title:"vue的MVVM",slug:"vue的mvvm",normalizedTitle:"vue的mvvm",charIndex:144}],lastUpdated:"6/14/2019, 7:37:55 AM",headersStr:"vue的MVVM",content:"# Vue介绍\nTIP\n\nVue.js（读音 /vjuː/, 类似于 view） 是一套构建用户界面的渐进式框架.\n\nVue 只关注视图层， 采用自底向上增量开发的设计.\n\nVue 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件.\n\nVue 学习起来非常简单\n\n# vue的MVVM",normalizedContent:"# vue介绍\ntip\n\nvue.js（读音 /vjuː/, 类似于 view） 是一套构建用户界面的渐进式框架.\n\nvue 只关注视图层， 采用自底向上增量开发的设计.\n\nvue 的目标是通过尽可能简单的 api 实现响应的数据绑定和组合的视图组件.\n\nvue 学习起来非常简单\n\n# vue的mvvm",charsets:{cjk:!0}},{title:"Vue源码结构",frontmatter:{},regularPath:"/vue/vue1.html",relativePath:"vue/vue1.md",key:"v-76f2b497",path:"/vue/vue1.html",lastUpdated:"6/14/2019, 7:37:55 AM",headersStr:null,content:"# Vue源码结构\n       ├─  build  打包相关的配置文件，其中最重要的是config.js.主要是根据不同的入口，打包为不同的文件.\n       │\n       ├─  dist 打包之后文件所在位置\n       │\n       ├─  examples 部分示例\n       │   \n       ├─  flow 因为Vue使用了[Flow](https://flow.org/)来进行静态类型检查，这里定义了声明了一些静态类型\n       │   \n       ├─  packages vue还可以分别生成其它的npm包\n       │\n       ├─  src 主要源码所在位置\n       │   |\n       |   ├─ compiler 模板解析的相关文件\n       |   |   |\n       |   |   ├─codegen 根据ast生成render函数\n       |   |   |\n       |   |   ├─directives 通用生成render函数之前需要处理的指令\n       |   |   |\n       |   |   └─parser 模板解析\n       |   |\n       |   ├─  core 核心代码\n       |   |    |\n       |   |    ├─ components 全局的组件，这里只有keep-alive\n       |   |    |\n       |   |    ├─ global-api 全局方法，也就是添加在Vue对象上的方法，比如Vue.use,Vue.extend,Vue.mixin等\n       |   |    |\n       |   |    ├─ instance 实例相关内容，包括实例方法，生命周期，事件等\n       |   |    |\n       |   |    ├─ observer 双向数据绑定相关文件\n       |   |    |\n       |   |    ├─ util 工具方法\n       |   |    |\n       |   |    └─vdom 虚拟dom相关\n       |   |\n       |   ├─ entries 入口文件，也就是build文件夹下config.js中配置的入口文件.看源码可以从这里看起\n       |   |\n       |   ├─ platforms 平台相关的内容\n       |   |    |\n       |   |    ├─web web端独有文件\n       |   |    |   |\n       |   |    |   ├─ compiler 编译阶段需要处理的指令和模块\n       |   |    |   |\n       |   |    |   ├─ runtime 运行阶段需要处理的组件、指令和模块\n       |   |    |   |\n       |   |    |   ├─ server 服务端渲染相关\n       |   |    |   |\n       |   |    |   └─ util 工具库\n       |   |    |\n       |   |    └─ weex weex端独有文件\n       |   |        |\n       |   |        ├─ compiler 编译阶段需要处理的指令和模块\n       |   |        |\n       |   |        ├─ runtime 运行阶段需要处理的组件、指令和模块\n       |   |        |\n       |   |        ├─ server 服务端渲染相关\n       |   |        |\n       |   |        └─ util 工具库\n       |   |         \n       |   ├─ server 服务端渲染相关\n       |   |\n       |   ├─ sfc\n       |   |   |\n       |   |   └─parser.js 包含了单文件 Vue 组件 (*.vue) 的解析逻辑.在 vue-template-compiler 包中被使用.\n       |   |\n       |   └─  shared 共享的工具方法\n       |   \n       └─ test 测试用例\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68",normalizedContent:"# vue源码结构\n       ├─  build  打包相关的配置文件，其中最重要的是config.js.主要是根据不同的入口，打包为不同的文件.\n       │\n       ├─  dist 打包之后文件所在位置\n       │\n       ├─  examples 部分示例\n       │   \n       ├─  flow 因为vue使用了[flow](https://flow.org/)来进行静态类型检查，这里定义了声明了一些静态类型\n       │   \n       ├─  packages vue还可以分别生成其它的npm包\n       │\n       ├─  src 主要源码所在位置\n       │   |\n       |   ├─ compiler 模板解析的相关文件\n       |   |   |\n       |   |   ├─codegen 根据ast生成render函数\n       |   |   |\n       |   |   ├─directives 通用生成render函数之前需要处理的指令\n       |   |   |\n       |   |   └─parser 模板解析\n       |   |\n       |   ├─  core 核心代码\n       |   |    |\n       |   |    ├─ components 全局的组件，这里只有keep-alive\n       |   |    |\n       |   |    ├─ global-api 全局方法，也就是添加在vue对象上的方法，比如vue.use,vue.extend,vue.mixin等\n       |   |    |\n       |   |    ├─ instance 实例相关内容，包括实例方法，生命周期，事件等\n       |   |    |\n       |   |    ├─ observer 双向数据绑定相关文件\n       |   |    |\n       |   |    ├─ util 工具方法\n       |   |    |\n       |   |    └─vdom 虚拟dom相关\n       |   |\n       |   ├─ entries 入口文件，也就是build文件夹下config.js中配置的入口文件.看源码可以从这里看起\n       |   |\n       |   ├─ platforms 平台相关的内容\n       |   |    |\n       |   |    ├─web web端独有文件\n       |   |    |   |\n       |   |    |   ├─ compiler 编译阶段需要处理的指令和模块\n       |   |    |   |\n       |   |    |   ├─ runtime 运行阶段需要处理的组件、指令和模块\n       |   |    |   |\n       |   |    |   ├─ server 服务端渲染相关\n       |   |    |   |\n       |   |    |   └─ util 工具库\n       |   |    |\n       |   |    └─ weex weex端独有文件\n       |   |        |\n       |   |        ├─ compiler 编译阶段需要处理的指令和模块\n       |   |        |\n       |   |        ├─ runtime 运行阶段需要处理的组件、指令和模块\n       |   |        |\n       |   |        ├─ server 服务端渲染相关\n       |   |        |\n       |   |        └─ util 工具库\n       |   |         \n       |   ├─ server 服务端渲染相关\n       |   |\n       |   ├─ sfc\n       |   |   |\n       |   |   └─parser.js 包含了单文件 vue 组件 (*.vue) 的解析逻辑.在 vue-template-compiler 包中被使用.\n       |   |\n       |   └─  shared 共享的工具方法\n       |   \n       └─ test 测试用例\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68",charsets:{cjk:!0}},{title:"虚拟dom预备知识",frontmatter:{},regularPath:"/vue/vue2.html",relativePath:"vue/vue2.md",key:"v-3d396f55",path:"/vue/vue2.html",headers:[{level:2,title:"DocumentFragment",slug:"documentfragment",normalizedTitle:"documentfragment",charIndex:14},{level:2,title:"VDOM",slug:"vdom",normalizedTitle:"vdom",charIndex:551},{level:3,title:"什么是虚拟DOM?",slug:"什么是虚拟dom",normalizedTitle:"什么是虚拟dom?",charIndex:558},{level:3,title:"为什么要用虚拟DOM?",slug:"为什么要用虚拟dom",normalizedTitle:"为什么要用虚拟dom?",charIndex:598},{level:3,title:"虚拟DOM的实现步骤?",slug:"虚拟dom的实现步骤",normalizedTitle:"虚拟dom的实现步骤?",charIndex:677},{level:2,title:"真实DOM与虚拟DOM示意图",slug:"真实dom与虚拟dom示意图",normalizedTitle:"真实dom与虚拟dom示意图",charIndex:807},{level:2,title:"key值的作用",slug:"key值的作用",normalizedTitle:"key值的作用",charIndex:852}],lastUpdated:"6/14/2019, 7:37:55 AM",headersStr:"DocumentFragment VDOM 什么是虚拟DOM? 为什么要用虚拟DOM? 虚拟DOM的实现步骤? 真实DOM与虚拟DOM示意图 key值的作用",content:"# 虚拟dom预备知识\n# DocumentFragment\nTIP\n\nDocumentFragment，文档片段接口，表示一个没有父级文件的最小文档对象.它被作为一个轻量版的 Document 使用，用于存储已排好版的或尚未打理好格式的XML片段.最大的区别是因为 DocumentFragment 不是真实DOM树的一部分，它的变化不会触发 DOM 树的（重新渲染) ，且不会导致性能等问题.\n\n最常用的方法是使用文档片段作为参数（例如，任何 Node 接口类似 Node.appendChild 和 Node.insertBefore) 的方法），这种情况下被添加(append)或被插入(inserted)的是片段的所有子节点, 而非片段本身.因为所有的节点会被一次插入到文档中，而这个操作仅发生一个重渲染的操作，而不是每个节点分别被插入到文档中，因为后者会发生多次重渲染的操作.\n\n该接口在Web组件中也非常有用: 模板 元素在其 HTMLTemplateElement.content 属性中包含了一个 DocumentFragment .\n\n可以使用document.createDocumentFragment 方法或者构造函数来创建一个空的 DocumentFragment.\n\n# VDOM\n# 什么是虚拟DOM?\n虚拟DOM的本质是一个和真实DOM结构类似的JS对象\n\n# 为什么要用虚拟DOM?\n虚拟DOM可以提高浏览器的渲染速度.对比操作JS对象，操作真实的DOM消耗的性能较多，频繁的操作DOM时，优势彰显的更为明显.\n\n# 虚拟DOM的实现步骤?\n1、在页面首次渲染时，将要渲染的数据全部加载到虚拟DOM中，而后在一次性渲染到真实DOM上\n\n2、在数据变化时，额外的生成一颗虚拟DOM树\n\n3、通过Diff算法对比修改的部分，而后将修改部分渲染到真实的DOM中\n\n4、释放内存\n\n# 真实DOM与虚拟DOM示意图\nTIP\n\n真实dom\n\n\n\nTIP\n\n虚拟DOM\n\n\n\n# key值的作用\n * 首先，在Vue中，存在一个DOM复用机制，会尽量的回收DOM元素进行复用，而这个机制本身是高效的，但很多时候也会造成不可预知的Bug，而在加了key值后，元素就有了一个标识，复用机制不会复用带key值的元素.而React也存在类似的机制.\n   \n   \n * 反之，若使用相同的key值，可以使组件复用，也有可能导致渲染内容缺失.\n   \n   \n * 因此，key值一般来说，最好是独一无二的.\n   \n   \n * 除此之外，虚拟DOM在使用Diff算法进行对比时，若存在key值，可以更高效更迅速.",normalizedContent:"# 虚拟dom预备知识\n# documentfragment\ntip\n\ndocumentfragment，文档片段接口，表示一个没有父级文件的最小文档对象.它被作为一个轻量版的 document 使用，用于存储已排好版的或尚未打理好格式的xml片段.最大的区别是因为 documentfragment 不是真实dom树的一部分，它的变化不会触发 dom 树的（重新渲染) ，且不会导致性能等问题.\n\n最常用的方法是使用文档片段作为参数（例如，任何 node 接口类似 node.appendchild 和 node.insertbefore) 的方法），这种情况下被添加(append)或被插入(inserted)的是片段的所有子节点, 而非片段本身.因为所有的节点会被一次插入到文档中，而这个操作仅发生一个重渲染的操作，而不是每个节点分别被插入到文档中，因为后者会发生多次重渲染的操作.\n\n该接口在web组件中也非常有用: 模板 元素在其 htmltemplateelement.content 属性中包含了一个 documentfragment .\n\n可以使用document.createdocumentfragment 方法或者构造函数来创建一个空的 documentfragment.\n\n# vdom\n# 什么是虚拟dom?\n虚拟dom的本质是一个和真实dom结构类似的js对象\n\n# 为什么要用虚拟dom?\n虚拟dom可以提高浏览器的渲染速度.对比操作js对象，操作真实的dom消耗的性能较多，频繁的操作dom时，优势彰显的更为明显.\n\n# 虚拟dom的实现步骤?\n1、在页面首次渲染时，将要渲染的数据全部加载到虚拟dom中，而后在一次性渲染到真实dom上\n\n2、在数据变化时，额外的生成一颗虚拟dom树\n\n3、通过diff算法对比修改的部分，而后将修改部分渲染到真实的dom中\n\n4、释放内存\n\n# 真实dom与虚拟dom示意图\ntip\n\n真实dom\n\n\n\ntip\n\n虚拟dom\n\n\n\n# key值的作用\n * 首先，在vue中，存在一个dom复用机制，会尽量的回收dom元素进行复用，而这个机制本身是高效的，但很多时候也会造成不可预知的bug，而在加了key值后，元素就有了一个标识，复用机制不会复用带key值的元素.而react也存在类似的机制.\n   \n   \n * 反之，若使用相同的key值，可以使组件复用，也有可能导致渲染内容缺失.\n   \n   \n * 因此，key值一般来说，最好是独一无二的.\n   \n   \n * 除此之外，虚拟dom在使用diff算法进行对比时，若存在key值，可以更高效更迅速.",charsets:{cjk:!0}},{title:"Web",frontmatter:{},regularPath:"/web/",relativePath:"web/README.md",key:"v-efab5a04",path:"/web/",lastUpdated:"5/31/2019, 9:40:37 AM",headersStr:null,content:"# Web\nTIP\n\n这里会介绍一些关于web的知识以及一些css知识",normalizedContent:"# web\ntip\n\n这里会介绍一些关于web的知识以及一些css知识",charsets:{cjk:!0}},{title:"常见的css片段收集",frontmatter:{},regularPath:"/web/common-css.html",relativePath:"web/common-css.md",key:"v-e4941b72",path:"/web/common-css.html",headers:[{level:2,title:"修改input placeholder样式",slug:"修改input-placeholder样式",normalizedTitle:"修改input placeholder样式",charIndex:15},{level:2,title:"改变输入框光标颜色",slug:"改变输入框光标颜色",normalizedTitle:"改变输入框光标颜色",charIndex:365},{level:2,title:'移除type="number"尾部的箭头',slug:"移除type-number-尾部的箭头",normalizedTitle:"移除type=&quot;number&quot;尾部的箭头",charIndex:null},{level:2,title:"自定文本选中样式",slug:"自定文本选中样式",normalizedTitle:"自定文本选中样式",charIndex:558},{level:2,title:"文本溢出省略",slug:"文本溢出省略",normalizedTitle:"文本溢出省略",charIndex:651},{level:3,title:"单行",slug:"单行",normalizedTitle:"单行",charIndex:660},{level:3,title:"多行",slug:"多行",normalizedTitle:"多行",charIndex:831},{level:2,title:"三角形",slug:"三角形",normalizedTitle:"三角形",charIndex:1036},{level:2,title:"画箭头",slug:"画箭头",normalizedTitle:"画箭头",charIndex:1837},{level:2,title:"全站致哀",slug:"全站致哀",normalizedTitle:"全站致哀",charIndex:2971}],lastUpdated:"10/8/2021, 3:09:35 AM",headersStr:'修改input placeholder样式 改变输入框光标颜色 移除type="number"尾部的箭头 自定文本选中样式 文本溢出省略 单行 多行 三角形 画箭头 全站致哀',content:"# 常见的css片段收集\n# 修改input placeholder样式\n\ninput {\n    width: 300px;\n    height: 30px;\n    border: none;\n    outline: none;\n    display: block;\n    margin: 15px;\n    border: solid 1px #dee0e9;\n    padding: 0 15px;\n    border-radius: 15px;\n}\n\ninput::-webkit-input-placeholder {\n    color: #babbc1;\n    font-size: 12px;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 改变输入框光标颜色\ninput {\n    caret-color: #ffd476;\n}\n\n\n\n1\n2\n3\n4\n# 移除type=\"number\"尾部的箭头\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n}\n\n\n1\n2\n3\n4\n# 自定文本选中样式\n.text::selection {\n    color: #ffffff;\n    background-color: #ff4c9f;\n}\n\n\n1\n2\n3\n4\n# 文本溢出省略\n# 单行\n.one-line-ellipsis {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    /* 非必须，只是为了制造一行放不下的效果 */\n    max-width: 375px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 多行\n.more-line-ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    /* 设置n行，也包括1 */\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 三角形\n\n\n\n<style>\n\n  .triangle {\n    display: inline-block;\n    margin-right: 10px;\n    /* 基础样式 */\n    border: solid 10px transparent;\n  }\n\n  /*下*/\n  .triangle.bottom {\n    border-top-color: #0097a7;\n  }\n\n  /*上*/\n  .triangle.top {\n    border-bottom-color: #b2ebf2;\n  }\n\n  /*左*/\n  .triangle.left {\n    border-right-color: #00bcd4;\n  }\n\n  /*右*/\n  .triangle.right {\n    border-left-color: #009688;\n  }\n\n</style>\n\n<body>\n<div id='app'>\n  <div class='box'>\n    <div class='box-inner'>\n      <div class='triangle bottom'></div>\n      <div class='triangle right'></div>\n      <div class='triangle top'></div>\n      <div class='triangle left'></div>\n    </div>\n  </div>\n</div>\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# 画箭头\n\n\n\n<style>\n\n  .arrow {\n    display: inline-block;\n    margin-right: 10px;\n    /* 基础样式 */\n    width: 0;\n    height: 0;\n    /* 基础样式 */\n    border: 16px solid;\n    border-color: transparent #CDDC39 transparent transparent;\n    position: relative;\n  }\n\n  .arrow::after {\n    content: \"\";\n    position: absolute;\n    /* 通过位移覆盖背景 */\n    right: -20px;\n    top: -16px;\n    border: 16px solid;\n    border-color: transparent #fff transparent transparent;\n  }\n\n  /*下*/\n  .arrow.bottom {\n    transform: rotate(270deg);\n  }\n\n  /*上*/\n  .arrow.top {\n    transform: rotate(90deg);\n  }\n\n  /*左*/\n  .arrow.left {\n    transform: rotate(180deg);\n  }\n\n  /*右*/\n  .arrow.right {\n    transform: rotate(0deg);\n  }\n\n\n</style>\n\n<body>\n<div id='app'>\n  <div class='box'>\n    <div class='box-inner'>\n      <div class='arrow bottom'></div>\n      <div class='arrow right'></div>\n      <div class='arrow top'></div>\n      <div class='arrow left'></div>\n    </div>\n  </div>\n</div>\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n# 全站致哀\nbody {\n    filter: grayscale(1);\n}\n\n\n1\n2\n3",normalizedContent:"# 常见的css片段收集\n# 修改input placeholder样式\n\ninput {\n    width: 300px;\n    height: 30px;\n    border: none;\n    outline: none;\n    display: block;\n    margin: 15px;\n    border: solid 1px #dee0e9;\n    padding: 0 15px;\n    border-radius: 15px;\n}\n\ninput::-webkit-input-placeholder {\n    color: #babbc1;\n    font-size: 12px;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 改变输入框光标颜色\ninput {\n    caret-color: #ffd476;\n}\n\n\n\n1\n2\n3\n4\n# 移除type=\"number\"尾部的箭头\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n}\n\n\n1\n2\n3\n4\n# 自定文本选中样式\n.text::selection {\n    color: #ffffff;\n    background-color: #ff4c9f;\n}\n\n\n1\n2\n3\n4\n# 文本溢出省略\n# 单行\n.one-line-ellipsis {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    /* 非必须，只是为了制造一行放不下的效果 */\n    max-width: 375px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 多行\n.more-line-ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    /* 设置n行，也包括1 */\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 三角形\n\n\n\n<style>\n\n  .triangle {\n    display: inline-block;\n    margin-right: 10px;\n    /* 基础样式 */\n    border: solid 10px transparent;\n  }\n\n  /*下*/\n  .triangle.bottom {\n    border-top-color: #0097a7;\n  }\n\n  /*上*/\n  .triangle.top {\n    border-bottom-color: #b2ebf2;\n  }\n\n  /*左*/\n  .triangle.left {\n    border-right-color: #00bcd4;\n  }\n\n  /*右*/\n  .triangle.right {\n    border-left-color: #009688;\n  }\n\n</style>\n\n<body>\n<div id='app'>\n  <div class='box'>\n    <div class='box-inner'>\n      <div class='triangle bottom'></div>\n      <div class='triangle right'></div>\n      <div class='triangle top'></div>\n      <div class='triangle left'></div>\n    </div>\n  </div>\n</div>\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# 画箭头\n\n\n\n<style>\n\n  .arrow {\n    display: inline-block;\n    margin-right: 10px;\n    /* 基础样式 */\n    width: 0;\n    height: 0;\n    /* 基础样式 */\n    border: 16px solid;\n    border-color: transparent #cddc39 transparent transparent;\n    position: relative;\n  }\n\n  .arrow::after {\n    content: \"\";\n    position: absolute;\n    /* 通过位移覆盖背景 */\n    right: -20px;\n    top: -16px;\n    border: 16px solid;\n    border-color: transparent #fff transparent transparent;\n  }\n\n  /*下*/\n  .arrow.bottom {\n    transform: rotate(270deg);\n  }\n\n  /*上*/\n  .arrow.top {\n    transform: rotate(90deg);\n  }\n\n  /*左*/\n  .arrow.left {\n    transform: rotate(180deg);\n  }\n\n  /*右*/\n  .arrow.right {\n    transform: rotate(0deg);\n  }\n\n\n</style>\n\n<body>\n<div id='app'>\n  <div class='box'>\n    <div class='box-inner'>\n      <div class='arrow bottom'></div>\n      <div class='arrow right'></div>\n      <div class='arrow top'></div>\n      <div class='arrow left'></div>\n    </div>\n  </div>\n</div>\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n# 全站致哀\nbody {\n    filter: grayscale(1);\n}\n\n\n1\n2\n3",charsets:{cjk:!0}},{title:"Css移动端适配",frontmatter:{},regularPath:"/web/css.html",relativePath:"web/css.md",key:"v-fd3e4dda",path:"/web/css.html",headers:[{level:2,title:"1.媒体查询",slug:"_1-媒体查询",normalizedTitle:"1.媒体查询",charIndex:346},{level:2,title:"2.自动设置html的font-size",slug:"_2-自动设置html的font-size",normalizedTitle:"2.自动设置html的font-size",charIndex:959},{level:2,title:"3.designWidth:设计稿的实际宽度值，需要根据实际设置,maxWidth:制作稿的最大宽度值，需要根据实际设置",slug:"_3-designwidth-设计稿的实际宽度值-需要根据实际设置-maxwidth-制作稿的最大宽度值-需要根据实际设置",normalizedTitle:"3.designwidth:设计稿的实际宽度值，需要根据实际设置,maxwidth:制作稿的最大宽度值，需要根据实际设置",charIndex:1599}],lastUpdated:"5/31/2019, 9:40:37 AM",headersStr:"1.媒体查询 2.自动设置html的font-size 3.designWidth:设计稿的实际宽度值，需要根据实际设置,maxWidth:制作稿的最大宽度值，需要根据实际设置",content:'# Css移动端适配\n前一段时间群里有人问我rem相关的问题,一直想整理一下,可是都忘记了.今天终于抽出时间来整理一下相关知识点! 说到rem就要谈到移动端布局,现在很多人在移动端布局上面还是用px,我们先来谈谈px;px:像素(Pixel),相对单位长度,px相对于屏幕分辨率而言的. 我们为什么使用rem,rem的诞生也是webapp的推动,rem完美解决了webapp的屏幕适应问题,大家都知道移动端设备屏幕大小各异,像素也是各个不同的,那么webapp使用px就相当鸡肋,因为大家都知道px是像素,由屏幕的分辨率决定,用px在很大程度上影响webapp的美观. 下面介绍如何使用rem,首先我们得设置rem的初始值,然后我们每个尺寸按照这个初始值进行换算得出rem值进行布局.\n\n# 1.媒体查询\nhtml {\n    font-size : 20px;\n}\n@media only screen and (min-width: 401px){\n    html {\n        font-size: 25px !important;\n    }\n}\n@media only screen and (min-width: 428px){\n    html {\n        font-size: 26.75px !important;\n    }\n}\n@media only screen and (min-width: 481px){\n    html {\n        font-size: 30px !important; \n    }\n}\n@media only screen and (min-width: 569px){\n    html {\n        font-size: 35px !important; \n    }\n}\n@media only screen and (min-width: 641px){\n    html {\n        font-size: 40px !important; \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 2.自动设置html的font-size\n (function (doc, win) {   \n            var docEl = doc.documentElement,   \n            resizeEvt = \'orientationchange\' in window ? \'orientationchange\' : \'resize\',   \n            recalc = function () {   \n            var clientWidth = docEl.clientWidth;   \n            if (!clientWidth) return;   \n            docEl.style.fontSize = 20 * (clientWidth / 320) + \'px\';   \n        };   \n        if (!doc.addEventListener) return;   \n        win.addEventListener(resizeEvt, recalc, false);   \n        doc.addEventListener(\'DOMContentLoaded\', recalc, false);   \n        })(document, window);   \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 3.designWidth:设计稿的实际宽度值，需要根据实际设置,maxWidth:制作稿的最大宽度值，需要根据实际设置\n(function(designWidth, maxWidth) {\n\tvar doc = document,\n\twin = window,\n\tdocEl = doc.documentElement,\n\tremStyle = document.createElement("style"),\n\ttid;\n\n\tfunction refreshRem() {\n\t\tvar width = docEl.getBoundingClientRect().width;\n\t\tmaxWidth = maxWidth || 540;\n\t\twidth>maxWidth && (width=maxWidth);\n\t\tvar rem = width * 100 / designWidth;\n\t\tremStyle.innerHTML = \'html{font-size:\' + rem + \'px;}\';\n\t}\n\n\tif (docEl.firstElementChild) {\n\t\tdocEl.firstElementChild.appendChild(remStyle);\n\t} else {\n\t\tvar wrap = doc.createElement("div");\n\t\twrap.appendChild(remStyle);\n\t\tdoc.write(wrap.innerHTML);\n\t\twrap = null;\n\t}\n\t//要等 wiewport 设置好后才能执行 refreshRem，不然 refreshRem 会执行2次；\n\trefreshRem();\n\n\twin.addEventListener("resize", function() {\n\t\tclearTimeout(tid); //防止执行两次\n\t\ttid = setTimeout(refreshRem, 300);\n\t}, false);\n\n\twin.addEventListener("pageshow", function(e) {\n\t\tif (e.persisted) { // 浏览器后退的时候重新计算\n\t\t\tclearTimeout(tid);\n\t\t\ttid = setTimeout(refreshRem, 300);\n\t\t}\n\t}, false);\n\n\tif (doc.readyState === "complete") {\n\t\tdoc.body.style.fontSize = "16px";\n\t} else {\n\t\tdoc.addEventListener("DOMContentLoaded", function(e) {\n\t\t\tdoc.body.style.fontSize = "16px";\n\t\t}, false);\n\t}\n})(750, 750);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46',normalizedContent:'# css移动端适配\n前一段时间群里有人问我rem相关的问题,一直想整理一下,可是都忘记了.今天终于抽出时间来整理一下相关知识点! 说到rem就要谈到移动端布局,现在很多人在移动端布局上面还是用px,我们先来谈谈px;px:像素(pixel),相对单位长度,px相对于屏幕分辨率而言的. 我们为什么使用rem,rem的诞生也是webapp的推动,rem完美解决了webapp的屏幕适应问题,大家都知道移动端设备屏幕大小各异,像素也是各个不同的,那么webapp使用px就相当鸡肋,因为大家都知道px是像素,由屏幕的分辨率决定,用px在很大程度上影响webapp的美观. 下面介绍如何使用rem,首先我们得设置rem的初始值,然后我们每个尺寸按照这个初始值进行换算得出rem值进行布局.\n\n# 1.媒体查询\nhtml {\n    font-size : 20px;\n}\n@media only screen and (min-width: 401px){\n    html {\n        font-size: 25px !important;\n    }\n}\n@media only screen and (min-width: 428px){\n    html {\n        font-size: 26.75px !important;\n    }\n}\n@media only screen and (min-width: 481px){\n    html {\n        font-size: 30px !important; \n    }\n}\n@media only screen and (min-width: 569px){\n    html {\n        font-size: 35px !important; \n    }\n}\n@media only screen and (min-width: 641px){\n    html {\n        font-size: 40px !important; \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 2.自动设置html的font-size\n (function (doc, win) {   \n            var docel = doc.documentelement,   \n            resizeevt = \'orientationchange\' in window ? \'orientationchange\' : \'resize\',   \n            recalc = function () {   \n            var clientwidth = docel.clientwidth;   \n            if (!clientwidth) return;   \n            docel.style.fontsize = 20 * (clientwidth / 320) + \'px\';   \n        };   \n        if (!doc.addeventlistener) return;   \n        win.addeventlistener(resizeevt, recalc, false);   \n        doc.addeventlistener(\'domcontentloaded\', recalc, false);   \n        })(document, window);   \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 3.designwidth:设计稿的实际宽度值，需要根据实际设置,maxwidth:制作稿的最大宽度值，需要根据实际设置\n(function(designwidth, maxwidth) {\n\tvar doc = document,\n\twin = window,\n\tdocel = doc.documentelement,\n\tremstyle = document.createelement("style"),\n\ttid;\n\n\tfunction refreshrem() {\n\t\tvar width = docel.getboundingclientrect().width;\n\t\tmaxwidth = maxwidth || 540;\n\t\twidth>maxwidth && (width=maxwidth);\n\t\tvar rem = width * 100 / designwidth;\n\t\tremstyle.innerhtml = \'html{font-size:\' + rem + \'px;}\';\n\t}\n\n\tif (docel.firstelementchild) {\n\t\tdocel.firstelementchild.appendchild(remstyle);\n\t} else {\n\t\tvar wrap = doc.createelement("div");\n\t\twrap.appendchild(remstyle);\n\t\tdoc.write(wrap.innerhtml);\n\t\twrap = null;\n\t}\n\t//要等 wiewport 设置好后才能执行 refreshrem，不然 refreshrem 会执行2次；\n\trefreshrem();\n\n\twin.addeventlistener("resize", function() {\n\t\tcleartimeout(tid); //防止执行两次\n\t\ttid = settimeout(refreshrem, 300);\n\t}, false);\n\n\twin.addeventlistener("pageshow", function(e) {\n\t\tif (e.persisted) { // 浏览器后退的时候重新计算\n\t\t\tcleartimeout(tid);\n\t\t\ttid = settimeout(refreshrem, 300);\n\t\t}\n\t}, false);\n\n\tif (doc.readystate === "complete") {\n\t\tdoc.body.style.fontsize = "16px";\n\t} else {\n\t\tdoc.addeventlistener("domcontentloaded", function(e) {\n\t\t\tdoc.body.style.fontsize = "16px";\n\t\t}, false);\n\t}\n})(750, 750);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46',charsets:{cjk:!0}},{title:"markdown-emoji",frontmatter:{},regularPath:"/web/emoji.html",relativePath:"web/emoji.md",key:"v-dbde789a",path:"/web/emoji.html",headers:[{level:2,title:"人物",slug:"人物",normalizedTitle:"人物",charIndex:79},{level:2,title:"自然",slug:"自然",normalizedTitle:"自然",charIndex:85},{level:2,title:"事物",slug:"事物",normalizedTitle:"事物",charIndex:91},{level:2,title:"地点",slug:"地点",normalizedTitle:"地点",charIndex:97},{level:2,title:"符号",slug:"符号",normalizedTitle:"符号",charIndex:47}],lastUpdated:"2/4/2021, 12:52:07 AM",headersStr:"人物 自然 事物 地点 符号",content:"# markdown-emoji\nMarkdown 语法支持添加 emoji 表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情\n\n\n\n\n * 人物\n * 自然\n * 事物\n * 地点\n * 符号\n\n# 人物\n:bowtie: :bowtie:                   😄 :smile:                           😆 :laughing:              \n😊 :blush:                           😃 :smiley:                          ☺️ :relaxed:               \n😏 :smirk:                           😍 :heart_eyes:                      😘 :kissing_heart:         \n😚 :kissing_closed_eyes:             😳 :flushed:                         😌 :relieved:              \n😆 :satisfied:                       😁 :grin:                            😉 :wink:                  \n😜 :stuck_out_tongue_winking_eye:    😝 :stuck_out_tongue_closed_eyes:    😀 :grinning:              \n😗 :kissing:                         😙 :kissing_smiling_eyes:            😛 :stuck_out_tongue:      \n😴 :sleeping:                        😟 :worried:                         😦 :frowning:              \n😧 :anguished:                       😮 :open_mouth:                      😬 :grimacing:             \n😕 :confused:                        😯 :hushed:                          😑 :expressionless:        \n😒 :unamused:                        😅 :sweat_smile:                     😓 :sweat:                 \n😥 :disappointed_relieved:           😩 :weary:                           😔 :pensive:               \n😞 :disappointed:                    😖 :confounded:                      😨 :fearful:               \n😰 :cold_sweat:                      😣 :persevere:                       😢 :cry:                   \n😭 :sob:                             😂 :joy:                             😲 :astonished:            \n😱 :scream:                          :neckbeard: :neckbeard:             😫 :tired_face:            \n😠 :angry:                           😡 :rage:                            😤 :triumph:               \n😪 :sleepy:                          😋 :yum:                             😷 :mask:                  \n😎 :sunglasses:                      😵 :dizzy_face:                      👿 :imp:                   \n😈 :smiling_imp:                     😐 :neutral_face:                    😶 :no_mouth:              \n😇 :innocent:                        👽 :alien:                           💛 :yellow_heart:          \n💙 :blue_heart:                      💜 :purple_heart:                    ❤️ :heart:                 \n💚 :green_heart:                     💔 :broken_heart:                    💓 :heartbeat:             \n💗 :heartpulse:                      💕 :two_hearts:                      💞 :revolving_hearts:      \n💘 :cupid:                           💖 :sparkling_heart:                 ✨ :sparkles:              \n⭐️ :star:                            🌟 :star2:                           💫 :dizzy:                 \n💥 :boom:                            💥 :collision:                       💢 :anger:                 \n❗️ :exclamation:                     ❓ :question:                        ❕ :grey_exclamation:      \n❔ :grey_question:                   💤 :zzz:                             💨 :dash:                  \n💦 :sweat_drops:                     🎶 :notes:                           🎵 :musical_note:          \n🔥 :fire:                            💩 :hankey:                          💩 :poop:                  \n💩 :shit:                            👍 :+1:                              👍 :thumbsup:              \n👎 :-1:                              👎 :thumbsdown:                      👌 :ok_hand:               \n👊 :punch:                           👊 :facepunch:                       ✊ :fist:                  \n✌️ :v:                               👋 :wave:                            ✋ :hand:                  \n✋ :raised_hand:                     👐 :open_hands:                      ☝️ :point_up:              \n👇 :point_down:                      👈 :point_left:                      👉 :point_right:           \n🙌 :raised_hands:                    🙏 :pray:                            👆 :point_up_2:            \n👏 :clap:                            💪 :muscle:                          🤘 :metal:                 \n🖕 :fu:                              🚶 :walking:                         🏃 :runner:                \n🏃 :running:                         👫 :couple:                          👪 :family:                \n👬 :two_men_holding_hands:           👭 :two_women_holding_hands:         💃 :dancer:                \n👯 :dancers:                         🙆 :ok_woman:                        🙅 :no_good:               \n💁 :information_desk_person:         🙋 :raising_hand:                    👰 :bride_with_veil:       \n🙎 :person_with_pouting_face:        🙍 :person_frowning:                 🙇 :bow:                   \n:couplekiss: :couplekiss:           💑 :couple_with_heart:               💆 :massage:               \n💇 :haircut:                         💅 :nail_care:                       👦 :boy:                   \n👧 :girl:                            👩 :woman:                           👨 :man:                   \n👶 :baby:                            👵 :older_woman:                     👴 :older_man:             \n👱 :person_with_blond_hair:          👲 :man_with_gua_pi_mao:             👳 :man_with_turban:       \n👷 :construction_worker:             👮 :cop:                             👼 :angel:                 \n👸 :princess:                        😺 :smiley_cat:                      😸 :smile_cat:             \n😻 :heart_eyes_cat:                  😽 :kissing_cat:                     😼 :smirk_cat:             \n🙀 :scream_cat:                      😿 :crying_cat_face:                 😹 :joy_cat:               \n😾 :pouting_cat:                     👹 :japanese_ogre:                   👺 :japanese_goblin:       \n🙈 :see_no_evil:                     🙉 :hear_no_evil:                    🙊 :speak_no_evil:         \n💂 :guardsman:                       💀 :skull:                           🐾 :feet:                  \n👄 :lips:                            💋 :kiss:                            💧 :droplet:               \n👂 :ear:                             👀 :eyes:                            👃 :nose:                  \n👅 :tongue:                          💌 :love_letter:                     👤 :bust_in_silhouette:    \n👥 :busts_in_silhouette:             💬 :speech_balloon:                  💭 :thought_balloon:       \n:feelsgood: :feelsgood:             :finnadie: :finnadie:               :goberserk: :goberserk:   \n:godmode: :godmode:                 :hurtrealbad: :hurtrealbad:         :rage1: :rage1:           \n:rage2: :rage2:                     :rage3: :rage3:                     :rage4: :rage4:           \n:suspect: :suspect:                 :trollface: :trollface:                                       \n\n# 自然\n☀️ :sunny:                           ☔️ :umbrella:                ☁️ :cloud:                          \n❄️ :snowflake:                       ⛄️ :snowman:                 ⚡️ :zap:                            \n🌀 :cyclone:                         🌁 :foggy:                   🌊 :ocean:                          \n🐱 :cat:                             🐶 :dog:                     🐭 :mouse:                          \n🐹 :hamster:                         🐰 :rabbit:                  🐺 :wolf:                           \n🐸 :frog:                            🐯 :tiger:                   🐨 :koala:                          \n🐻 :bear:                            🐷 :pig:                     🐽 :pig_nose:                       \n🐮 :cow:                             🐗 :boar:                    🐵 :monkey_face:                    \n🐒 :monkey:                          🐴 :horse:                   🐎 :racehorse:                      \n🐫 :camel:                           🐑 :sheep:                   🐘 :elephant:                       \n🐼 :panda_face:                      🐍 :snake:                   🐦 :bird:                           \n🐤 :baby_chick:                      🐥 :hatched_chick:           🐣 :hatching_chick:                 \n🐔 :chicken:                         🐧 :penguin:                 🐢 :turtle:                         \n🐛 :bug:                             🐝 :honeybee:                🐜 :ant:                            \n🐞 :beetle:                          🐌 :snail:                   🐙 :octopus:                        \n🐠 :tropical_fish:                   🐟 :fish:                    🐳 :whale:                          \n🐋 :whale2:                          🐬 :dolphin:                 🐄 :cow2:                           \n🐏 :ram:                             🐀 :rat:                     🐃 :water_buffalo:                  \n🐅 :tiger2:                          🐇 :rabbit2:                 🐉 :dragon:                         \n🐐 :goat:                            🐓 :rooster:                 🐕 :dog2:                           \n🐖 :pig2:                            🐁 :mouse2:                  🐂 :ox:                             \n🐲 :dragon_face:                     🐡 :blowfish:                🐊 :crocodile:                      \n🐪 :dromedary_camel:                 🐆 :leopard:                 🐈 :cat2:                           \n🐩 :poodle:                          🐾 :paw_prints:              💐 :bouquet:                        \n🌸 :cherry_blossom:                  🌷 :tulip:                   🍀 :four_leaf_clover:               \n🌹 :rose:                            🌻 :sunflower:               🌺 :hibiscus:                       \n🍁 :maple_leaf:                      🍃 :leaves:                  🍂 :fallen_leaf:                    \n🌿 :herb:                            🍄 :mushroom:                🌵 :cactus:                         \n🌴 :palm_tree:                       🌲 :evergreen_tree:          🌳 :deciduous_tree:                 \n🌰 :chestnut:                        🌱 :seedling:                🌼 :blossom:                        \n🌾 :ear_of_rice:                     🐚 :shell:                   🌐 :globe_with_meridians:           \n🌞 :sun_with_face:                   🌝 :full_moon_with_face:     🌚 :new_moon_with_face:             \n🌑 :new_moon:                        🌒 :waxing_crescent_moon:    🌓 :first_quarter_moon:             \n🌔 :waxing_gibbous_moon:             🌕 :full_moon:               🌖 :waning_gibbous_moon:            \n🌗 :last_quarter_moon:               🌘 :waning_crescent_moon:    🌜 :last_quarter_moon_with_face:    \n🌛 :first_quarter_moon_with_face:    🌔 :moon:                    🌍 :earth_africa:                   \n🌎 :earth_americas:                  🌏 :earth_asia:              🌋 :volcano:                        \n🌌 :milky_way:                       ⛅️ :partly_sunny:            :octocat: :octocat:                \n:squirrel: :squirrel:                                                                              \n\n# 事物\n🎍 :bamboo:                            💝 :gift_heart:                    🎎 :dolls:                    \n🎒 :school_satchel:                    🎓 :mortar_board:                  🎏 :flags:                    \n🎆 :fireworks:                         🎇 :sparkler:                      🎐 :wind_chime:               \n🎑 :rice_scene:                        🎃 :jack_o_lantern:                👻 :ghost:                    \n🎅 :santa:                             🎄 :christmas_tree:                🎁 :gift:                     \n🔔 :bell:                              🔕 :no_bell:                       🎋 :tanabata_tree:            \n🎉 :tada:                              🎊 :confetti_ball:                 🎈 :balloon:                  \n🔮 :crystal_ball:                      💿 :cd:                            📀 :dvd:                      \n💾 :floppy_disk:                       📷 :camera:                        📹 :video_camera:             \n🎥 :movie_camera:                      💻 :computer:                      📺 :tv:                       \n📱 :iphone:                            ☎️ :phone:                         ☎️ :telephone:                \n📞 :telephone_receiver:                📟 :pager:                         📠 :fax:                      \n💽 :minidisc:                          📼 :vhs:                           🔉 :sound:                    \n🔈 :speaker:                           🔇 :mute:                          📢 :loudspeaker:              \n📣 :mega:                              ⌛️ :hourglass:                     ⏳ :hourglass_flowing_sand:   \n⏰ :alarm_clock:                       ⌚️ :watch:                         📻 :radio:                    \n📡 :satellite:                         ➿ :loop:                          🔍 :mag:                      \n🔎 :mag_right:                         🔓 :unlock:                        🔒 :lock:                     \n🔏 :lock_with_ink_pen:                 🔐 :closed_lock_with_key:          🔑 :key:                      \n💡 :bulb:                              🔦 :flashlight:                    🔆 :high_brightness:          \n🔅 :low_brightness:                    🔌 :electric_plug:                 🔋 :battery:                  \n📲 :calling:                           ✉️ :email:                         📫 :mailbox:                  \n📮 :postbox:                           🛀 :bath:                          🛁 :bathtub:                  \n🚿 :shower:                            🚽 :toilet:                        🔧 :wrench:                   \n🔩 :nut_and_bolt:                      🔨 :hammer:                        💺 :seat:                     \n💰 :moneybag:                          💴 :yen:                           💵 :dollar:                   \n💷 :pound:                             💶 :euro:                          💳 :credit_card:              \n💸 :money_with_wings:                  📧 :e-mail:                        📥 :inbox_tray:               \n📤 :outbox_tray:                       ✉️ :envelope:                      📨 :incoming_envelope:        \n📯 :postal_horn:                       📪 :mailbox_closed:                📬 :mailbox_with_mail:        \n📭 :mailbox_with_no_mail:              🚪 :door:                          🚬 :smoking:                  \n💣 :bomb:                              🔫 :gun:                           🔪 :hocho:                    \n💊 :pill:                              💉 :syringe:                       📄 :page_facing_up:           \n📃 :page_with_curl:                    📑 :bookmark_tabs:                 📊 :bar_chart:                \n📈 :chart_with_upwards_trend:          📉 :chart_with_downwards_trend:    📜 :scroll:                   \n📋 :clipboard:                         📆 :calendar:                      📅 :date:                     \n📇 :card_index:                        📁 :file_folder:                   📂 :open_file_folder:         \n✂️ :scissors:                          📌 :pushpin:                       📎 :paperclip:                \n✒️ :black_nib:                         ✏️ :pencil2:                       📏 :straight_ruler:           \n📐 :triangular_ruler:                  📕 :closed_book:                   📗 :green_book:               \n📘 :blue_book:                         📙 :orange_book:                   📓 :notebook:                 \n📔 :notebook_with_decorative_cover:    📒 :ledger:                        📚 :books:                    \n🔖 :bookmark:                          📛 :name_badge:                    🔬 :microscope:               \n🔭 :telescope:                         📰 :newspaper:                     🏈 :football:                 \n🏀 :basketball:                        ⚽️ :soccer:                        ⚾️ :baseball:                 \n🎾 :tennis:                            🎱 :8ball:                         🏉 :rugby_football:           \n🎳 :bowling:                           ⛳️ :golf:                          🚵 :mountain_bicyclist:       \n🚴 :bicyclist:                         🏇 :horse_racing:                  🏂 :snowboarder:              \n🏊 :swimmer:                           🏄 :surfer:                        🎿 :ski:                      \n♠️ :spades:                            ♥️ :hearts:                        ♣️ :clubs:                    \n♦️ :diamonds:                          💎 :gem:                           💍 :ring:                     \n🏆 :trophy:                            🎼 :musical_score:                 🎹 :musical_keyboard:         \n🎻 :violin:                            👾 :space_invader:                 🎮 :video_game:               \n🃏 :black_joker:                       🎴 :flower_playing_cards:          🎲 :game_die:                 \n🎯 :dart:                              🀄️ :mahjong:                       🎬 :clapper:                  \n📝 :memo:                              📝 :pencil:                        📖 :book:                     \n🎨 :art:                               🎤 :microphone:                    🎧 :headphones:               \n🎺 :trumpet:                           🎷 :saxophone:                     🎸 :guitar:                   \n👞 :shoe:                              👡 :sandal:                        👠 :high_heel:                \n💄 :lipstick:                          👢 :boot:                          👕 :shirt:                    \n👕 :tshirt:                            👔 :necktie:                       👚 :womans_clothes:           \n👗 :dress:                             🎽 :running_shirt_with_sash:       👖 :jeans:                    \n👘 :kimono:                            👙 :bikini:                        🎀 :ribbon:                   \n🎩 :tophat:                            👑 :crown:                         👒 :womans_hat:               \n👞 :mans_shoe:                         🌂 :closed_umbrella:               💼 :briefcase:                \n👜 :handbag:                           👝 :pouch:                         👛 :purse:                    \n👓 :eyeglasses:                        🎣 :fishing_pole_and_fish:         ☕️ :coffee:                   \n🍵 :tea:                               🍶 :sake:                          🍼 :baby_bottle:              \n🍺 :beer:                              🍻 :beers:                         🍸 :cocktail:                 \n🍹 :tropical_drink:                    🍷 :wine_glass:                    🍴 :fork_and_knife:           \n🍕 :pizza:                             🍔 :hamburger:                     🍟 :fries:                    \n🍗 :poultry_leg:                       🍖 :meat_on_bone:                  🍝 :spaghetti:                \n🍛 :curry:                             🍤 :fried_shrimp:                  🍱 :bento:                    \n🍣 :sushi:                             🍥 :fish_cake:                     🍙 :rice_ball:                \n🍘 :rice_cracker:                      🍚 :rice:                          🍜 :ramen:                    \n🍲 :stew:                              🍢 :oden:                          🍡 :dango:                    \n🥚 :egg:                               🍞 :bread:                         🍩 :doughnut:                 \n🍮 :custard:                           🍦 :icecream:                      🍨 :ice_cream:                \n🍧 :shaved_ice:                        🎂 :birthday:                      🍰 :cake:                     \n🍪 :cookie:                            🍫 :chocolate_bar:                 🍬 :candy:                    \n🍭 :lollipop:                          🍯 :honey_pot:                     🍎 :apple:                    \n🍏 :green_apple:                       🍊 :tangerine:                     🍋 :lemon:                    \n🍒 :cherries:                          🍇 :grapes:                        🍉 :watermelon:               \n🍓 :strawberry:                        🍑 :peach:                         🍈 :melon:                    \n🍌 :banana:                            🍐 :pear:                          🍍 :pineapple:                \n🍠 :sweet_potato:                      🍆 :eggplant:                      🍅 :tomato:                   \n🌽 :corn:                                                                                             \n\n# 地点\n🏠 :house:                  🏡 :house_with_garden:          🏫 :school:                    \n🏢 :office:                 🏣 :post_office:                🏥 :hospital:                  \n🏦 :bank:                   🏪 :convenience_store:          🏩 :love_hotel:                \n🏨 :hotel:                  💒 :wedding:                    ⛪️ :church:                    \n🏬 :department_store:       🏤 :european_post_office:       🌇 :city_sunrise:              \n🌆 :city_sunset:            🏯 :japanese_castle:            🏰 :european_castle:           \n⛺️ :tent:                   🏭 :factory:                    🗼 :tokyo_tower:               \n🗾 :japan:                  🗻 :mount_fuji:                 🌄 :sunrise_over_mountains:    \n🌅 :sunrise:                🌠 :stars:                      🗽 :statue_of_liberty:         \n🌉 :bridge_at_night:        🎠 :carousel_horse:             🌈 :rainbow:                   \n🎡 :ferris_wheel:           ⛲️ :fountain:                   🎢 :roller_coaster:            \n🚢 :ship:                   🚤 :speedboat:                  ⛵️ :boat:                      \n⛵️ :sailboat:               🚣 :rowboat:                    ⚓️ :anchor:                    \n🚀 :rocket:                 ✈️ :airplane:                   🚁 :helicopter:                \n🚂 :steam_locomotive:       🚊 :tram:                       🚞 :mountain_railway:          \n🚲 :bike:                   🚡 :aerial_tramway:             🚟 :suspension_railway:        \n🚠 :mountain_cableway:      🚜 :tractor:                    🚙 :blue_car:                  \n🚘 :oncoming_automobile:    🚗 :car:                        🚗 :red_car:                   \n🚕 :taxi:                   🚖 :oncoming_taxi:              🚛 :articulated_lorry:         \n🚌 :bus:                    🚍 :oncoming_bus:               🚨 :rotating_light:            \n🚓 :police_car:             🚔 :oncoming_police_car:        🚒 :fire_engine:               \n🚑 :ambulance:              🚐 :minibus:                    🚚 :truck:                     \n🚋 :train:                  🚉 :station:                    🚆 :train2:                    \n🚅 :bullettrain_front:      🚄 :bullettrain_side:           🚈 :light_rail:                \n🚝 :monorail:               🚃 :railway_car:                🚎 :trolleybus:                \n🎫 :ticket:                 ⛽️ :fuelpump:                   🚦 :vertical_traffic_light:    \n🚥 :traffic_light:          ⚠️ :warning:                    🚧 :construction:              \n🔰 :beginner:               🏧 :atm:                        🎰 :slot_machine:              \n🚏 :busstop:                💈 :barber:                     ♨️ :hotsprings:                \n🏁 :checkered_flag:         🎌 :crossed_flags:              🏮 :izakaya_lantern:           \n🗿 :moyai:                  🎪 :circus_tent:                🎭 :performing_arts:           \n📍 :round_pushpin:          🚩 :triangular_flag_on_post:    🇯🇵 :jp:                        \n🇰🇷 :kr:                     🇨🇳 :cn:                         🇺🇸 :us:                        \n🇫🇷 :fr:                     🇪🇸 :es:                         🇮🇹 :it:                        \n🇷🇺 :ru:                     🇬🇧 :gb:                         🇬🇧 :uk:                        \n🇩🇪 :de:                                                                                  \n\n# 符号\n1️⃣ :one:                                2️⃣ :two:                           3️⃣ :three:                        \n4️⃣ :four:                               5️⃣ :five:                          6️⃣ :six:                          \n7️⃣ :seven:                              8️⃣ :eight:                         9️⃣ :nine:                         \n🔟 :keycap_ten:                         🔢 :1234:                          0️⃣ :zero:                         \n#️⃣ :hash:                               🔣 :symbols:                       ◀️ :arrow_backward:               \n⬇️ :arrow_down:                         ▶️ :arrow_forward:                 ⬅️ :arrow_left:                   \n🔠 :capital_abcd:                       🔡 :abcd:                          🔤 :abc:                          \n↙️ :arrow_lower_left:                   ↘️ :arrow_lower_right:             ➡️ :arrow_right:                  \n⬆️ :arrow_up:                           ↖️ :arrow_upper_left:              ↗️ :arrow_upper_right:            \n⏬ :arrow_double_down:                  ⏫ :arrow_double_up:               🔽 :arrow_down_small:             \n⤵️ :arrow_heading_down:                 ⤴️ :arrow_heading_up:              ↩️ :leftwards_arrow_with_hook:    \n↪️ :arrow_right_hook:                   ↔️ :left_right_arrow:              ↕️ :arrow_up_down:                \n🔼 :arrow_up_small:                     🔃 :arrows_clockwise:              🔄 :arrows_counterclockwise:      \n⏪ :rewind:                             ⏩ :fast_forward:                  ℹ️ :information_source:           \n🆗 :ok:                                 🔀 :twisted_rightwards_arrows:     🔁 :repeat:                       \n🔂 :repeat_one:                         🆕 :new:                           🔝 :top:                          \n🆙 :up:                                 🆒 :cool:                          🆓 :free:                         \n🆖 :ng:                                 🎦 :cinema:                        🈁 :koko:                         \n📶 :signal_strength:                    :u5272: :u5272:                   :u5408: :u5408:                  \n:u55b6: :u55b6:                        :u6307: :u6307:                   :u6708: :u6708:                  \n:u6709: :u6709:                        🈵 :u6e80:                         :u7121: :u7121:                  \n:u7533: :u7533:                        :u7a7a: :u7a7a:                   :u7981: :u7981:                  \n🈂️ :sa:                                 🚻 :restroom:                      🚹 :mens:                         \n🚺 :womens:                             🚼 :baby_symbol:                   🚭 :no_smoking:                   \n🅿️ :parking:                            ♿️ :wheelchair:                    🚇 :metro:                        \n🛄 :baggage_claim:                      🉑 :accept:                        🚾 :wc:                           \n🚰 :potable_water:                      🚮 :put_litter_in_its_place:       ㊙️ :secret:                       \n㊗️ :congratulations:                    Ⓜ️ :m:                             🛂 :passport_control:             \n🛅 :left_luggage:                       🛃 :customs:                       🉐 :ideograph_advantage:          \n🆑 :cl:                                 🆘 :sos:                           🆔 :id:                           \n🚫 :no_entry_sign:                      🔞 :underage:                      📵 :no_mobile_phones:             \n🚯 :do_not_litter:                      🚱 :non-potable_water:             🚳 :no_bicycles:                  \n🚷 :no_pedestrians:                     🚸 :children_crossing:             ⛔️ :no_entry:                     \n✳️ :eight_spoked_asterisk:              ✴️ :eight_pointed_black_star:      💟 :heart_decoration:             \n🆚 :vs:                                 📳 :vibration_mode:                📴 :mobile_phone_off:             \n💹 :chart:                              💱 :currency_exchange:             ♈️ :aries:                        \n♉️ :taurus:                             ♊️ :gemini:                        ♋️ :cancer:                       \n♌️ :leo:                                ♍️ :virgo:                         ♎️ :libra:                        \n♏️ :scorpius:                           ♐️ :sagittarius:                   ♑️ :capricorn:                    \n♒️ :aquarius:                           ♓️ :pisces:                        ⛎ :ophiuchus:                    \n🔯 :six_pointed_star:                   ❎ :negative_squared_cross_mark:   🅰️ :a:                            \n🅱️ :b:                                  🆎 :ab:                            🅾️ :o2:                           \n💠 :diamond_shape_with_a_dot_inside:    ♻️ :recycle:                       🔚 :end:                          \n🔛 :on:                                 🔜 :soon:                          🕐 :clock1:                       \n🕜 :clock130:                           🕙 :clock10:                       🕥 :clock1030:                    \n🕚 :clock11:                            🕦 :clock1130:                     🕛 :clock12:                      \n🕧 :clock1230:                          🕑 :clock2:                        🕝 :clock230:                     \n🕒 :clock3:                             🕞 :clock330:                      🕓 :clock4:                       \n🕟 :clock430:                           🕔 :clock5:                        🕠 :clock530:                     \n🕕 :clock6:                             🕡 :clock630:                      🕖 :clock7:                       \n🕢 :clock730:                           🕗 :clock8:                        🕣 :clock830:                     \n🕘 :clock9:                             🕤 :clock930:                      💲 :heavy_dollar_sign:            \n©️ :copyright:                          ®️ :registered:                    ™️ :tm:                           \n❌ :x:                                  ❗️ :heavy_exclamation_mark:        ‼️ :bangbang:                     \n⁉️ :interrobang:                        ⭕️ :o:                             ✖️ :heavy_multiplication_x:       \n➕ :heavy_plus_sign:                    ➖ :heavy_minus_sign:              ➗ :heavy_division_sign:          \n💮 :white_flower:                       💯 :100:                           ✔️ :heavy_check_mark:             \n☑️ :ballot_box_with_check:              🔘 :radio_button:                  🔗 :link:                         \n➰ :curly_loop:                         〰️ :wavy_dash:                     〽️ :part_alternation_mark:        \n🔱 :trident:                            :black_square: :black_square:     :white_square: :white_square:    \n✅ :white_check_mark:                   🔲 :black_square_button:           🔳 :white_square_button:          \n⚫️ :black_circle:                       ⚪️ :white_circle:                  🔴 :red_circle:                   \n🔵 :large_blue_circle:                  🔷 :large_blue_diamond:            🔶 :large_orange_diamond:         \n🔹 :small_blue_diamond:                 🔸 :small_orange_diamond:          🔺 :small_red_triangle:           \n🔻 :small_red_triangle_down:            :shipit: :shipit:",normalizedContent:"# markdown-emoji\nmarkdown 语法支持添加 emoji 表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情\n\n\n\n\n * 人物\n * 自然\n * 事物\n * 地点\n * 符号\n\n# 人物\n:bowtie: :bowtie:                   😄 :smile:                           😆 :laughing:              \n😊 :blush:                           😃 :smiley:                          ☺️ :relaxed:               \n😏 :smirk:                           😍 :heart_eyes:                      😘 :kissing_heart:         \n😚 :kissing_closed_eyes:             😳 :flushed:                         😌 :relieved:              \n😆 :satisfied:                       😁 :grin:                            😉 :wink:                  \n😜 :stuck_out_tongue_winking_eye:    😝 :stuck_out_tongue_closed_eyes:    😀 :grinning:              \n😗 :kissing:                         😙 :kissing_smiling_eyes:            😛 :stuck_out_tongue:      \n😴 :sleeping:                        😟 :worried:                         😦 :frowning:              \n😧 :anguished:                       😮 :open_mouth:                      😬 :grimacing:             \n😕 :confused:                        😯 :hushed:                          😑 :expressionless:        \n😒 :unamused:                        😅 :sweat_smile:                     😓 :sweat:                 \n😥 :disappointed_relieved:           😩 :weary:                           😔 :pensive:               \n😞 :disappointed:                    😖 :confounded:                      😨 :fearful:               \n😰 :cold_sweat:                      😣 :persevere:                       😢 :cry:                   \n😭 :sob:                             😂 :joy:                             😲 :astonished:            \n😱 :scream:                          :neckbeard: :neckbeard:             😫 :tired_face:            \n😠 :angry:                           😡 :rage:                            😤 :triumph:               \n😪 :sleepy:                          😋 :yum:                             😷 :mask:                  \n😎 :sunglasses:                      😵 :dizzy_face:                      👿 :imp:                   \n😈 :smiling_imp:                     😐 :neutral_face:                    😶 :no_mouth:              \n😇 :innocent:                        👽 :alien:                           💛 :yellow_heart:          \n💙 :blue_heart:                      💜 :purple_heart:                    ❤️ :heart:                 \n💚 :green_heart:                     💔 :broken_heart:                    💓 :heartbeat:             \n💗 :heartpulse:                      💕 :two_hearts:                      💞 :revolving_hearts:      \n💘 :cupid:                           💖 :sparkling_heart:                 ✨ :sparkles:              \n⭐️ :star:                            🌟 :star2:                           💫 :dizzy:                 \n💥 :boom:                            💥 :collision:                       💢 :anger:                 \n❗️ :exclamation:                     ❓ :question:                        ❕ :grey_exclamation:      \n❔ :grey_question:                   💤 :zzz:                             💨 :dash:                  \n💦 :sweat_drops:                     🎶 :notes:                           🎵 :musical_note:          \n🔥 :fire:                            💩 :hankey:                          💩 :poop:                  \n💩 :shit:                            👍 :+1:                              👍 :thumbsup:              \n👎 :-1:                              👎 :thumbsdown:                      👌 :ok_hand:               \n👊 :punch:                           👊 :facepunch:                       ✊ :fist:                  \n✌️ :v:                               👋 :wave:                            ✋ :hand:                  \n✋ :raised_hand:                     👐 :open_hands:                      ☝️ :point_up:              \n👇 :point_down:                      👈 :point_left:                      👉 :point_right:           \n🙌 :raised_hands:                    🙏 :pray:                            👆 :point_up_2:            \n👏 :clap:                            💪 :muscle:                          🤘 :metal:                 \n🖕 :fu:                              🚶 :walking:                         🏃 :runner:                \n🏃 :running:                         👫 :couple:                          👪 :family:                \n👬 :two_men_holding_hands:           👭 :two_women_holding_hands:         💃 :dancer:                \n👯 :dancers:                         🙆 :ok_woman:                        🙅 :no_good:               \n💁 :information_desk_person:         🙋 :raising_hand:                    👰 :bride_with_veil:       \n🙎 :person_with_pouting_face:        🙍 :person_frowning:                 🙇 :bow:                   \n:couplekiss: :couplekiss:           💑 :couple_with_heart:               💆 :massage:               \n💇 :haircut:                         💅 :nail_care:                       👦 :boy:                   \n👧 :girl:                            👩 :woman:                           👨 :man:                   \n👶 :baby:                            👵 :older_woman:                     👴 :older_man:             \n👱 :person_with_blond_hair:          👲 :man_with_gua_pi_mao:             👳 :man_with_turban:       \n👷 :construction_worker:             👮 :cop:                             👼 :angel:                 \n👸 :princess:                        😺 :smiley_cat:                      😸 :smile_cat:             \n😻 :heart_eyes_cat:                  😽 :kissing_cat:                     😼 :smirk_cat:             \n🙀 :scream_cat:                      😿 :crying_cat_face:                 😹 :joy_cat:               \n😾 :pouting_cat:                     👹 :japanese_ogre:                   👺 :japanese_goblin:       \n🙈 :see_no_evil:                     🙉 :hear_no_evil:                    🙊 :speak_no_evil:         \n💂 :guardsman:                       💀 :skull:                           🐾 :feet:                  \n👄 :lips:                            💋 :kiss:                            💧 :droplet:               \n👂 :ear:                             👀 :eyes:                            👃 :nose:                  \n👅 :tongue:                          💌 :love_letter:                     👤 :bust_in_silhouette:    \n👥 :busts_in_silhouette:             💬 :speech_balloon:                  💭 :thought_balloon:       \n:feelsgood: :feelsgood:             :finnadie: :finnadie:               :goberserk: :goberserk:   \n:godmode: :godmode:                 :hurtrealbad: :hurtrealbad:         :rage1: :rage1:           \n:rage2: :rage2:                     :rage3: :rage3:                     :rage4: :rage4:           \n:suspect: :suspect:                 :trollface: :trollface:                                       \n\n# 自然\n☀️ :sunny:                           ☔️ :umbrella:                ☁️ :cloud:                          \n❄️ :snowflake:                       ⛄️ :snowman:                 ⚡️ :zap:                            \n🌀 :cyclone:                         🌁 :foggy:                   🌊 :ocean:                          \n🐱 :cat:                             🐶 :dog:                     🐭 :mouse:                          \n🐹 :hamster:                         🐰 :rabbit:                  🐺 :wolf:                           \n🐸 :frog:                            🐯 :tiger:                   🐨 :koala:                          \n🐻 :bear:                            🐷 :pig:                     🐽 :pig_nose:                       \n🐮 :cow:                             🐗 :boar:                    🐵 :monkey_face:                    \n🐒 :monkey:                          🐴 :horse:                   🐎 :racehorse:                      \n🐫 :camel:                           🐑 :sheep:                   🐘 :elephant:                       \n🐼 :panda_face:                      🐍 :snake:                   🐦 :bird:                           \n🐤 :baby_chick:                      🐥 :hatched_chick:           🐣 :hatching_chick:                 \n🐔 :chicken:                         🐧 :penguin:                 🐢 :turtle:                         \n🐛 :bug:                             🐝 :honeybee:                🐜 :ant:                            \n🐞 :beetle:                          🐌 :snail:                   🐙 :octopus:                        \n🐠 :tropical_fish:                   🐟 :fish:                    🐳 :whale:                          \n🐋 :whale2:                          🐬 :dolphin:                 🐄 :cow2:                           \n🐏 :ram:                             🐀 :rat:                     🐃 :water_buffalo:                  \n🐅 :tiger2:                          🐇 :rabbit2:                 🐉 :dragon:                         \n🐐 :goat:                            🐓 :rooster:                 🐕 :dog2:                           \n🐖 :pig2:                            🐁 :mouse2:                  🐂 :ox:                             \n🐲 :dragon_face:                     🐡 :blowfish:                🐊 :crocodile:                      \n🐪 :dromedary_camel:                 🐆 :leopard:                 🐈 :cat2:                           \n🐩 :poodle:                          🐾 :paw_prints:              💐 :bouquet:                        \n🌸 :cherry_blossom:                  🌷 :tulip:                   🍀 :four_leaf_clover:               \n🌹 :rose:                            🌻 :sunflower:               🌺 :hibiscus:                       \n🍁 :maple_leaf:                      🍃 :leaves:                  🍂 :fallen_leaf:                    \n🌿 :herb:                            🍄 :mushroom:                🌵 :cactus:                         \n🌴 :palm_tree:                       🌲 :evergreen_tree:          🌳 :deciduous_tree:                 \n🌰 :chestnut:                        🌱 :seedling:                🌼 :blossom:                        \n🌾 :ear_of_rice:                     🐚 :shell:                   🌐 :globe_with_meridians:           \n🌞 :sun_with_face:                   🌝 :full_moon_with_face:     🌚 :new_moon_with_face:             \n🌑 :new_moon:                        🌒 :waxing_crescent_moon:    🌓 :first_quarter_moon:             \n🌔 :waxing_gibbous_moon:             🌕 :full_moon:               🌖 :waning_gibbous_moon:            \n🌗 :last_quarter_moon:               🌘 :waning_crescent_moon:    🌜 :last_quarter_moon_with_face:    \n🌛 :first_quarter_moon_with_face:    🌔 :moon:                    🌍 :earth_africa:                   \n🌎 :earth_americas:                  🌏 :earth_asia:              🌋 :volcano:                        \n🌌 :milky_way:                       ⛅️ :partly_sunny:            :octocat: :octocat:                \n:squirrel: :squirrel:                                                                              \n\n# 事物\n🎍 :bamboo:                            💝 :gift_heart:                    🎎 :dolls:                    \n🎒 :school_satchel:                    🎓 :mortar_board:                  🎏 :flags:                    \n🎆 :fireworks:                         🎇 :sparkler:                      🎐 :wind_chime:               \n🎑 :rice_scene:                        🎃 :jack_o_lantern:                👻 :ghost:                    \n🎅 :santa:                             🎄 :christmas_tree:                🎁 :gift:                     \n🔔 :bell:                              🔕 :no_bell:                       🎋 :tanabata_tree:            \n🎉 :tada:                              🎊 :confetti_ball:                 🎈 :balloon:                  \n🔮 :crystal_ball:                      💿 :cd:                            📀 :dvd:                      \n💾 :floppy_disk:                       📷 :camera:                        📹 :video_camera:             \n🎥 :movie_camera:                      💻 :computer:                      📺 :tv:                       \n📱 :iphone:                            ☎️ :phone:                         ☎️ :telephone:                \n📞 :telephone_receiver:                📟 :pager:                         📠 :fax:                      \n💽 :minidisc:                          📼 :vhs:                           🔉 :sound:                    \n🔈 :speaker:                           🔇 :mute:                          📢 :loudspeaker:              \n📣 :mega:                              ⌛️ :hourglass:                     ⏳ :hourglass_flowing_sand:   \n⏰ :alarm_clock:                       ⌚️ :watch:                         📻 :radio:                    \n📡 :satellite:                         ➿ :loop:                          🔍 :mag:                      \n🔎 :mag_right:                         🔓 :unlock:                        🔒 :lock:                     \n🔏 :lock_with_ink_pen:                 🔐 :closed_lock_with_key:          🔑 :key:                      \n💡 :bulb:                              🔦 :flashlight:                    🔆 :high_brightness:          \n🔅 :low_brightness:                    🔌 :electric_plug:                 🔋 :battery:                  \n📲 :calling:                           ✉️ :email:                         📫 :mailbox:                  \n📮 :postbox:                           🛀 :bath:                          🛁 :bathtub:                  \n🚿 :shower:                            🚽 :toilet:                        🔧 :wrench:                   \n🔩 :nut_and_bolt:                      🔨 :hammer:                        💺 :seat:                     \n💰 :moneybag:                          💴 :yen:                           💵 :dollar:                   \n💷 :pound:                             💶 :euro:                          💳 :credit_card:              \n💸 :money_with_wings:                  📧 :e-mail:                        📥 :inbox_tray:               \n📤 :outbox_tray:                       ✉️ :envelope:                      📨 :incoming_envelope:        \n📯 :postal_horn:                       📪 :mailbox_closed:                📬 :mailbox_with_mail:        \n📭 :mailbox_with_no_mail:              🚪 :door:                          🚬 :smoking:                  \n💣 :bomb:                              🔫 :gun:                           🔪 :hocho:                    \n💊 :pill:                              💉 :syringe:                       📄 :page_facing_up:           \n📃 :page_with_curl:                    📑 :bookmark_tabs:                 📊 :bar_chart:                \n📈 :chart_with_upwards_trend:          📉 :chart_with_downwards_trend:    📜 :scroll:                   \n📋 :clipboard:                         📆 :calendar:                      📅 :date:                     \n📇 :card_index:                        📁 :file_folder:                   📂 :open_file_folder:         \n✂️ :scissors:                          📌 :pushpin:                       📎 :paperclip:                \n✒️ :black_nib:                         ✏️ :pencil2:                       📏 :straight_ruler:           \n📐 :triangular_ruler:                  📕 :closed_book:                   📗 :green_book:               \n📘 :blue_book:                         📙 :orange_book:                   📓 :notebook:                 \n📔 :notebook_with_decorative_cover:    📒 :ledger:                        📚 :books:                    \n🔖 :bookmark:                          📛 :name_badge:                    🔬 :microscope:               \n🔭 :telescope:                         📰 :newspaper:                     🏈 :football:                 \n🏀 :basketball:                        ⚽️ :soccer:                        ⚾️ :baseball:                 \n🎾 :tennis:                            🎱 :8ball:                         🏉 :rugby_football:           \n🎳 :bowling:                           ⛳️ :golf:                          🚵 :mountain_bicyclist:       \n🚴 :bicyclist:                         🏇 :horse_racing:                  🏂 :snowboarder:              \n🏊 :swimmer:                           🏄 :surfer:                        🎿 :ski:                      \n♠️ :spades:                            ♥️ :hearts:                        ♣️ :clubs:                    \n♦️ :diamonds:                          💎 :gem:                           💍 :ring:                     \n🏆 :trophy:                            🎼 :musical_score:                 🎹 :musical_keyboard:         \n🎻 :violin:                            👾 :space_invader:                 🎮 :video_game:               \n🃏 :black_joker:                       🎴 :flower_playing_cards:          🎲 :game_die:                 \n🎯 :dart:                              🀄️ :mahjong:                       🎬 :clapper:                  \n📝 :memo:                              📝 :pencil:                        📖 :book:                     \n🎨 :art:                               🎤 :microphone:                    🎧 :headphones:               \n🎺 :trumpet:                           🎷 :saxophone:                     🎸 :guitar:                   \n👞 :shoe:                              👡 :sandal:                        👠 :high_heel:                \n💄 :lipstick:                          👢 :boot:                          👕 :shirt:                    \n👕 :tshirt:                            👔 :necktie:                       👚 :womans_clothes:           \n👗 :dress:                             🎽 :running_shirt_with_sash:       👖 :jeans:                    \n👘 :kimono:                            👙 :bikini:                        🎀 :ribbon:                   \n🎩 :tophat:                            👑 :crown:                         👒 :womans_hat:               \n👞 :mans_shoe:                         🌂 :closed_umbrella:               💼 :briefcase:                \n👜 :handbag:                           👝 :pouch:                         👛 :purse:                    \n👓 :eyeglasses:                        🎣 :fishing_pole_and_fish:         ☕️ :coffee:                   \n🍵 :tea:                               🍶 :sake:                          🍼 :baby_bottle:              \n🍺 :beer:                              🍻 :beers:                         🍸 :cocktail:                 \n🍹 :tropical_drink:                    🍷 :wine_glass:                    🍴 :fork_and_knife:           \n🍕 :pizza:                             🍔 :hamburger:                     🍟 :fries:                    \n🍗 :poultry_leg:                       🍖 :meat_on_bone:                  🍝 :spaghetti:                \n🍛 :curry:                             🍤 :fried_shrimp:                  🍱 :bento:                    \n🍣 :sushi:                             🍥 :fish_cake:                     🍙 :rice_ball:                \n🍘 :rice_cracker:                      🍚 :rice:                          🍜 :ramen:                    \n🍲 :stew:                              🍢 :oden:                          🍡 :dango:                    \n🥚 :egg:                               🍞 :bread:                         🍩 :doughnut:                 \n🍮 :custard:                           🍦 :icecream:                      🍨 :ice_cream:                \n🍧 :shaved_ice:                        🎂 :birthday:                      🍰 :cake:                     \n🍪 :cookie:                            🍫 :chocolate_bar:                 🍬 :candy:                    \n🍭 :lollipop:                          🍯 :honey_pot:                     🍎 :apple:                    \n🍏 :green_apple:                       🍊 :tangerine:                     🍋 :lemon:                    \n🍒 :cherries:                          🍇 :grapes:                        🍉 :watermelon:               \n🍓 :strawberry:                        🍑 :peach:                         🍈 :melon:                    \n🍌 :banana:                            🍐 :pear:                          🍍 :pineapple:                \n🍠 :sweet_potato:                      🍆 :eggplant:                      🍅 :tomato:                   \n🌽 :corn:                                                                                             \n\n# 地点\n🏠 :house:                  🏡 :house_with_garden:          🏫 :school:                    \n🏢 :office:                 🏣 :post_office:                🏥 :hospital:                  \n🏦 :bank:                   🏪 :convenience_store:          🏩 :love_hotel:                \n🏨 :hotel:                  💒 :wedding:                    ⛪️ :church:                    \n🏬 :department_store:       🏤 :european_post_office:       🌇 :city_sunrise:              \n🌆 :city_sunset:            🏯 :japanese_castle:            🏰 :european_castle:           \n⛺️ :tent:                   🏭 :factory:                    🗼 :tokyo_tower:               \n🗾 :japan:                  🗻 :mount_fuji:                 🌄 :sunrise_over_mountains:    \n🌅 :sunrise:                🌠 :stars:                      🗽 :statue_of_liberty:         \n🌉 :bridge_at_night:        🎠 :carousel_horse:             🌈 :rainbow:                   \n🎡 :ferris_wheel:           ⛲️ :fountain:                   🎢 :roller_coaster:            \n🚢 :ship:                   🚤 :speedboat:                  ⛵️ :boat:                      \n⛵️ :sailboat:               🚣 :rowboat:                    ⚓️ :anchor:                    \n🚀 :rocket:                 ✈️ :airplane:                   🚁 :helicopter:                \n🚂 :steam_locomotive:       🚊 :tram:                       🚞 :mountain_railway:          \n🚲 :bike:                   🚡 :aerial_tramway:             🚟 :suspension_railway:        \n🚠 :mountain_cableway:      🚜 :tractor:                    🚙 :blue_car:                  \n🚘 :oncoming_automobile:    🚗 :car:                        🚗 :red_car:                   \n🚕 :taxi:                   🚖 :oncoming_taxi:              🚛 :articulated_lorry:         \n🚌 :bus:                    🚍 :oncoming_bus:               🚨 :rotating_light:            \n🚓 :police_car:             🚔 :oncoming_police_car:        🚒 :fire_engine:               \n🚑 :ambulance:              🚐 :minibus:                    🚚 :truck:                     \n🚋 :train:                  🚉 :station:                    🚆 :train2:                    \n🚅 :bullettrain_front:      🚄 :bullettrain_side:           🚈 :light_rail:                \n🚝 :monorail:               🚃 :railway_car:                🚎 :trolleybus:                \n🎫 :ticket:                 ⛽️ :fuelpump:                   🚦 :vertical_traffic_light:    \n🚥 :traffic_light:          ⚠️ :warning:                    🚧 :construction:              \n🔰 :beginner:               🏧 :atm:                        🎰 :slot_machine:              \n🚏 :busstop:                💈 :barber:                     ♨️ :hotsprings:                \n🏁 :checkered_flag:         🎌 :crossed_flags:              🏮 :izakaya_lantern:           \n🗿 :moyai:                  🎪 :circus_tent:                🎭 :performing_arts:           \n📍 :round_pushpin:          🚩 :triangular_flag_on_post:    🇯🇵 :jp:                        \n🇰🇷 :kr:                     🇨🇳 :cn:                         🇺🇸 :us:                        \n🇫🇷 :fr:                     🇪🇸 :es:                         🇮🇹 :it:                        \n🇷🇺 :ru:                     🇬🇧 :gb:                         🇬🇧 :uk:                        \n🇩🇪 :de:                                                                                  \n\n# 符号\n1️⃣ :one:                                2️⃣ :two:                           3️⃣ :three:                        \n4️⃣ :four:                               5️⃣ :five:                          6️⃣ :six:                          \n7️⃣ :seven:                              8️⃣ :eight:                         9️⃣ :nine:                         \n🔟 :keycap_ten:                         🔢 :1234:                          0️⃣ :zero:                         \n#️⃣ :hash:                               🔣 :symbols:                       ◀️ :arrow_backward:               \n⬇️ :arrow_down:                         ▶️ :arrow_forward:                 ⬅️ :arrow_left:                   \n🔠 :capital_abcd:                       🔡 :abcd:                          🔤 :abc:                          \n↙️ :arrow_lower_left:                   ↘️ :arrow_lower_right:             ➡️ :arrow_right:                  \n⬆️ :arrow_up:                           ↖️ :arrow_upper_left:              ↗️ :arrow_upper_right:            \n⏬ :arrow_double_down:                  ⏫ :arrow_double_up:               🔽 :arrow_down_small:             \n⤵️ :arrow_heading_down:                 ⤴️ :arrow_heading_up:              ↩️ :leftwards_arrow_with_hook:    \n↪️ :arrow_right_hook:                   ↔️ :left_right_arrow:              ↕️ :arrow_up_down:                \n🔼 :arrow_up_small:                     🔃 :arrows_clockwise:              🔄 :arrows_counterclockwise:      \n⏪ :rewind:                             ⏩ :fast_forward:                  ℹ️ :information_source:           \n🆗 :ok:                                 🔀 :twisted_rightwards_arrows:     🔁 :repeat:                       \n🔂 :repeat_one:                         🆕 :new:                           🔝 :top:                          \n🆙 :up:                                 🆒 :cool:                          🆓 :free:                         \n🆖 :ng:                                 🎦 :cinema:                        🈁 :koko:                         \n📶 :signal_strength:                    :u5272: :u5272:                   :u5408: :u5408:                  \n:u55b6: :u55b6:                        :u6307: :u6307:                   :u6708: :u6708:                  \n:u6709: :u6709:                        🈵 :u6e80:                         :u7121: :u7121:                  \n:u7533: :u7533:                        :u7a7a: :u7a7a:                   :u7981: :u7981:                  \n🈂️ :sa:                                 🚻 :restroom:                      🚹 :mens:                         \n🚺 :womens:                             🚼 :baby_symbol:                   🚭 :no_smoking:                   \n🅿️ :parking:                            ♿️ :wheelchair:                    🚇 :metro:                        \n🛄 :baggage_claim:                      🉑 :accept:                        🚾 :wc:                           \n🚰 :potable_water:                      🚮 :put_litter_in_its_place:       ㊙️ :secret:                       \n㊗️ :congratulations:                    ⓜ️ :m:                             🛂 :passport_control:             \n🛅 :left_luggage:                       🛃 :customs:                       🉐 :ideograph_advantage:          \n🆑 :cl:                                 🆘 :sos:                           🆔 :id:                           \n🚫 :no_entry_sign:                      🔞 :underage:                      📵 :no_mobile_phones:             \n🚯 :do_not_litter:                      🚱 :non-potable_water:             🚳 :no_bicycles:                  \n🚷 :no_pedestrians:                     🚸 :children_crossing:             ⛔️ :no_entry:                     \n✳️ :eight_spoked_asterisk:              ✴️ :eight_pointed_black_star:      💟 :heart_decoration:             \n🆚 :vs:                                 📳 :vibration_mode:                📴 :mobile_phone_off:             \n💹 :chart:                              💱 :currency_exchange:             ♈️ :aries:                        \n♉️ :taurus:                             ♊️ :gemini:                        ♋️ :cancer:                       \n♌️ :leo:                                ♍️ :virgo:                         ♎️ :libra:                        \n♏️ :scorpius:                           ♐️ :sagittarius:                   ♑️ :capricorn:                    \n♒️ :aquarius:                           ♓️ :pisces:                        ⛎ :ophiuchus:                    \n🔯 :six_pointed_star:                   ❎ :negative_squared_cross_mark:   🅰️ :a:                            \n🅱️ :b:                                  🆎 :ab:                            🅾️ :o2:                           \n💠 :diamond_shape_with_a_dot_inside:    ♻️ :recycle:                       🔚 :end:                          \n🔛 :on:                                 🔜 :soon:                          🕐 :clock1:                       \n🕜 :clock130:                           🕙 :clock10:                       🕥 :clock1030:                    \n🕚 :clock11:                            🕦 :clock1130:                     🕛 :clock12:                      \n🕧 :clock1230:                          🕑 :clock2:                        🕝 :clock230:                     \n🕒 :clock3:                             🕞 :clock330:                      🕓 :clock4:                       \n🕟 :clock430:                           🕔 :clock5:                        🕠 :clock530:                     \n🕕 :clock6:                             🕡 :clock630:                      🕖 :clock7:                       \n🕢 :clock730:                           🕗 :clock8:                        🕣 :clock830:                     \n🕘 :clock9:                             🕤 :clock930:                      💲 :heavy_dollar_sign:            \n©️ :copyright:                          ®️ :registered:                    ™️ :tm:                           \n❌ :x:                                  ❗️ :heavy_exclamation_mark:        ‼️ :bangbang:                     \n⁉️ :interrobang:                        ⭕️ :o:                             ✖️ :heavy_multiplication_x:       \n➕ :heavy_plus_sign:                    ➖ :heavy_minus_sign:              ➗ :heavy_division_sign:          \n💮 :white_flower:                       💯 :100:                           ✔️ :heavy_check_mark:             \n☑️ :ballot_box_with_check:              🔘 :radio_button:                  🔗 :link:                         \n➰ :curly_loop:                         〰️ :wavy_dash:                     〽️ :part_alternation_mark:        \n🔱 :trident:                            :black_square: :black_square:     :white_square: :white_square:    \n✅ :white_check_mark:                   🔲 :black_square_button:           🔳 :white_square_button:          \n⚫️ :black_circle:                       ⚪️ :white_circle:                  🔴 :red_circle:                   \n🔵 :large_blue_circle:                  🔷 :large_blue_diamond:            🔶 :large_orange_diamond:         \n🔹 :small_blue_diamond:                 🔸 :small_orange_diamond:          🔺 :small_red_triangle:           \n🔻 :small_red_triangle_down:            :shipit: :shipit:",charsets:{cjk:!0}},{title:"跨域",frontmatter:{},regularPath:"/web/kuayu.html",relativePath:"web/kuayu.md",key:"v-35f39ada",path:"/web/kuayu.html",lastUpdated:"2/4/2021, 12:52:07 AM",headersStr:null,content:"# 跨域",normalizedContent:"# 跨域",charsets:{cjk:!0}},{title:"什么是代理",frontmatter:{},regularPath:"/web/proxy.html",relativePath:"web/proxy.md",key:"v-4cb1a2b3",path:"/web/proxy.html",lastUpdated:"2/4/2021, 12:52:07 AM",headersStr:null,content:"# 什么是代理\n代理其实就是一个中介,A和B本来可以直连,中间插入一个C,C就是中介. 刚开始的时候,代理多数是帮助内网client访问外网server用的\n\n# 正向代理\n正向代理类似一个跳板机，代理访问外部资源.\n\n最常见的就是翻墙工具以及vpn,甚至可以理解正向代理就是伪装\n\n> 买票的黄牛\n\n\nA(客户端)想租C(服务端)的房子,但是A(客户端)并不认识C(服务端)租不到。 B(代理)认识C(服务端)能租这个房子所以你找了B(代理)帮忙租到了这个房子。\n\n这个过程中C(服务端)不认识A(客户端)只认识B(代理) C(服务端)并不知道A(客户端)租了房子，只知道房子租给了B(代理)。\n\n就是现在的贝壳租房\n\n\n\n正向代理的用途：\n\n（1）访问原来无法访问的资源，如google\n\n​ （2） 可以做缓存，加速访问资源\n\n（3）对客户端访问授权，上网进行认证\n\n（4）代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息]\n\n# 反向代理\n反向代理（Reverse Proxy）实际运行方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器\n\n说白了就是让客户端访问不同的网站,客户端的感知就是一个服务器,其实后面是更多的服务器集结到了一台服务器上\n\n> 租房的代理\n\n\nA(客户端)想租一个房子,B(代理)就把这个房子租给了他。 这时候实际上C(服务端)才是房东。 B(代理)是中介把这个房子租给了A(客户端)。\n\n就是现在的链家\n\n\n\n# 反向代理的作用：\n（1）保证内网的安全，阻止web攻击，大型网站，通常将反向代理作为公网访问地址，Web服务器是内网\n\n（2）负载均衡，通过反向代理服务器来优化网站的负载",normalizedContent:"# 什么是代理\n代理其实就是一个中介,a和b本来可以直连,中间插入一个c,c就是中介. 刚开始的时候,代理多数是帮助内网client访问外网server用的\n\n# 正向代理\n正向代理类似一个跳板机，代理访问外部资源.\n\n最常见的就是翻墙工具以及vpn,甚至可以理解正向代理就是伪装\n\n> 买票的黄牛\n\n\na(客户端)想租c(服务端)的房子,但是a(客户端)并不认识c(服务端)租不到。 b(代理)认识c(服务端)能租这个房子所以你找了b(代理)帮忙租到了这个房子。\n\n这个过程中c(服务端)不认识a(客户端)只认识b(代理) c(服务端)并不知道a(客户端)租了房子，只知道房子租给了b(代理)。\n\n就是现在的贝壳租房\n\n\n\n正向代理的用途：\n\n（1）访问原来无法访问的资源，如google\n\n​ （2） 可以做缓存，加速访问资源\n\n（3）对客户端访问授权，上网进行认证\n\n（4）代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息]\n\n# 反向代理\n反向代理（reverse proxy）实际运行方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器\n\n说白了就是让客户端访问不同的网站,客户端的感知就是一个服务器,其实后面是更多的服务器集结到了一台服务器上\n\n> 租房的代理\n\n\na(客户端)想租一个房子,b(代理)就把这个房子租给了他。 这时候实际上c(服务端)才是房东。 b(代理)是中介把这个房子租给了a(客户端)。\n\n就是现在的链家\n\n\n\n# 反向代理的作用：\n（1）保证内网的安全，阻止web攻击，大型网站，通常将反向代理作为公网访问地址，web服务器是内网\n\n（2）负载均衡，通过反向代理服务器来优化网站的负载",charsets:{cjk:!0}},{title:"webpack 打包优化",frontmatter:{},regularPath:"/web/webpack.html",relativePath:"web/webpack.md",key:"v-4d46d953",path:"/web/webpack.html",headers:[{level:2,title:"按需加载",slug:"按需加载",normalizedTitle:"按需加载",charIndex:74},{level:3,title:"路由按需加载",slug:"路由按需加载",normalizedTitle:"路由按需加载",charIndex:81},{level:3,title:"第三方组件和插件,按需引入第三方组件",slug:"第三方组件和插件-按需引入第三方组件",normalizedTitle:"第三方组件和插件,按需引入第三方组件",charIndex:377},{level:3,title:"对于一些插件,如果只是个别组件中使用到就不要在main.js或者main.ts中引入了",slug:"对于一些插件-如果只是个别组件中使用到就不要在main-js或者main-ts中引入了",normalizedTitle:"对于一些插件,如果只是个别组件中使用到就不要在main.js或者main.ts中引入了",charIndex:582},{level:2,title:"优化 loader 配置",slug:"优化-loader-配置",normalizedTitle:"优化 loader 配置",charIndex:722},{level:2,title:"优化文件路径",slug:"优化文件路径",normalizedTitle:"优化文件路径",charIndex:808},{level:2,title:"生产环境关闭 sourceMap",slug:"生产环境关闭-sourcemap",normalizedTitle:"生产环境关闭 sourcemap",charIndex:1257},{level:2,title:"代码压缩",slug:"代码压缩",normalizedTitle:"代码压缩",charIndex:1399},{level:3,title:"引入 webpack-bundle-analyzer 分析打包后的文件",slug:"引入-webpack-bundle-analyzer-分析打包后的文件",normalizedTitle:"引入 webpack-bundle-analyzer 分析打包后的文件",charIndex:3207},{level:2,title:"CDN 加速",slug:"cdn-加速",normalizedTitle:"cdn 加速",charIndex:3807},{level:2,title:"使用HappyPack多进程解析",slug:"使用happypack多进程解析",normalizedTitle:"使用happypack多进程解析",charIndex:3942},{level:2,title:"TreeShaking",slug:"treeshaking",normalizedTitle:"treeshaking",charIndex:5232}],lastUpdated:"2/4/2021, 12:52:07 AM",headersStr:"按需加载 路由按需加载 第三方组件和插件,按需引入第三方组件 对于一些插件,如果只是个别组件中使用到就不要在main.js或者main.ts中引入了 优化 loader 配置 优化文件路径 生产环境关闭 sourceMap 代码压缩 引入 webpack-bundle-analyzer 分析打包后的文件 CDN 加速 使用HappyPack多进程解析 TreeShaking",content:'# webpack 打包优化\n# 目的:\n * 减小打包后的文件大小\n * 优化 webpack 打包时间\n * 加快首屏加载\n\n# 优化方式\n# 按需加载\n# 路由按需加载\nconst OtherRouter = [\n  {\n    path: "/test",\n    name: "Test",\n    component: () => import(/* webpackChunkName: "test" */ "@/views/Test.vue"),\n  },\n  {\n    path: "/config",\n    name: "config",\n    component: () => import("@/views/other/config.vue"),\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 第三方组件和插件,按需引入第三方组件\nimport Vue from "vue";\nimport { Button, Select } from "element-ui";\nimport App from "./App.vue";\n\nVue.component(Button.name, Button);\nVue.component(Select.name, Select);\n\n\n1\n2\n3\n4\n5\n6\n# 对于一些插件,如果只是个别组件中使用到就不要在main.js或者main.ts中引入了\n- import Vditor from \'vditor\'\n- Vue.use(Vditor)\n//组件内\n+ import Vditor from \'vditor\'\n\n\n1\n2\n3\n4\n# 优化 loader 配置\n * 优化正则匹配\n * 通过 cacheDirectory 选项开启缓存\n * 通过 include、exclude 来减少被处理的文件\n\n# 优化文件路径\n * extension 配置之后可以不用在 require 或是 import 的时候加文件扩展名,会依次尝试添加扩展名进行匹配。\n * mainFiles 配置后不用加入文件名，会依次尝试添加的文件名进行匹配\n * alias 通过配置别名可以加快 webpack 查找模块的速度\n\n> vue\n\n\n  resolve: {\n    extensions: [\'.js\', \'.vue\', \'.json\'],\n    alias: {\n      \'vue$\': \'vue/dist/vue.esm.js\',\n      \'@\': resolve(\'src\'),\n    }\n  },\n\n\n1\n2\n3\n4\n5\n6\n7\n> angular\n\n\ntsconfig.json\n\n "paths": {\n      "@service/*": ["app/service/*"],\n      "@pipes/*": ["app/pipes/*"]\n    },\n\n\n1\n2\n3\n4\n# 生产环境关闭 sourceMap\n * sourceMap 本质上是一种映射关系，打包出来的 js 文件中的代码可以映射到代码文件的具体位置,这种映射关系会帮助我们直接找到在源代码中的错误\n * 打包速度减慢，生产文件变大，所以开发环境使用 sourceMap，生产环境则关闭\n\n# 代码压缩\n * UglifyJS: vue-cli 默认使用的压缩代码方式，它使用的是单线程压缩代码，打包时间较慢\n * ParallelUglifyPlugin: 开启多个子进程，把对多个文件压缩的工作分别给多个子进程去完成\n\nnpm i -D webpack-parallel-uglify-plugin\n\n\n1\nwebpack.prod.js文件配置如下\n\nconst path = require("path");\nconst webpackConfig = require("./webpack.config.js");\nconst WebpackMerge = require("webpack-merge");\nconst CopyWebpackPlugin = require("copy-webpack-plugin");\nconst OptimizeCssAssetsPlugin = require("optimize-css-assets-webpack-plugin");\n// const UglifyJsPlugin = require(\'uglifyjs-webpack-plugin\')\nconst ParallelUglifyPlugin = require("webpack-parallel-uglify-plugin");\n\nmodule.exports = WebpackMerge(webpackConfig, {\n  mode: "production",\n  devtool: "cheap-module-source-map",\n  plugins: [\n    new CopyWebpackPlugin([\n      {\n        from: path.resolve(__dirname, "../public"),\n        to: path.resolve(__dirname, "../dist"),\n      },\n    ]),\n  ],\n  optimization: {\n    minimizer: [\n      // new UglifyJsPlugin({//压缩js\n      //   cache:true,\n      //   parallel:true,\n      //   sourceMap:true\n      // }),\n      new ParallelUglifyPlugin({\n        cacheDir: ".cache/",\n        uglifyJS: {\n          output: {\n            comments: false,\n            beautify: false,\n          },\n          compress: {\n            drop_console: true,\n            collapse_vars: true,\n            reduce_vars: true,\n          },\n        },\n      }),\n      new OptimizeCssAssetsPlugin({}),\n    ],\n    splitChunks: {\n      chunks: "all",\n      cacheGroups: {\n        libs: {\n          name: "chunk-libs",\n          test: /[\\\\/]node_modules[\\\\/]/,\n          priority: 10,\n          chunks: "initial", // 只打包初始时依赖的第三方\n        },\n      },\n    },\n  },\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n> # 引入 webpack-bundle-analyzer 分析打包后的文件\n\nwebpack-bundle-analyzer将打包后的内容束展示为方便交互的直观树状图，让我们知道我们所构建包中真正引入的内容\n\nnpm i -D webpack-bundle-analyzer\n\n\n1\n在webpack.prod.js中加入代码\n\nconst BundleAnalyzerPlugin = require("webpack-bundle-analyzer").BundleAnalyzerPlugin;\n\n plugins:[\n  ...,\n  new BundleAnalyzerPlugin({\n      analyzerHost:\'127.0.0.1\',\n      analyzerPort: 8889\n    })\n  ],\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n在 package.json 中加入配置\n\n"analyz": "NODE_ENV=production npm_config_report=true npm run build"\n\n\n1\nwindows 请安装\n\nnpm i -D cross-env\n"analyz": "cross-env NODE_ENV=production npm_config_report=true npm run build"\n\n\n1\n2\n# CDN 加速\n随着应用越做越大,第三方包越来越多,构建的文件肯定随之越来越大,加上又是单页应用,就会导致网速过慢或者贷款有限的情况会由于较长时间的白屏\n\nvue,vue-router,vuex,axios....\n\n> 目前常用的 cdn 加速网站 UNPKG\n\n\n# 使用HappyPack多进程解析\n * 由于运行在 Node.js 之上的 Webpack 是单线程模型的，所以 Webpack 需要处理的事情需要一件一件的做，不能多件事一起做。\n * HappyPack 就能让 Webpack 把任务分解给多个子进程去并发的执行，子进程处理完后再把结果发送给主进程\n * HappyPack 对 file-loader、url-loader 支持的不友好，所以不建议对该 loader 使用。\n\n> 使用方法\n\n\n1、HappyPack 插件安装： npm i -D happypack 2、webpack.base.conf.js 文件对 module.rules 进行配置\n\nmodule: {\n  rules: [\n    {\n      test: /\\.js$/,\n      use: ["happypack/loader?id=babel"],\n      include: [resolve("src"), resolve("test")],\n      exclude: path.resolve(__dirname, "node_modules"),\n    },\n    {\n      test: /\\.vue$/,\n      use: ["happypack/loader?id=vue"],\n    },\n  ];\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n3、在生产环境 webpack.prod.conf.js 文件进行配置\n\nconst HappyPack = require("happypack");\n// 构造出共享进程池，在进程池中包含5个子进程\nconst HappyPackThreadPool = HappyPack.ThreadPool({ size: 5 });\nplugins: [\n  new HappyPack({\n    // 用唯一的标识符id，来代表当前的HappyPack是用来处理一类特定的文件\n    id: "babel",\n    // 如何处理.js文件，用法和Loader配置中一样\n    loaders: ["babel-loader?cacheDirectory"],\n    threadPool: HappyPackThreadPool,\n  }),\n  new HappyPack({\n    id: "vue", // 用唯一的标识符id，来代表当前的HappyPack是用来处理一类特定的文件\n    loaders: [\n      {\n        loader: "vue-loader",\n        options: vueLoaderConfig,\n      },\n    ],\n    threadPool: HappyPackThreadPool,\n  }),\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# TreeShaking\n这里单独提一下tree-shaking,是因为这里有个坑。tree-shaking的主要作用是用来清除代码中无用的部分。目前在webpack4我们设置mode为production的时候已经自动开启了tree-shaking。但是要想使其生效，生成的代码必须是 ES6 模块。不能使用其它类型的模块如CommonJS之流。如果使用Babel的话，这里有一个小问题，因为Babel的预案（preset）默认会将任何模块类型都转译成CommonJS类型。修正这个问题也很简单，在.babelrc文件或在webpack.config.js文件中设置modules： false就好了',normalizedContent:'# webpack 打包优化\n# 目的:\n * 减小打包后的文件大小\n * 优化 webpack 打包时间\n * 加快首屏加载\n\n# 优化方式\n# 按需加载\n# 路由按需加载\nconst otherrouter = [\n  {\n    path: "/test",\n    name: "test",\n    component: () => import(/* webpackchunkname: "test" */ "@/views/test.vue"),\n  },\n  {\n    path: "/config",\n    name: "config",\n    component: () => import("@/views/other/config.vue"),\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 第三方组件和插件,按需引入第三方组件\nimport vue from "vue";\nimport { button, select } from "element-ui";\nimport app from "./app.vue";\n\nvue.component(button.name, button);\nvue.component(select.name, select);\n\n\n1\n2\n3\n4\n5\n6\n# 对于一些插件,如果只是个别组件中使用到就不要在main.js或者main.ts中引入了\n- import vditor from \'vditor\'\n- vue.use(vditor)\n//组件内\n+ import vditor from \'vditor\'\n\n\n1\n2\n3\n4\n# 优化 loader 配置\n * 优化正则匹配\n * 通过 cachedirectory 选项开启缓存\n * 通过 include、exclude 来减少被处理的文件\n\n# 优化文件路径\n * extension 配置之后可以不用在 require 或是 import 的时候加文件扩展名,会依次尝试添加扩展名进行匹配。\n * mainfiles 配置后不用加入文件名，会依次尝试添加的文件名进行匹配\n * alias 通过配置别名可以加快 webpack 查找模块的速度\n\n> vue\n\n\n  resolve: {\n    extensions: [\'.js\', \'.vue\', \'.json\'],\n    alias: {\n      \'vue$\': \'vue/dist/vue.esm.js\',\n      \'@\': resolve(\'src\'),\n    }\n  },\n\n\n1\n2\n3\n4\n5\n6\n7\n> angular\n\n\ntsconfig.json\n\n "paths": {\n      "@service/*": ["app/service/*"],\n      "@pipes/*": ["app/pipes/*"]\n    },\n\n\n1\n2\n3\n4\n# 生产环境关闭 sourcemap\n * sourcemap 本质上是一种映射关系，打包出来的 js 文件中的代码可以映射到代码文件的具体位置,这种映射关系会帮助我们直接找到在源代码中的错误\n * 打包速度减慢，生产文件变大，所以开发环境使用 sourcemap，生产环境则关闭\n\n# 代码压缩\n * uglifyjs: vue-cli 默认使用的压缩代码方式，它使用的是单线程压缩代码，打包时间较慢\n * paralleluglifyplugin: 开启多个子进程，把对多个文件压缩的工作分别给多个子进程去完成\n\nnpm i -d webpack-parallel-uglify-plugin\n\n\n1\nwebpack.prod.js文件配置如下\n\nconst path = require("path");\nconst webpackconfig = require("./webpack.config.js");\nconst webpackmerge = require("webpack-merge");\nconst copywebpackplugin = require("copy-webpack-plugin");\nconst optimizecssassetsplugin = require("optimize-css-assets-webpack-plugin");\n// const uglifyjsplugin = require(\'uglifyjs-webpack-plugin\')\nconst paralleluglifyplugin = require("webpack-parallel-uglify-plugin");\n\nmodule.exports = webpackmerge(webpackconfig, {\n  mode: "production",\n  devtool: "cheap-module-source-map",\n  plugins: [\n    new copywebpackplugin([\n      {\n        from: path.resolve(__dirname, "../public"),\n        to: path.resolve(__dirname, "../dist"),\n      },\n    ]),\n  ],\n  optimization: {\n    minimizer: [\n      // new uglifyjsplugin({//压缩js\n      //   cache:true,\n      //   parallel:true,\n      //   sourcemap:true\n      // }),\n      new paralleluglifyplugin({\n        cachedir: ".cache/",\n        uglifyjs: {\n          output: {\n            comments: false,\n            beautify: false,\n          },\n          compress: {\n            drop_console: true,\n            collapse_vars: true,\n            reduce_vars: true,\n          },\n        },\n      }),\n      new optimizecssassetsplugin({}),\n    ],\n    splitchunks: {\n      chunks: "all",\n      cachegroups: {\n        libs: {\n          name: "chunk-libs",\n          test: /[\\\\/]node_modules[\\\\/]/,\n          priority: 10,\n          chunks: "initial", // 只打包初始时依赖的第三方\n        },\n      },\n    },\n  },\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n> # 引入 webpack-bundle-analyzer 分析打包后的文件\n\nwebpack-bundle-analyzer将打包后的内容束展示为方便交互的直观树状图，让我们知道我们所构建包中真正引入的内容\n\nnpm i -d webpack-bundle-analyzer\n\n\n1\n在webpack.prod.js中加入代码\n\nconst bundleanalyzerplugin = require("webpack-bundle-analyzer").bundleanalyzerplugin;\n\n plugins:[\n  ...,\n  new bundleanalyzerplugin({\n      analyzerhost:\'127.0.0.1\',\n      analyzerport: 8889\n    })\n  ],\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n在 package.json 中加入配置\n\n"analyz": "node_env=production npm_config_report=true npm run build"\n\n\n1\nwindows 请安装\n\nnpm i -d cross-env\n"analyz": "cross-env node_env=production npm_config_report=true npm run build"\n\n\n1\n2\n# cdn 加速\n随着应用越做越大,第三方包越来越多,构建的文件肯定随之越来越大,加上又是单页应用,就会导致网速过慢或者贷款有限的情况会由于较长时间的白屏\n\nvue,vue-router,vuex,axios....\n\n> 目前常用的 cdn 加速网站 unpkg\n\n\n# 使用happypack多进程解析\n * 由于运行在 node.js 之上的 webpack 是单线程模型的，所以 webpack 需要处理的事情需要一件一件的做，不能多件事一起做。\n * happypack 就能让 webpack 把任务分解给多个子进程去并发的执行，子进程处理完后再把结果发送给主进程\n * happypack 对 file-loader、url-loader 支持的不友好，所以不建议对该 loader 使用。\n\n> 使用方法\n\n\n1、happypack 插件安装： npm i -d happypack 2、webpack.base.conf.js 文件对 module.rules 进行配置\n\nmodule: {\n  rules: [\n    {\n      test: /\\.js$/,\n      use: ["happypack/loader?id=babel"],\n      include: [resolve("src"), resolve("test")],\n      exclude: path.resolve(__dirname, "node_modules"),\n    },\n    {\n      test: /\\.vue$/,\n      use: ["happypack/loader?id=vue"],\n    },\n  ];\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n3、在生产环境 webpack.prod.conf.js 文件进行配置\n\nconst happypack = require("happypack");\n// 构造出共享进程池，在进程池中包含5个子进程\nconst happypackthreadpool = happypack.threadpool({ size: 5 });\nplugins: [\n  new happypack({\n    // 用唯一的标识符id，来代表当前的happypack是用来处理一类特定的文件\n    id: "babel",\n    // 如何处理.js文件，用法和loader配置中一样\n    loaders: ["babel-loader?cachedirectory"],\n    threadpool: happypackthreadpool,\n  }),\n  new happypack({\n    id: "vue", // 用唯一的标识符id，来代表当前的happypack是用来处理一类特定的文件\n    loaders: [\n      {\n        loader: "vue-loader",\n        options: vueloaderconfig,\n      },\n    ],\n    threadpool: happypackthreadpool,\n  }),\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# treeshaking\n这里单独提一下tree-shaking,是因为这里有个坑。tree-shaking的主要作用是用来清除代码中无用的部分。目前在webpack4我们设置mode为production的时候已经自动开启了tree-shaking。但是要想使其生效，生成的代码必须是 es6 模块。不能使用其它类型的模块如commonjs之流。如果使用babel的话，这里有一个小问题，因为babel的预案（preset）默认会将任何模块类型都转译成commonjs类型。修正这个问题也很简单，在.babelrc文件或在webpack.config.js文件中设置modules： false就好了',charsets:{cjk:!0}},{title:"webpack一些插件",frontmatter:{},regularPath:"/webpack/",relativePath:"webpack/README.md",key:"v-9ae23868",path:"/webpack/",lastUpdated:"8/25/2021, 2:32:09 AM",headersStr:null,content:"# webpack一些插件",normalizedContent:"# webpack一些插件",charsets:{cjk:!0}},{title:"tapable",frontmatter:{},regularPath:"/webpack/tapable.html",relativePath:"webpack/tapable.md",key:"v-cff0dc1a",path:"/webpack/tapable.html",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:12},{level:2,title:"常见函数",slug:"常见函数",normalizedTitle:"常见函数",charIndex:38},{level:3,title:"Synchook(同步串行,依次执行)",slug:"synchook-同步串行-依次执行",normalizedTitle:"synchook(同步串行,依次执行)",charIndex:618},{level:3,title:"SyncBailHook(有返回值就中断)",slug:"syncbailhook-有返回值就中断",normalizedTitle:"syncbailhook(有返回值就中断)",charIndex:1186},{level:3,title:"SyncWaterfallHook",slug:"syncwaterfallhook",normalizedTitle:"syncwaterfallhook",charIndex:88}],lastUpdated:"8/25/2021, 6:41:49 AM",headersStr:"安装 常见函数 Synchook(同步串行,依次执行) SyncBailHook(有返回值就中断) SyncWaterfallHook",content:'# tapable\n# 安装\nyarn add tapable\n\n\n1\n# 常见函数\nimport {\n    SyncHook,\n    SyncBailHook,\n    SyncWaterfallHook,\n    SyncLoopHook,\n    AsyncParallelHook,\n    AsyncParallelBailHook,\n    AsyncSeriesHook,\n    AsyncSeriesBailHook,\n    AsyncSeriesWaterfallHook\n } form \'tapable\';\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * call:(...args)=>void当你钩子触发之前,就是call()之前,就会触发这个函数,你可以访问钩子的参数,多个钩子执行一次\n * tap:(tap:Tap)=>void每个钩子执行之前,就会触发这个函数\n * loop:(...args) => void 这个会为你的每一个循环钩子(LoopHook, 就是类型到Loop的)触发\n * register:(tap: Tap) => Tap | undefined 每添加一个Tap都会触发 你interceptor上的register,你下一个拦截器的register 函数得到的参数 取决于你上一个register返回的值,所以你最好返回一个 tap 钩子\n\n# Synchook(同步串行,依次执行)\n * 说明 同步串行,在触发事件之前,会依次执行注册的所有事件的处理函数.其原理是将监听(订阅)的函数存放到一个数组中,发布时遍历数组中的监听函数并且将发布时的argument传递给监听函数\n\nnew SyncHook([arg1,arg2,...])\n\n\n1\n> hooks接受一个数组,参数为执行的回调时间所需要的参数名\n\n\n * 示例\n\n  \n\nimport { SyncHook } from "tapable";\n\n\nconst hook = new SyncHook([\'name\', \'sex\'])\n\n\nhook.tap(\'printName\', (name: string) => {\n\n console.log(\'我的名字是\' + name);\n\n})\n\n\nhook.tap("printSex", (name: string, sex: string) => {\n\n console.log("我的性别是", sex);\n\n})\n\n\nhook.call("张三", "男")\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n> 结果\n\n\n我的名字是张三\n\n我的性别是 男\n\n\n1\n2\n3\n# SyncBailHook(有返回值就中断)\n * 说明 同步串行,当注册事件无返回值,或者返回undefined的时候执行之后的注册事件,否则中断\n\n> 意思就是有返回值就中断后面的方法执行\n\n\n * 示例\n\nimport { SyncBailHook } from "tapable";\n\n\nconst hook = new SyncBailHook([\'name\', \'sex\', \'age\'])\n\n\nhook.tap("printName", (name) => {\n\n const nameStr = "我的名字是" + name\n\n console.log(nameStr);\n\n return nameStr\n\n})\n\n\nhook.tap("printSex", (name, sex) => {\n\n const sexStr = "我的性别是" + sex\n\n console.log(sexStr);\n\n})\n\n\nhook.tap("printAge", (name, sex, age) => {\n\n const ageStr = "我的年纪是" + age\n\n console.log(ageStr);\n\n})\n\n\nhook.call("张三", "男", 29)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n> 结果\n\n\n我的名字是张三\n\n\n1\n# SyncWaterfallHook\n * 说明 同步瀑布流,依次执行注册所有事件,并且将上个事件的执行结果作为下一个事件的入参\n * 示例\n\nimport { SyncWaterfallHook } from "tapable"\n\n\nconst hook = new SyncWaterfallHook(["name", "sex", "age"])\n\nhook.tap(\'printName\', (name: string, sex: any, age: any) => {\n const nameStr = \'我的名字是\' + name;\n console.log(nameStr);\n return { sex, age };\n})\n\nhook.tap(\'printSex\', (data: any) => {\n const sexStr = \'我的性别 \' + data.sex;\n console.log(sexStr);\n console.log(data.name);\n return data.age;\n\n})\n\nhook.tap(\'printAge\', (age) => {\n const ageStr = \'我的年纪\' + age;\n console.log(ageStr);\n})\n\nhook.call("张三", "男", 27)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n> 结果\n\n\n我的名字是张三\n\n我的性别 男\n\nundefined\n\n我的年纪27\n\n\n1\n2\n3\n4\n5\n6\n7',normalizedContent:'# tapable\n# 安装\nyarn add tapable\n\n\n1\n# 常见函数\nimport {\n    synchook,\n    syncbailhook,\n    syncwaterfallhook,\n    syncloophook,\n    asyncparallelhook,\n    asyncparallelbailhook,\n    asyncserieshook,\n    asyncseriesbailhook,\n    asyncserieswaterfallhook\n } form \'tapable\';\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * call:(...args)=>void当你钩子触发之前,就是call()之前,就会触发这个函数,你可以访问钩子的参数,多个钩子执行一次\n * tap:(tap:tap)=>void每个钩子执行之前,就会触发这个函数\n * loop:(...args) => void 这个会为你的每一个循环钩子(loophook, 就是类型到loop的)触发\n * register:(tap: tap) => tap | undefined 每添加一个tap都会触发 你interceptor上的register,你下一个拦截器的register 函数得到的参数 取决于你上一个register返回的值,所以你最好返回一个 tap 钩子\n\n# synchook(同步串行,依次执行)\n * 说明 同步串行,在触发事件之前,会依次执行注册的所有事件的处理函数.其原理是将监听(订阅)的函数存放到一个数组中,发布时遍历数组中的监听函数并且将发布时的argument传递给监听函数\n\nnew synchook([arg1,arg2,...])\n\n\n1\n> hooks接受一个数组,参数为执行的回调时间所需要的参数名\n\n\n * 示例\n\n  \n\nimport { synchook } from "tapable";\n\n\nconst hook = new synchook([\'name\', \'sex\'])\n\n\nhook.tap(\'printname\', (name: string) => {\n\n console.log(\'我的名字是\' + name);\n\n})\n\n\nhook.tap("printsex", (name: string, sex: string) => {\n\n console.log("我的性别是", sex);\n\n})\n\n\nhook.call("张三", "男")\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n> 结果\n\n\n我的名字是张三\n\n我的性别是 男\n\n\n1\n2\n3\n# syncbailhook(有返回值就中断)\n * 说明 同步串行,当注册事件无返回值,或者返回undefined的时候执行之后的注册事件,否则中断\n\n> 意思就是有返回值就中断后面的方法执行\n\n\n * 示例\n\nimport { syncbailhook } from "tapable";\n\n\nconst hook = new syncbailhook([\'name\', \'sex\', \'age\'])\n\n\nhook.tap("printname", (name) => {\n\n const namestr = "我的名字是" + name\n\n console.log(namestr);\n\n return namestr\n\n})\n\n\nhook.tap("printsex", (name, sex) => {\n\n const sexstr = "我的性别是" + sex\n\n console.log(sexstr);\n\n})\n\n\nhook.tap("printage", (name, sex, age) => {\n\n const agestr = "我的年纪是" + age\n\n console.log(agestr);\n\n})\n\n\nhook.call("张三", "男", 29)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n> 结果\n\n\n我的名字是张三\n\n\n1\n# syncwaterfallhook\n * 说明 同步瀑布流,依次执行注册所有事件,并且将上个事件的执行结果作为下一个事件的入参\n * 示例\n\nimport { syncwaterfallhook } from "tapable"\n\n\nconst hook = new syncwaterfallhook(["name", "sex", "age"])\n\nhook.tap(\'printname\', (name: string, sex: any, age: any) => {\n const namestr = \'我的名字是\' + name;\n console.log(namestr);\n return { sex, age };\n})\n\nhook.tap(\'printsex\', (data: any) => {\n const sexstr = \'我的性别 \' + data.sex;\n console.log(sexstr);\n console.log(data.name);\n return data.age;\n\n})\n\nhook.tap(\'printage\', (age) => {\n const agestr = \'我的年纪\' + age;\n console.log(agestr);\n})\n\nhook.call("张三", "男", 27)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n> 结果\n\n\n我的名字是张三\n\n我的性别 男\n\nundefined\n\n我的年纪27\n\n\n1\n2\n3\n4\n5\n6\n7',charsets:{cjk:!0}}],themeConfig:{nav:[{text:"首页",link:"/"},{text:"前端",items:[{text:"Web",link:"/web/"},{text:"JavaScript",link:"/javascript/"},{text:"Angular",link:"/angular/"},{text:"Vue",link:"/vue/"},{text:"Vite",link:"/vite/"},{text:"React",link:"/react/"},{text:"Vue-Next",link:"/vue-next/"},{text:"Nodejs",link:"/nodejs/"},{text:"Typescript",link:"/typescript/"},{text:"面试",link:"/interview/"}]},{text:"Go",items:[{text:"介绍",link:"/go/"},{text:"40天",link:"/go-40/"}]},{text:"Flutter",items:[{text:"基础",link:"/flutter/"},{text:"插件",link:"/flutter-plugin/"},{text:"深入",link:"/flutter-deep/"}]},{text:"规范",link:"/specification/"},{text:"Github",link:"https://github.com/UvDream"}],sidebar:{"/typescript/":[{title:"Web",collapsable:!1,children:["","base-type","类型推断和兼容","types自动生成"]}],"/nodejs/":[{title:"Web",collapsable:!1,children:["","nrm","package"]}],"/web/":[{title:"Web",collapsable:!1,children:["","css","kuayu","webpack","emoji","common-css"]}],"/javascript/":[{title:"JavaScript",collapsable:!1,children:["","js1","closure","design","canvas","canvas_api"]}],"/vue/":[{title:"Vue",collapsable:!1,children:["","vue1","vue2"]}],"/vue-next/":[{title:"Vue-next",collapsable:!1,children:["","vue-vite","vue-api"]}],"/react/":[{title:"React",collapsable:!1,children:["","props","vscode","life","other","redux"]}],"/specification/":[{title:"代码规范",collapsable:!1,children:["","git"]}],"/interview/":[{title:"面试",collapsable:!1,children:["","css","javascript","vue","typescript","react","code","type","http","catch"]}],"/flutter/":[{title:"Flutter",collapsable:!1,children:["","flutter1","vscode","dio","iconfont","state","model","flare","build","other"]}],"/flutter-plugin/":[{title:"Flutter插件",collapsable:!1,children:["","shared_preferences","provider"]}]},sidebarDepth:2,lastUpdated:"最后更新时间"}};t(308);Oo.component("Badge",(function(){return Promise.all([t.e(0),t.e(8)]).then(t.bind(null,501))})),Oo.component("CodeBlock",(function(){return Promise.all([t.e(0),t.e(9)]).then(t.bind(null,427))})),Oo.component("CodeGroup",(function(){return Promise.all([t.e(0),t.e(10)]).then(t.bind(null,428))}));t(309),t(310);var gs={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:function(){return{scrollTop:null}},computed:{show:function(){return this.scrollTop>this.threshold}},mounted:function(){var n=this;this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",ts()((function(){n.scrollTop=n.getScrollTop()}),100))},methods:{getScrollTop:function(){return window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0},scrollToTop:function(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},bs=(t(311),Object(fs.a)(gs,(function(){var n=this.$createElement,e=this._self._c||n;return e("transition",{attrs:{name:"fade"}},[this.show?e("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[e("g",{attrs:{transform:"translate(-229 -126.358)"}},[e("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),e("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports),ys=[{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{},function(n){n.Vue.component("BackToTop",bs)}],xs=["BackToTop"];t(173);t(165);function ws(n,e){return(ws=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}t(166);function _s(n){return(_s=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}t(112),t(105);function ks(n,e){return!e||"object"!==Ti(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function js(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,r=_s(n);if(e){var o=_s(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return ks(this,t)}}var Ts=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&ws(n,e)}(t,n);var e=js(t);function t(){return ss(this,t),e.apply(this,arguments)}return t}(function(){function n(){ss(this,n),this.store=new Oo({data:{state:{}}})}return cs(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){Oo.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(Ts.prototype,{getPageAsyncComponent:Bi,getLayoutAsyncComponent:Ui,getAsyncComponent:Vi,getVueComponent:Hi});var Ss={install:function(n){var e=new Ts;n.$vuepress=e,n.prototype.$vuepress=e}};function Cs(n){n.beforeEach((function(e,t,r){if(Is(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var o=e.path.replace(/\/$/,"")+".html";Is(n,o)?r(o):r()}else r();else{var a=e.path+"/",i=e.path+".html";Is(n,i)?r(i):Is(n,a)?r(a):r()}}))}function Is(n,e){return n.options.routes.filter((function(n){return n.path.toLowerCase()===e.toLowerCase()})).length>0}var Ps={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return Wi("pageKey",e),Oo.component(e)||Oo.component(e,Bi(e)),Oo.component(e)?n(e):n("")}},Es={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,r=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},r()[t.slotKey])}},As={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},zs=(t(313),t(314),Object(fs.a)(As,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function Os(){return(Os=Object(r.a)(regeneratorRuntime.mark((function n(e){var t,r,o,a;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:vs.routerBase||vs.base,Cs(r=new ki({base:t,mode:"history",fallback:!1,routes:hs,scrollBehavior:function(n,e,t){return t||(n.hash?!Oo.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),o={},n.prev=4,n.next=7,Promise.all(ys.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:Oo,options:o,router:r,siteData:vs,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return a=new Oo(Object.assign(o,{router:r,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},xs.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:a,router:r});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}Oo.config.productionTip=!1,Oo.use(ki),Oo.use(Ss),Oo.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Oo;ji(e),t.$vuepress.$set("siteData",e);var r=n(t.$vuepress.$get("siteData")),o=new r,a=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),i={};return Object.keys(a).reduce((function(n,e){return e.startsWith("$")&&(n[e]=a[e].get),n}),i),{computed:i}}((function(n){return function(){function e(){ss(this,e)}return cs(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,r=void 0===t?{}:t;for(var o in r)"/"===o?e=r[o]:0===this.$page.path.indexOf(o)&&(n=r[o]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),vs)),Oo.component("Content",Ps),Oo.component("ContentSlotsDistributor",Es),Oo.component("OutboundLink",zs),Oo.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,r=e.children;if(t._isMounted)return r;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),Oo.component("Layout",Ui("Layout")),Oo.component("NotFound",Ui("NotFound")),Oo.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.7.1",hash:"bfd7aa6"},function(n){return Os.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);